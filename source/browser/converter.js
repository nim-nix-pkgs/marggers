/* Generated by the Nim Compiler v1.6.0 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI620756996 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637535316 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI637535298 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1056964707 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1140850691 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1140850692 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1140850693 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1140850694 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1140850695 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1107296264 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296262 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1107296259 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1107296299 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1107296260 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1124073942 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554438 = {size: 0,kind: 2,base: null,node: null,finalizer: null};
var NTI1157627909 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1124073497 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073496 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073495 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073494 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073492 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073487 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073486 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073485 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073484 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073483 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI1124073482 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1124073481 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1157627908 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1090519046 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1090519052 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI1090519045 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1090519044 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1090519043 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1090519047 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI1056964692 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1056964776 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1056964647 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534244 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534264 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI637534267 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI637534268 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI721420349 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964687 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI989855747 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI1056964685 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964682 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI1056964679 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964668 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI1056964671 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI1056964669 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI1056964744 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554466 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555129 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI33555129 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555129.node = NNI33555129;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555129.base = NTI33555113;
var NNI1056964668 = {kind: 2, offset: 0, typ: null, name: null, len: 26, sons: {"0": {kind: 1, offset: 0, typ: NTI1056964668, name: "noTag", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1056964668, name: "p", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1056964668, name: "br", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1056964668, name: "h1", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1056964668, name: "h2", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1056964668, name: "h3", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1056964668, name: "h4", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1056964668, name: "h5", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1056964668, name: "h6", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1056964668, name: "ul", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1056964668, name: "ol", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1056964668, name: "li", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1056964668, name: "blockquote", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1056964668, name: "sup", len: 0, sons: null}, 
"14": {kind: 1, offset: 14, typ: NTI1056964668, name: "sub", len: 0, sons: null}, 
"15": {kind: 1, offset: 15, typ: NTI1056964668, name: "em", len: 0, sons: null}, 
"16": {kind: 1, offset: 16, typ: NTI1056964668, name: "strong", len: 0, sons: null}, 
"17": {kind: 1, offset: 17, typ: NTI1056964668, name: "pre", len: 0, sons: null}, 
"18": {kind: 1, offset: 18, typ: NTI1056964668, name: "code", len: 0, sons: null}, 
"19": {kind: 1, offset: 19, typ: NTI1056964668, name: "u", len: 0, sons: null}, 
"20": {kind: 1, offset: 20, typ: NTI1056964668, name: "s", len: 0, sons: null}, 
"21": {kind: 1, offset: 21, typ: NTI1056964668, name: "img", len: 0, sons: null}, 
"22": {kind: 1, offset: 22, typ: NTI1056964668, name: "input", len: 0, sons: null}, 
"23": {kind: 1, offset: 23, typ: NTI1056964668, name: "a", len: 0, sons: null}, 
"24": {kind: 1, offset: 24, typ: NTI1056964668, name: "video", len: 0, sons: null}, 
"25": {kind: 1, offset: 25, typ: NTI1056964668, name: "audio", len: 0, sons: null}}};
NTI1056964668.node = NNI1056964668;
var NNI1056964685 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI989855747, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554440, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI33554440, name: "Field3", sons: null}]};
NTI1056964685.node = NNI1056964685;
NTI1056964682.base = NTI1056964685;
var NNI1056964679 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI1056964682, name: "data", sons: null}, 
{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "first", len: 0, typ: NTI33554456, name: "first", sons: null}, 
{kind: 1, offset: "last", len: 0, typ: NTI33554456, name: "last", sons: null}]};
NTI1056964679.node = NNI1056964679;
NTI1056964687.base = NTI1056964669;
var NNI1056964671 = {kind: 3, offset: "isText", len: 2, typ: NTI33554466, name: "isText", sons: [[setConstr(1), {kind: 1, offset: "str", len: 0, typ: NTI33554440, name: "str", sons: null}], 
[setConstr(2), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "tag", len: 0, typ: NTI1056964668, name: "tag", sons: null}, 
{kind: 1, offset: "attrs", len: 0, typ: NTI1056964679, name: "attrs", sons: null}, 
{kind: 1, offset: "content", len: 0, typ: NTI1056964687, name: "content", sons: null}]}]]};
NTI1056964671.node = NNI1056964671;
NTI1056964669.base = NTI1056964671;
NTI1056964744.base = NTI1056964669;
var NNI721420349 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI721420349.node = NNI721420349;
NTI637534268.base = NTI1056964669;
var NNI637534264 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI637534264, name: "frDone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI637534264, name: "frReachedEnd", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI637534264, name: "frFailed", len: 0, sons: null}}};
NTI637534264.node = NNI637534264;
var NNI637534267 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI637534264, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI637534268, name: "Field1", sons: null}]};
NTI637534267.node = NNI637534267;
var NNI637534244 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554440, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554440, name: "Field1", sons: null}]};
NTI637534244.node = NNI637534244;
var NNI1056964647 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI1056964647.node = NNI1056964647;
NTI1056964776.base = NTI1056964669;
NTI1056964692.base = NTI1056964669;
var NNI1090519043 = {kind: 2, offset: 0, typ: null, name: null, len: 14, sons: {"0": {kind: 1, offset: 0, typ: NTI1090519043, name: "xmlError", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1090519043, name: "xmlEof", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1090519043, name: "xmlCharData", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1090519043, name: "xmlWhitespace", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1090519043, name: "xmlComment", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1090519043, name: "xmlPI", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1090519043, name: "xmlElementStart", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1090519043, name: "xmlElementEnd", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1090519043, name: "xmlElementOpen", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1090519043, name: "xmlAttribute", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI1090519043, name: "xmlElementClose", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI1090519043, name: "xmlCData", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI1090519043, name: "xmlEntity", len: 0, sons: null}, 
"13": {kind: 1, offset: 13, typ: NTI1090519043, name: "xmlSpecial", len: 0, sons: null}}};
NTI1090519043.node = NNI1090519043;
var NNI1090519044 = {kind: 2, offset: 0, typ: null, name: null, len: 10, sons: {"0": {kind: 1, offset: 0, typ: NTI1090519044, name: "errNone", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1090519044, name: "errEndOfCDataExpected", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1090519044, name: "errNameExpected", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1090519044, name: "errSemicolonExpected", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1090519044, name: "errQmGtExpected", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1090519044, name: "errGtExpected", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI1090519044, name: "errEqExpected", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI1090519044, name: "errQuoteExpected", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI1090519044, name: "errEndOfCommentExpected", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI1090519044, name: "errAttributeValueExpected", len: 0, sons: null}}};
NTI1090519044.node = NNI1090519044;
var NNI1090519045 = {kind: 2, offset: 0, typ: null, name: null, len: 5, sons: {"0": {kind: 1, offset: 0, typ: NTI1090519045, name: "stateStart", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1090519045, name: "stateNormal", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1090519045, name: "stateAttr", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1090519045, name: "stateEmptyElementTag", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1090519045, name: "stateError", len: 0, sons: null}}};
NTI1090519045.node = NNI1090519045;
var NNI1090519046 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI1090519046, name: "reportWhitespace", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1090519046, name: "reportComments", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1090519046, name: "allowUnquotedAttribs", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1090519046, name: "allowEmptyAttribs", len: 0, sons: null}}};
NTI1090519046.node = NNI1090519046;
NTI1090519052.base = NTI1090519046;
var NNI1090519047 = {kind: 2, len: 9, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554439, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554439, name: "b", sons: null}, 
{kind: 1, offset: "c", len: 0, typ: NTI33554439, name: "c", sons: null}, 
{kind: 1, offset: "kind", len: 0, typ: NTI1090519043, name: "kind", sons: null}, 
{kind: 1, offset: "err", len: 0, typ: NTI1090519044, name: "err", sons: null}, 
{kind: 1, offset: "state", len: 0, typ: NTI1090519045, name: "state", sons: null}, 
{kind: 1, offset: "cIsEmpty", len: 0, typ: NTI33554466, name: "cIsEmpty", sons: null}, 
{kind: 1, offset: "filename", len: 0, typ: NTI33554439, name: "filename", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI1090519052, name: "options", sons: null}]};
NTI1090519047.node = NNI1090519047;
var NNI1124073482 = {kind: 2, len: 10, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "closeImpl", len: 0, typ: NTI1124073483, name: "closeImpl", sons: null}, 
{kind: 1, offset: "atEndImpl", len: 0, typ: NTI1124073484, name: "atEndImpl", sons: null}, 
{kind: 1, offset: "setPositionImpl", len: 0, typ: NTI1124073485, name: "setPositionImpl", sons: null}, 
{kind: 1, offset: "getPositionImpl", len: 0, typ: NTI1124073486, name: "getPositionImpl", sons: null}, 
{kind: 1, offset: "readDataStrImpl", len: 0, typ: NTI1124073487, name: "readDataStrImpl", sons: null}, 
{kind: 1, offset: "readLineImpl", len: 0, typ: NTI1124073492, name: "readLineImpl", sons: null}, 
{kind: 1, offset: "readDataImpl", len: 0, typ: NTI1124073494, name: "readDataImpl", sons: null}, 
{kind: 1, offset: "peekDataImpl", len: 0, typ: NTI1124073495, name: "peekDataImpl", sons: null}, 
{kind: 1, offset: "writeDataImpl", len: 0, typ: NTI1124073496, name: "writeDataImpl", sons: null}, 
{kind: 1, offset: "flushImpl", len: 0, typ: NTI1124073497, name: "flushImpl", sons: null}]};
NTI1124073482.node = NNI1124073482;
NTI1124073482.base = NTI33555083;
NTI1124073481.base = NTI1124073482;
NTI1157627909.base = NTI33554438;
var NNI1157627908 = {kind: 2, len: 8, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "bufpos", len: 0, typ: NTI33554456, name: "bufpos", sons: null}, 
{kind: 1, offset: "buf", len: 0, typ: NTI33554439, name: "buf", sons: null}, 
{kind: 1, offset: "input", len: 0, typ: NTI1124073481, name: "input", sons: null}, 
{kind: 1, offset: "lineNumber", len: 0, typ: NTI33554456, name: "lineNumber", sons: null}, 
{kind: 1, offset: "sentinel", len: 0, typ: NTI33554456, name: "sentinel", sons: null}, 
{kind: 1, offset: "lineStart", len: 0, typ: NTI33554456, name: "lineStart", sons: null}, 
{kind: 1, offset: "offsetBase", len: 0, typ: NTI33554456, name: "offsetBase", sons: null}, 
{kind: 1, offset: "refillChars", len: 0, typ: NTI1157627909, name: "refillChars", sons: null}]};
NTI1157627908.node = NNI1157627908;
NTI1157627908.base = NTI33555083;
NTI1090519047.base = NTI1157627908;
var NNI1124073942 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "data", len: 0, typ: NTI33554439, name: "data", sons: null}, 
{kind: 1, offset: "pos", len: 0, typ: NTI33554456, name: "pos", sons: null}]};
NTI1124073942.node = NNI1124073942;
NTI1124073942.base = NTI1124073482;
var NNI1107296260 = {kind: 2, offset: 0, typ: null, name: null, len: 6, sons: {"0": {kind: 1, offset: 0, typ: NTI1107296260, name: "xnText", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1107296260, name: "xnVerbatimText", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1107296260, name: "xnElement", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI1107296260, name: "xnCData", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI1107296260, name: "xnEntity", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI1107296260, name: "xnComment", len: 0, sons: null}}};
NTI1107296260.node = NNI1107296260;
NTI1107296264.base = NTI1107296259;
var NNI1140850692 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554439, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554439, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI33554466, name: "Field2", sons: null}]};
NTI1140850692.node = NNI1140850692;
NTI1140850693.base = NTI1140850692;
var NNI1140850691 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"0": {kind: 1, offset: 0, typ: NTI1140850691, name: "modeCaseSensitive", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI1140850691, name: "modeCaseInsensitive", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI1140850691, name: "modeStyleInsensitive", len: 0, sons: null}}};
NTI1140850691.node = NNI1140850691;
var NNI1140850694 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "counter", len: 0, typ: NTI33554456, name: "counter", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI1140850693, name: "data", sons: null}, 
{kind: 1, offset: "mode", len: 0, typ: NTI1140850691, name: "mode", sons: null}]};
NTI1140850694.node = NNI1140850694;
NTI1140850694.base = NTI33555083;
NTI1140850695.base = NTI1140850694;
var NNI1107296262 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 3, offset: "k", len: 6, typ: NTI1107296260, name: "k", sons: [[setConstr(0, 1, 5, 3, 4), {kind: 1, offset: "fText", len: 0, typ: NTI33554439, name: "fText", sons: null}], 
[setConstr(2), {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "fTag", len: 0, typ: NTI33554439, name: "fTag", sons: null}, 
{kind: 1, offset: "s", len: 0, typ: NTI1107296264, name: "s", sons: null}, 
{kind: 1, offset: "fAttr", len: 0, typ: NTI1140850695, name: "fAttr", sons: null}]}]]}, 
{kind: 1, offset: "fClientData", len: 0, typ: NTI33554456, name: "fClientData", sons: null}]};
NTI1107296262.node = NNI1107296262;
NTI1107296259.base = NTI1107296262;
NTI1107296299.base = NTI1107296259;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;
var NNI1056964707 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554466, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI33554456, name: "Field1", sons: null}]};
NTI1056964707.node = NNI1056964707;
NTI637535298.base = NTI1056964669;
NTI637535316.base = NTI1056964669;
NTI620756996.base = NTI1056964669;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(13, 10);
var ConstSet2 = setConstr(true);

function makeNimstrLit(c_33556802) {
      var result = [];
  for (var i = 0; i < c_33556802.length; ++i) {
    result[i] = c_33556802.charCodeAt(i);
  }
  return result;
  

  
}

function toJSStr(s_33556808) {
                    var Temporary5;
            var Temporary7;

  var result_33556809 = null;

    var res_33556843 = newSeq_33556826((s_33556808).length);
    var i_33556844 = 0;
    var j_33556845 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556844 < (s_33556808).length)) break Label2;
          var c_33556846 = s_33556808[i_33556844];
          if ((c_33556846 < 128)) {
          res_33556843[j_33556845] = String.fromCharCode(c_33556846);
          i_33556844 += 1;
          }
          else {
            var helper_33556858 = newSeq_33556826(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556859 = c_33556846.toString(16);
                  if ((((code_33556859) == null ? 0 : (code_33556859).length) == 1)) {
                  helper_33556858.push("%0");;
                  }
                  else {
                  helper_33556858.push("%");;
                  }
                  
                  helper_33556858.push(code_33556859);;
                  i_33556844 += 1;
                    if (((s_33556808).length <= i_33556844)) Temporary5 = true; else {                      Temporary5 = (s_33556808[i_33556844] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556846 = s_33556808[i_33556844];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556843[j_33556845] = decodeURIComponent(helper_33556858.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556843[j_33556845] = helper_33556858.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556845 += 1;
        }
    } while (false);
    if (res_33556843.length < j_33556845) { for (var i = res_33556843.length ; i < j_33556845 ; ++i) res_33556843.push(null); }
               else { res_33556843.length = j_33556845; };
    result_33556809 = res_33556843.join("");

  return result_33556809;

}

function raiseException(e_33556668, ename_33556669) {
    e_33556668.name = ename_33556669;
    if ((excHandler == 0)) {
    unhandledException(e_33556668);
    }
    
    throw e_33556668;

  
}

function raiseFieldError2(f_33556779, discVal_33556780) {
    raiseException({message: (f_33556779 || []).concat(discVal_33556780 || [],makeNimstrLit("\'") || []), parent: null, m_type: NTI33555129, name: null, trace: [], up: null}, "FieldDefect");

  
}
var ConstSet3 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557141, src_33557142, ti_33557143) {
  var result_33557152 = null;

    switch (ti_33557143.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557132(ti_33557143))) {
      result_33557152 = src_33557142;
      }
      else {
        result_33557152 = [src_33557142[0], src_33557142[1]];
      }
      
      break;
    case 19:
            if (dest_33557141 === null || dest_33557141 === undefined) {
        dest_33557141 = {};
      }
      else {
        for (var key in dest_33557141) { delete dest_33557141[key]; }
      }
      for (var key in src_33557142) { dest_33557141[key] = src_33557142[key]; }
      result_33557152 = dest_33557141;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557143.base == null))) {
      result_33557152 = nimCopy(dest_33557141, src_33557142, ti_33557143.base);
      }
      else {
      if ((ti_33557143.kind == 17)) {
      result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {m_type: ti_33557143} : dest_33557141;
      }
      else {
        result_33557152 = (dest_33557141 === null || dest_33557141 === undefined) ? {} : dest_33557141;
      }
      }
      nimCopyAux(result_33557152, src_33557142, ti_33557143.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557142 === null) {
        result_33557152 = null;
      }
      else {
        if (dest_33557141 === null || dest_33557141 === undefined || dest_33557141.length != src_33557142.length) {
          dest_33557141 = new Array(src_33557142.length);
        }
        result_33557152 = dest_33557141;
        for (var i = 0; i < src_33557142.length; ++i) {
          result_33557152[i] = nimCopy(result_33557152[i], src_33557142[i], ti_33557143.base);
        }
      }
    
      break;
    case 28:
            if (src_33557142 !== null) {
        result_33557152 = src_33557142.slice(0);
      }
    
      break;
    default: 
      result_33557152 = src_33557142;
      break;
    }

  return result_33557152;

}

function mnewString(len_33556894) {
        return new Array(len_33556894);
  

  
}

function nimBoolToStr(x_33556515) {
  var result_33556516 = [];

    if (x_33556515) {
    result_33556516 = nimCopy(null, makeNimstrLit("true"), NTI33554439);
    }
    else {
      result_33556516 = nimCopy(null, makeNimstrLit("false"), NTI33554439);
    }
    

  return result_33556516;

}

function reprDiscriminant(e_33557410, typ_33557411) {
    var Temporary1;

  var result_33557412 = [];

    switch (typ_33557411.kind) {
    case 14:
      Temporary1 = reprEnum(e_33557410, typ_33557411);
      break;
    case 1:
      Temporary1 = nimBoolToStr(!((e_33557410 == 0)));
      break;
    default: 
      Temporary1 = HEX24_318767107(e_33557410);
      break;
    }
    result_33557412 = nimCopy(null, Temporary1, NTI33554439);

  return result_33557412;

}
var ConstSet4 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet5 = setConstr(true);
var ConstSet6 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet7 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet8 = setConstr(true);
var ConstSet9 = setConstr(true);
var ConstSet10 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet11 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet12 = setConstr([97, 122], [65, 90], [48, 57], 45, 95, 58, 46);
var ConstSet13 = setConstr(true);
var ConstSet14 = setConstr(0);
var ConstSet15 = setConstr(2, 1);
var ConstSet16 = setConstr(0);
var ConstSet17 = setConstr(2, 1);
var ConstSet18 = setConstr(0);
var ConstSet19 = setConstr(2, 1);
var ConstSet20 = setConstr(0);
var ConstSet21 = setConstr(2, 1);
var ConstSet22 = setConstr(true);
var ConstSet23 = setConstr(true);
var ConstSet24 = setConstr(9, [11, 13], 32);

function addChar(x_33557256, c_33557257) {
    x_33557256.push(c_33557257);

  
}
var ConstSet25 = setConstr(true);

function genericReset(x_33557172, ti_33557173) {
  var result_33557174 = null;

    result_33557174 = null;
    switch (ti_33557173.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (isFatPointer_33557132(ti_33557173)) {
              result_33557174 = [null, 0];
      
      }
      
      break;
    case 19:
            result_33557174 = {};
    
      break;
    case 18:
    case 17:
      if ((ti_33557173.kind == 17)) {
      result_33557174 = {m_type: ti_33557173};
      }
      else {
        result_33557174 = {};
      }
      
      break;
    case 24:
    case 27:
    case 28:
            result_33557174 = [];
    
      break;
    case 4:
    case 16:
            result_33557174 = new Array(x_33557172.length);
      for (var i = 0; i < x_33557172.length; ++i) {
        result_33557174[i] = genericReset(x_33557172[i], ti_33557173.base);
      }
    
      break;
    default: 
      break;
    }

  return result_33557174;

}
var ConstSet26 = setConstr(true);
var ConstSet27 = setConstr(true);

function cstrToNimstr(c_33556805) {
      var ln = c_33556805.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556805.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556805.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet28 = setConstr(true);
var ConstSet29 = setConstr(true);
var ConstSet30 = setConstr(true);
var ConstSet31 = setConstr(true);
var ConstSet32 = setConstr(true);
var ConstSet33 = setConstr(true);
var ConstSet34 = setConstr(true);
var ConstSet35 = setConstr(true);
var ConstSet36 = setConstr(true);
var ConstSet37 = setConstr(true);
var ConstSet38 = setConstr(true);
var ConstSet39 = setConstr(true);
var ConstSet40 = setConstr(true);
var ConstSet41 = setConstr(true);
var ConstSet42 = setConstr(true);
var ConstSet43 = setConstr(2, 1);
var ConstSet44 = setConstr(true);
var ConstSet45 = setConstr(2, 1);
var ConstSet46 = setConstr(0);
var ConstSet47 = setConstr(2, 1);
var ConstSet48 = setConstr(0, 1);
var ConstSet49 = setConstr(2, 1);
var ConstSet50 = setConstr(0);
var ConstSet51 = setConstr(2, 1);
var ConstSet52 = setConstr(0);
var ConstSet53 = setConstr(2, 1);

function nimMin(a_33556995, b_33556996) {
    var Temporary1;

  var result_33556997 = 0;

  BeforeRet: do {
    if ((a_33556995 <= b_33556996)) {
    Temporary1 = a_33556995;
    }
    else {
    Temporary1 = b_33556996;
    }
    
    result_33556997 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33556997;

}

function nimMax(a_33556999, b_33557000) {
    var Temporary1;

  var result_33557001 = 0;

  BeforeRet: do {
    if ((b_33557000 <= a_33556999)) {
    Temporary1 = a_33556999;
    }
    else {
    Temporary1 = b_33557000;
    }
    
    result_33557001 = Temporary1;
    break BeforeRet;
  } while (false);

  return result_33557001;

}
var ConstSet54 = setConstr(13, 10, 47);
var ConstSet55 = setConstr(2, 1);
var ConstSet56 = setConstr([65, 90], [97, 122], 95, 58, [128, 255]);
var ConstSet57 = setConstr([65, 90], [97, 122], [48, 57], 46, 45, 95, 58, [128, 255]);
var ConstSet58 = setConstr([65, 90], [97, 122], 95, 58, [128, 255]);
var ConstSet59 = setConstr([48, 57]);
var ConstSet60 = setConstr(2, 4, 12);

function eqStrings(a_33556932, b_33556933) {
        if (a_33556932 == b_33556933) return true;
    if (a_33556932 === null && b_33556933.length == 0) return true;
    if (b_33556933 === null && a_33556932.length == 0) return true;
    if ((!a_33556932) || (!b_33556933)) return false;
    var alen = a_33556932.length;
    if (alen != b_33556933.length) return false;
    for (var i = 0; i < alen; ++i)
      if (a_33556932[i] != b_33556933[i]) return false;
    return true;
  

  
}
var ConstSet61 = setConstr(39, 34);
var ConstSet62 = setConstr(34, 39, 96, 61, 60, 62, 32, 0, 9, 10, 12, 12);
var ConstSet63 = setConstr(2);
var ConstSet64 = setConstr(2);
var ConstSet65 = setConstr(2);
var ConstSet66 = setConstr([48, 57]);
var ConstSet67 = setConstr(0, 125);
var ConstSet68 = setConstr([48, 57]);
var ConstSet69 = setConstr([65, 90]);
var ConstSet70 = setConstr([97, 122], [65, 90], [48, 57], [128, 255], 95);
var ConstSet71 = setConstr(2);
var ConstSet72 = setConstr(0, 1, 5, 3, 4);
var ConstSet73 = setConstr(0, 1, 5, 3, 4);
    var errorMessages_1090519104 = [makeNimstrLit("no error"), makeNimstrLit("\']]>\' expected"), makeNimstrLit("name expected"), makeNimstrLit("\';\' expected"), makeNimstrLit("\'?>\' expected"), makeNimstrLit("\'>\' expected"), makeNimstrLit("\'=\' expected"), makeNimstrLit("\'\"\' or \"\'\" expected"), makeNimstrLit("\'-->\' expected"), makeNimstrLit("attribute value expected")];
var ConstSet74 = setConstr(2);
var ConstSet75 = setConstr([65, 90]);
var ConstSet76 = setConstr([65, 90]);
var ConstSet77 = setConstr(2);
var ConstSet78 = setConstr(0, 1, 5, 3, 4);
var ConstSet79 = setConstr(0, 1, 5, 3, 4);
var ConstSet80 = setConstr(true);
var ConstSet81 = setConstr(true);
var ConstSet82 = setConstr(true);
var ConstSet83 = setConstr(true);
var ConstSet84 = setConstr([65, 90], [97, 122]);
var ConstSet85 = setConstr([48, 57]);
var ConstSet86 = setConstr(true);
var ConstSet87 = setConstr(true);
var ConstSet88 = setConstr(true);
var ConstSet89 = setConstr(40, 91, 123, 58);
var ConstSet90 = setConstr([97, 122], [65, 90], [48, 57], 45, 95, 58, 46);
var ConstSet91 = setConstr(true);
var ConstSet92 = setConstr(true);
var ConstSet93 = setConstr(true);
var ConstSet94 = setConstr(true);
var ConstSet95 = setConstr([48, 57]);
var ConstSet96 = setConstr(40, 91, 123, 58);
var ConstSet97 = setConstr(true);
var ConstSet98 = setConstr(true);
var ConstSet99 = setConstr(9, [11, 12], 32);
var ConstSet100 = setConstr(9, 10, 12);
var ConstSet101 = setConstr(true);
var ConstSet102 = setConstr(true);
var ConstSet103 = setConstr(40, 91, 123, 58);
var ConstSet104 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet105 = setConstr(40, 91, 123, 58);
var ConstSet106 = setConstr(true);
var ConstSet107 = setConstr([48, 57]);
var ConstSet108 = setConstr(40, 91, 123, 58);
var ConstSet109 = setConstr(40, 91, 123, 58);
var ConstSet110 = setConstr(32, 9, 11, 13, 10, 12);
var ConstSet111 = setConstr(true);
var ConstSet112 = setConstr(true);
var ConstSet113 = setConstr(true);
var ConstSet114 = setConstr(true);
var ConstSet115 = setConstr(true);
var ConstSet116 = setConstr(true);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_989855906 = [0];

function input_469762058() {
  var result_469762059 = null;

    result_469762059 = document.getElementById("input").value;

  return result_469762059;

}

function newMarggersParser_1056964742(text_1056964743) {
  var result_1056964744 = null;

    result_1056964744 = {str: text_1056964743, pos: 0, topLevelLast: null, linkReferrers: ({data: [], counter: 0}), inlineHtmlHandler: null, codeBlockLanguageHandler: null, setLinkHandler: null};

  return result_1056964744;

}

function paragraphIfText_1056964819(elem_1056964820) {
    var Temporary1;

  var result_1056964821 = null;

    if (elem_1056964820.isText) {
    Temporary1 = {isText: false, tag: 1, content: [elem_1056964820], str: null, attrs: ({data: [], counter: 0, first: 0, last: 0})};
    }
    else {
    Temporary1 = elem_1056964820;
    }
    
    result_1056964821 = Temporary1;

  return result_1056964821;

}

function add_33556420(x_33556421, x_33556421_Idx, y_33556422) {
          if (x_33556421[x_33556421_Idx] === null) { x_33556421[x_33556421_Idx] = []; }
      var off = x_33556421[x_33556421_Idx].length;
      x_33556421[x_33556421_Idx].length += y_33556422.length;
      for (var i = 0; i < y_33556422.length; ++i) {
        x_33556421[x_33556421_Idx][off+i] = y_33556422.charCodeAt(i);
      }
    

  
}

function newSeq_33556826(len_33556828) {
  var result_33556829 = [];

    result_33556829 = new Array(len_33556828); for (var i = 0 ; i < len_33556828 ; ++i) { result_33556829[i] = null; }
  return result_33556829;

}

function unhandledException(e_33556664) {
    var buf_33556665 = [[]];
    if (!(((e_33556664.message).length == 0))) {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556665[0].push.apply(buf_33556665[0], e_33556664.message);;
    }
    else {
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit(" ["));;
    add_33556420(buf_33556665, 0, e_33556664.name);
    buf_33556665[0].push.apply(buf_33556665[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556666 = toJSStr(buf_33556665[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556666);
  }
  else {
    throw cbuf_33556666;
  }
  

  
}

function isFatPointer_33557132(ti_33557133) {
  var result_33557134 = false;

  BeforeRet: do {
    result_33557134 = !((ConstSet3[ti_33557133.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557134;

}

function nimCopyAux(dest_33557145, src_33557146, n_33557147) {
    switch (n_33557147.kind) {
    case 0:
      break;
    case 1:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557147.sons.length; i++) {
      nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i]);
    }
    
      break;
    case 3:
            dest_33557145[n_33557147.offset] = nimCopy(dest_33557145[n_33557147.offset], src_33557146[n_33557147.offset], n_33557147.typ);
      for (var i = 0; i < n_33557147.sons.length; ++i) {
        nimCopyAux(dest_33557145, src_33557146, n_33557147.sons[i][1]);
      }
    
      break;
    }

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = (old_251658421 + n_251658420));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_469762104 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762104 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_469762104;
            result_251658417[result_251658417_Idx][(old_251658421 + iHEX60gensym4_251658435)] = x_251658418.charCodeAt((start_251658419 + iHEX60gensym4_251658435));
            i_469762104 += 1;
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_318767107(x_318767108) {
  var result_318767109 = [[]];

    addInt_251658457(result_318767109, 0, x_318767108);

  return result_318767109[0];

}

function reprEnum(e_33557386, typ_33557387) {
  var result_33557388 = [];

    var tmp_33557389 = false;
    var item_33557390 = typ_33557387.node.sons[e_33557386];
    tmp_33557389 = item_33557390 !== undefined
    if (tmp_33557389) {
    result_33557388 = nimCopy(null, makeNimstrLit(item_33557390.name), NTI33554439);
    }
    else {
      result_33557388 = nimCopy(null, (HEX24_318767107(e_33557386) || []).concat(makeNimstrLit(" (invalid data!)") || []), NTI33554439);
    }
    

  return result_33557388;

}

function anyNext_1056968363(parser_1056968364, offset_1056968365) {
  var result_1056968366 = false;

    result_1056968366 = ((parser_1056968364.pos + offset_1056968365) < ((parser_1056968364.str) == null ? 0 : (parser_1056968364.str).length));

  return result_1056968366;

}

function peekMatch_1056968382(parser_1056968383, pat_1056968384, offset_1056968385) {
    var Temporary1;

  var result_1056968386 = false;

    if (!anyNext_1056968363(parser_1056968383, offset_1056968385)) Temporary1 = false; else {      Temporary1 = (pat_1056968384[parser_1056968383.str.charCodeAt((parser_1056968383.pos + offset_1056968385))] != undefined);    }    result_1056968386 = Temporary1;

  return result_1056968386;

}

function nextMatch_1056968491(parser_1056968492, pat_1056968493, offset_1056968494) {
  var result_1056968495 = false;

    result_1056968495 = peekMatch_1056968382(parser_1056968492, pat_1056968493, offset_1056968494);
    if (result_1056968495) {
    parser_1056968492.pos += (offset_1056968494 + 1);
    }
    

  return result_1056968495;

}

function newElem_1056964793(tag_1056964794, content_1056964799) {
  var result_1056964800 = null;

    result_1056964800 = {isText: false, tag: tag_1056964794, content: nimCopy(null, content_1056964799, NTI1056964744), str: null, attrs: ({data: [], counter: 0, first: 0, last: 0})};

  return result_1056964800;

}

function newStr_1056964769(s_1056964770) {
  var result_1056964771 = null;

    result_1056964771 = {isText: true, str: s_1056964770, tag: 0, attrs: ({data: [], counter: 0, first: 0, last: 0}), content: []};

  return result_1056964771;

}

function HEX5BHEX5D_1056964635(c_1056964636, ind_1056964638) {
  var result_1056964639 = null;

    result_1056964639 = c_1056964636.substring(ind_1056964638.a, (ind_1056964638.b + 1));

  return result_1056964639;

}

function HEX2EHEX2E_922747729(a_922747732, b_922747733) {
  var result_922747734 = ({a: 0, b: 0});

    result_922747734 = nimCopy(result_922747734, {a: a_922747732, b: b_922747733}, NTI721420349);

  return result_922747734;

}

function peekMatch_1056968417(parser_1056968418, pat_1056968419, offset_1056968420) {
    var Temporary1;

  var result_1056968421 = false;

    if (!anyNext_1056968363(parser_1056968418, ((offset_1056968420 + (pat_1056968419).length) - 1))) Temporary1 = false; else {      Temporary1 = (HEX5BHEX5D_1056964635(parser_1056968418.str, HEX2EHEX2E_922747729((parser_1056968418.pos + offset_1056968420), (((parser_1056968418.pos + offset_1056968420) + (pat_1056968419).length) - 1))) == toJSStr(pat_1056968419));    }    result_1056968421 = Temporary1;

  return result_1056968421;

}

function nextMatch_1056968520(parser_1056968521, pat_1056968522, offset_1056968523) {
  var result_1056968524 = false;

    result_1056968524 = peekMatch_1056968417(parser_1056968521, pat_1056968522, offset_1056968523);
    if (result_1056968524) {
    parser_1056968521.pos += (offset_1056968523 + (pat_1056968522).length);
    }
    

  return result_1056968524;

}

function anyPrev_1056968367(parser_1056968368, offset_1056968369) {
  var result_1056968370 = false;

    result_1056968370 = (0 <= ((parser_1056968368.pos + offset_1056968369) - 1));

  return result_1056968370;

}

function peekPrevMatch_1056968456(parser_1056968458, pat_1056968459, offset_1056968460) {
  var result_1056968461 = false;

    result_1056968461 = (anyPrev_1056968367(parser_1056968458, offset_1056968460) && peekMatch_1056968382(parser_1056968458, pat_1056968459, (offset_1056968460 - 1)));

  return result_1056968461;

}

function prevWhitespace_1056968452(parser_1056968453, offset_1056968454) {
  var result_1056968455 = false;

    result_1056968455 = (!(anyPrev_1056968367(parser_1056968453, offset_1056968454)) || peekPrevMatch_1056968456(parser_1056968453, ConstSet6, offset_1056968454));

  return result_1056968455;

}

function nextWhitespace_1056968462(parser_1056968463, offset_1056968464) {
  var result_1056968465 = false;

    result_1056968465 = (!(anyNext_1056968363(parser_1056968463, offset_1056968464)) || peekMatch_1056968382(parser_1056968463, ConstSet7, (offset_1056968464 + 1)));

  return result_1056968465;

}

function surroundedWhitespace_1056968466(parser_1056968467, offset_1056968468) {
  var result_1056968469 = false;

    result_1056968469 = (prevWhitespace_1056968452(parser_1056968467, offset_1056968468) && nextWhitespace_1056968462(parser_1056968467, offset_1056968468));

  return result_1056968469;

}

function add_637534442(x_637534444, x_637534444_Idx) {
    if (null != "*") { if (null == x_637534444[x_637534444_Idx]) x_637534444[x_637534444_Idx] = "*"; else x_637534444[x_637534444_Idx] += "*"; };

  
}

function onlyNextWhitespace_1056968474(parser_1056968475, offset_1056968476) {
  var result_1056968477 = false;

    result_1056968477 = (!(prevWhitespace_1056968452(parser_1056968475, offset_1056968476)) && nextWhitespace_1056968462(parser_1056968475, offset_1056968476));

  return result_1056968477;

}

function add_637534465(x_637534467, x_637534467_Idx) {
    if (null != "_") { if (null == x_637534467[x_637534467_Idx]) x_637534467[x_637534467_Idx] = "_"; else x_637534467[x_637534467_Idx] += "_"; };

  
}

function peekMatch_1056968377(parser_1056968378, pat_1056968379, offset_1056968380) {
    var Temporary1;

  var result_1056968381 = false;

    if (!anyNext_1056968363(parser_1056968378, offset_1056968380)) Temporary1 = false; else {      Temporary1 = (parser_1056968378.str.charCodeAt((parser_1056968378.pos + offset_1056968380)) == pat_1056968379);    }    result_1056968381 = Temporary1;

  return result_1056968381;

}

function nextMatch_1056968482(parser_1056968483, pat_1056968484, offset_1056968485) {
  var result_1056968486 = false;

    result_1056968486 = peekMatch_1056968377(parser_1056968483, pat_1056968484, offset_1056968485);
    if (result_1056968486) {
    parser_1056968483.pos += (offset_1056968485 + 1);
    }
    

  return result_1056968486;

}

function add_1056964624(x_1056964625, x_1056964625_Idx, y_1056964626) {
    var Temporary1;

    if (null != (Temporary1 = String.fromCharCode(y_1056964626), Temporary1)) { if (null == x_1056964625[x_1056964625_Idx]) x_1056964625[x_1056964625_Idx] = Temporary1; else x_1056964625[x_1056964625_Idx] += Temporary1; };

  
}

function peekMatch_1056968391(parser_1056968392, pat_1056968393, offset_1056968394, len_1056968395) {
    var Temporary1;

  var result_1056968396 = false;

  BeforeRet: do {
    if (anyNext_1056968363(parser_1056968392, ((offset_1056968394 + len_1056968395) - 1))) {
    Label2: do {
      var i_1056968401 = 0;
      var colontmp__469762156 = 0;
      colontmp__469762156 = len_1056968395;
      var i_469762157 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_469762157 < colontmp__469762156)) break Label4;
            i_1056968401 = i_469762157;
            if (!((parser_1056968392.str.charCodeAt((parser_1056968392.pos + (offset_1056968394 + i_1056968401))) == pat_1056968393))) {
            result_1056968396 = false;
            break BeforeRet;
            }
            
            i_469762157 += 1;
          }
      } while (false);
    } while (false);
    Temporary1 = true;
    }
    else {
    Temporary1 = false;
    }
    
    result_1056968396 = Temporary1;
  } while (false);

  return result_1056968396;

}

function nextMatch_1056968500(parser_1056968501, pat_1056968502, offset_1056968503, len_1056968504) {
  var result_1056968505 = false;

    result_1056968505 = peekMatch_1056968391(parser_1056968501, pat_1056968502, offset_1056968503, len_1056968504);
    if (result_1056968505) {
    parser_1056968501.pos += (offset_1056968503 + len_1056968504);
    }
    

  return result_1056968505;

}

function parseCodeBlockStr_637534265(parser_637534266, delimChar_637534267) {
              var Temporary10;
              var Temporary11;

  var result_637534270 = {Field0: null, Field1: null};

  BeforeRet: do {
    var colontmp__469762148 = "";
    var colontmp__469762149 = "";
    result_637534270 = nimCopy(result_637534270, {Field0: colontmp__469762148, Field1: colontmp__469762149}, NTI637534244);
    var delimLen_637534271 = 3;
    Label1: do {
        Label2: while (true) {
        if (!nextMatch_1056968482(parser_637534266, delimChar_637534267, 0)) break Label2;
          delimLen_637534271 += 1;
        }
    } while (false);
    Label3: do {
        Label4: while (true) {
        if (!nextMatch_1056968491(parser_637534266, ConstSet11, 0)) break Label4;
        }
    } while (false);
    if (!((parser_637534266.codeBlockLanguageHandler == null))) {
    Label5: do {
        Label6: while (true) {
          var ch_637534280 = parser_637534266.str.charCodeAt((parser_637534266.pos + 0));
        if (!nextMatch_1056968491(parser_637534266, ConstSet12, 0)) break Label6;
          add_1056964624(result_637534270, "Field0", ch_637534280);
        }
    } while (false);
    }
    
    Label7: do {
      var ch_637534281 = 0;
      Label8: do {
          Label9: while (true) {
          if (!(parser_637534266.pos < ((parser_637534266.str) == null ? 0 : (parser_637534266.str).length))) break Label9;
            ch_637534281 = parser_637534266.str.charCodeAt((parser_637534266.pos + 0));
            if (nextMatch_1056968500(parser_637534266, delimChar_637534267, 0, delimLen_637534271)) {
            parser_637534266.pos -= 1;
            break BeforeRet;
            }
            else {
              switch (ch_637534281) {
              case 62:
                Temporary10 = "&gt;";
                break;
              case 60:
                Temporary10 = "&lt;";
                break;
              case 38:
                Temporary10 = "&amp;";
                break;
              default: 
                Temporary10 = String.fromCharCode(ch_637534281);
                break;
              }
            if (null != (Temporary11 = Temporary10, Temporary11)) { if (null == result_637534270.Field1) result_637534270.Field1 = Temporary11; else result_637534270.Field1 += Temporary11; };
            }
            
            parser_637534266.pos += 1;
          }
      } while (false);
    } while (false);
  } while (false);

  return result_637534270;

}

function parseCodeBlock_637534286(parser_637534287, delimChar_637534288) {
      var Temporary1;

  var result_637534289 = null;

    var str_637534290 = parseCodeBlockStr_637534265(parser_637534287, delimChar_637534288);
    result_637534289 = newElem_1056964793(17, [newStr_1056964769(str_637534290.Field1)]);
      if (!!((parser_637534287.codeBlockLanguageHandler == null))) Temporary1 = false; else {        Temporary1 = !((((str_637534290.Field0) == null ? 0 : (str_637534290.Field0).length) == 0));      }    if (Temporary1) {
    parser_637534287.codeBlockLanguageHandler(result_637534289, str_637534290.Field0);
    }
    

  return result_637534289;

}

function add_1056967896(x_1056967898, x_1056967898_Idx, y_1056967899) {
    var Temporary1;

    var xl_1056967904 = (x_1056967898[x_1056967898_Idx]).length;
    if (x_1056967898[x_1056967898_Idx].length < (Temporary1 = (xl_1056967904 + (y_1056967899).length), Temporary1)) { for (var i = x_1056967898[x_1056967898_Idx].length ; i < Temporary1 ; ++i) x_1056967898[x_1056967898_Idx].push(null); }
               else { x_1056967898[x_1056967898_Idx].length = Temporary1; };
    Label2: do {
      var i_1056967919 = 0;
      var colontmp__469762161 = 0;
      colontmp__469762161 = (y_1056967899).length - 1;
      var res_469762162 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_469762162 <= colontmp__469762161)) break Label4;
            i_1056967919 = res_469762162;
            x_1056967898[x_1056967898_Idx][(xl_1056967904 + i_1056967919)] = y_1056967899[i_1056967919];
            res_469762162 += 1;
          }
      } while (false);
    } while (false);

  
}

function parseLink_637534635(parser_637534636, failOnNewline_637534637) {
                var Temporary6;

  var result_637534641 = {Field0: false, Field1: [], Field2: []};

  BeforeRet: do {
    var state_637534650 = 0;
    var delim_637534651 = 0;
    var escaped_637534652 = false;
    var openparens_637534653 = 1;
    Label1: do {
        Label2: while (true) {
        if (!nextMatch_1056968491(parser_637534636, ConstSet24, 0)) break Label2;
        }
    } while (false);
    Label3: do {
      var ch_637534658 = 0;
      Label4: do {
          Label5: while (true) {
          if (!(parser_637534636.pos < ((parser_637534636.str) == null ? 0 : (parser_637534636.str).length))) break Label5;
            ch_637534658 = parser_637534636.str.charCodeAt((parser_637534636.pos + 0));
            switch (state_637534650) {
            case 0:
              switch (ch_637534658) {
              case 9:
              case 11:
              case 12:
              case 13:
              case 32:
                state_637534650 = 1;
                break;
              case 10:
                result_637534641.Field0 = failOnNewline_637534637;
                break BeforeRet;
                break;
              case 40:
                openparens_637534653 += 1;
                addChar(result_637534641.Field1, 40);;
                break;
              case 41:
                openparens_637534653 -= 1;
                if ((openparens_637534653 == 0)) {
                result_637534641.Field0 = true;
                break BeforeRet;
                }
                else {
                addChar(result_637534641.Field1, 41);;
                }
                
                break;
              default: 
                addChar(result_637534641.Field1, ch_637534658);;
                break;
              }
              break;
            case 1:
              switch (ch_637534658) {
              case 34:
              case 39:
              case 60:
                state_637534650 = 2;
                if ((ch_637534658 == 60)) {
                Temporary6 = 62;
                }
                else {
                Temporary6 = ch_637534658;
                }
                
                delim_637534651 = Temporary6;
                break;
              case 41:
                result_637534641.Field0 = true;
                break BeforeRet;
                break;
              case 10:
                result_637534641.Field0 = failOnNewline_637534637;
                break BeforeRet;
                break;
              case 9:
              case 11:
              case 12:
              case 13:
              case 32:
                break;
              default: 
                parser_637534636.pos -= 1;
                state_637534650 = 2;
                delim_637534651 = 41;
                break;
              }
              break;
            case 2:
              if (!(escaped_637534652)) {
              if ((ch_637534658 == 92)) {
              escaped_637534652 = true;
              }
              else {
              if ((ch_637534658 == delim_637534651)) {
              if ((delim_637534651 == 41)) {
              parser_637534636.pos -= 1;
              }
              
              state_637534650 = 3;
              }
              else {
              if ((ch_637534658 == 10)) {
              result_637534641.Field0 = failOnNewline_637534637;
              break BeforeRet;
              }
              else {
              addChar(result_637534641.Field2, ch_637534658);;
              }
              }}
              }
              else {
                if (!((setConstr(92, delim_637534651)[ch_637534658] != undefined))) {
                addChar(result_637534641.Field2, 92);;
                }
                
                addChar(result_637534641.Field2, ch_637534658);;
                escaped_637534652 = false;
              }
              
              break;
            case 3:
              switch (ch_637534658) {
              case 41:
                result_637534641.Field0 = true;
                break BeforeRet;
                break;
              case 10:
                result_637534641.Field0 = failOnNewline_637534637;
                break BeforeRet;
                break;
              case 9:
              case 11:
              case 12:
              case 13:
              case 32:
                break;
              default: 
                result_637534641.Field0 = false;
                break BeforeRet;
                break;
              }
              break;
            }
            parser_637534636.pos += 1;
          }
      } while (false);
    } while (false);
    result_637534641.Field0 = failOnNewline_637534637;
  } while (false);

  return result_637534641;

}

function nextPowerOfTwo_704643271(x_704643272) {
  var result_704643273 = 0;

    result_704643273 = (x_704643272 - 1);
    result_704643273 = (result_704643273 | (result_704643273 >> 16));
    result_704643273 = (result_704643273 | (result_704643273 >> 8));
    result_704643273 = (result_704643273 | (result_704643273 >> 4));
    result_704643273 = (result_704643273 | (result_704643273 >> 2));
    result_704643273 = (result_704643273 | (result_704643273 >> 1));
    result_704643273 += (1 + ((x_704643272 <= 0) ? 1 : 0));

  return result_704643273;

}

function slotsNeeded_671088682(count_671088683) {
  var result_671088684 = 0;

    result_671088684 = nextPowerOfTwo_704643271((Math.trunc((count_671088683 * 3) / 2) + 4));

  return result_671088684;

}

function imul_989856034(a_989856035, b_989856036) {
  var result_989856037 = 0;

    var mask_989856038 = 65535;
    var aHi_989856043 = ((a_989856035 >>> 16) & mask_989856038);
    var aLo_989856044 = (a_989856035 & mask_989856038);
    var bHi_989856049 = ((b_989856036 >>> 16) & mask_989856038);
    var bLo_989856050 = (b_989856036 & mask_989856038);
    result_989856037 = ((((aLo_989856044 * bLo_989856050) >>> 0) + (((((aHi_989856043 * bLo_989856050) >>> 0) + ((aLo_989856044 * bHi_989856049) >>> 0)) >>> 0) << 16)) >>> 0);

  return result_989856037;

}

function rotl32_989856055(x_989856056, r_989856057) {
  var result_989856058 = 0;

    result_989856058 = ((x_989856056 << r_989856057) | (x_989856056 >>> (32 - r_989856057)));

  return result_989856058;

}

function murmurHash_989856067(x_989856068) {
  var result_989856069 = 0;

  BeforeRet: do {
    var size_989856078 = (x_989856068).length;
    var stepSize_989856079 = 4;
    var n_989856080 = Math.trunc(size_989856078 / stepSize_989856079);
    var h1_989856081 = 0;
    var i_989856082 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_989856082 < (n_989856080 * stepSize_989856079))) break Label2;
          var k1_989856083 = 0;
          var j_989856084 = stepSize_989856079;
          Label3: do {
              Label4: while (true) {
              if (!(0 < j_989856084)) break Label4;
                j_989856084 -= 1;
                k1_989856083 = ((k1_989856083 << 8) | x_989856068[(i_989856082 + j_989856084)]);
              }
          } while (false);
          i_989856082 += stepSize_989856079;
          k1_989856083 = imul_989856034(k1_989856083, 3432918353);
          k1_989856083 = rotl32_989856055(k1_989856083, 15);
          k1_989856083 = imul_989856034(k1_989856083, 461845907);
          h1_989856081 = (h1_989856081 ^ k1_989856083);
          h1_989856081 = rotl32_989856055(h1_989856081, 13);
          h1_989856081 = ((((h1_989856081 * 5) >>> 0) + 3864292196) >>> 0);
        }
    } while (false);
    var k1_989856101 = 0;
    var rem_989856102 = Math.trunc(size_989856078 % stepSize_989856079);
    Label5: do {
        Label6: while (true) {
        if (!(0 < rem_989856102)) break Label6;
          rem_989856102 -= 1;
          k1_989856101 = ((k1_989856101 << 8) | x_989856068[(i_989856082 + rem_989856102)]);
        }
    } while (false);
    k1_989856101 = imul_989856034(k1_989856101, 3432918353);
    k1_989856101 = rotl32_989856055(k1_989856101, 15);
    k1_989856101 = imul_989856034(k1_989856101, 461845907);
    h1_989856081 = (h1_989856081 ^ k1_989856101);
    h1_989856081 = (h1_989856081 ^ size_989856078);
    h1_989856081 = (h1_989856081 ^ (h1_989856081 >>> 16));
    h1_989856081 = imul_989856034(h1_989856081, 2246822507);
    h1_989856081 = (h1_989856081 ^ (h1_989856081 >>> 13));
    h1_989856081 = imul_989856034(h1_989856081, 3266489909);
    h1_989856081 = (h1_989856081 ^ (h1_989856081 >>> 16));
    result_989856069 = (h1_989856081 | 0);
    break BeforeRet;
  } while (false);

  return result_989856069;

}

function hash_989856169(x_989856170) {
  var result_989856171 = 0;

    var xx_989856172 = cstrToNimstr(x_989856170);
    result_989856171 = murmurHash_989856067((xx_989856172.slice(0, (xx_989856172).length - 1 + 1)));

  return result_989856171;

}

function isFilled_671088671(hcode_671088672) {
  var result_671088673 = false;

    result_671088673 = !((hcode_671088672 == 0));

  return result_671088673;

}

function nextTry_671088674(h_671088675, maxHash_671088676) {
  var result_671088677 = 0;

    result_671088677 = ((h_671088675 + 1) & maxHash_671088676);

  return result_671088677;

}

function rawGet_1056965338(t_1056965341, key_1056965342, hc_1056965343, hc_1056965343_Idx) {
            var Temporary3;

  var result_1056965344 = 0;

  BeforeRet: do {
    hc_1056965343[hc_1056965343_Idx] = hash_989856169(key_1056965342);
    if ((hc_1056965343[hc_1056965343_Idx] == 0)) {
    hc_1056965343[hc_1056965343_Idx] = 314159265;
    }
    
    if (((t_1056965341.data).length == 0)) {
    result_1056965344 = -1;
    break BeforeRet;
    }
    
    var h_1056965395 = (hc_1056965343[hc_1056965343_Idx] & (t_1056965341.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_1056965341.data[h_1056965395].Field0)) break Label2;
            if (!(t_1056965341.data[h_1056965395].Field0 == hc_1056965343[hc_1056965343_Idx])) Temporary3 = false; else {              Temporary3 = (t_1056965341.data[h_1056965395].Field2 == key_1056965342);            }          if (Temporary3) {
          result_1056965344 = h_1056965395;
          break BeforeRet;
          }
          
          h_1056965395 = nextTry_671088674(h_1056965395, (t_1056965341.data).length - 1);
        }
    } while (false);
    result_1056965344 = (-1 - h_1056965395);
  } while (false);

  return result_1056965344;

}

function mustRehash_1056965665(t_1056965667) {
  var result_1056965668 = false;

    result_1056965668 = ((((t_1056965667.data).length * 2) < (t_1056965667.counter * 3)) || (((t_1056965667.data).length - t_1056965667.counter) < 4));

  return result_1056965668;

}

function rawInsert_1056966237(t_1056966240, data_1056966241, data_1056966241_Idx, key_1056966242, val_1056966243, hc_1056966244, h_1056966245) {
    data_1056966241[data_1056966241_Idx][h_1056966245].Field2 = key_1056966242;
    data_1056966241[data_1056966241_Idx][h_1056966245].Field3 = val_1056966243;
    data_1056966241[data_1056966241_Idx][h_1056966245].Field0 = hc_1056966244;
    data_1056966241[data_1056966241_Idx][h_1056966245].Field1 = -1;
    if ((t_1056966240.first < 0)) {
    t_1056966240.first = h_1056966245;
    }
    
    if ((0 <= t_1056966240.last)) {
    data_1056966241[data_1056966241_Idx][t_1056966240.last].Field1 = h_1056966245;
    }
    
    t_1056966240.last = h_1056966245;

  
}

function enlarge_1056965826(t_1056965829) {
          var Temporary6;
          var Temporary7;

    var n_1056965832 = [];
    n_1056965832 = new Array(((t_1056965829.data).length * 2)); for (var i = 0 ; i < ((t_1056965829.data).length * 2) ; ++i) { n_1056965832[i] = {Field0: 0, Field1: 0, Field2: null, Field3: null}; }    var h_1056965884 = t_1056965829.first;
    t_1056965829.first = -1;
    t_1056965829.last = -1;
    var Temporary1 = t_1056965829.data; t_1056965829.data = n_1056965832; n_1056965832 = Temporary1;    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1056965884)) break Label3;
          var nxt_1056965942 = n_1056965832[h_1056965884].Field1;
          var eh_1056965996 = n_1056965832[h_1056965884].Field0;
          if (isFilled_671088671(eh_1056965996)) {
          var j_1056966000 = (eh_1056965996 & (t_1056965829.data).length - 1);
          Label4: do {
              Label5: while (true) {
              if (!isFilled_671088671(t_1056965829.data[j_1056966000].Field0)) break Label5;
                j_1056966000 = nextTry_671088674(j_1056966000, (t_1056965829.data).length - 1);
              }
          } while (false);
          Temporary6 = n_1056965832[h_1056965884].Field2;
          n_1056965832[h_1056965884].Field2 = genericReset(n_1056965832[h_1056965884].Field2, NTI33554440);
          Temporary7 = n_1056965832[h_1056965884].Field3;
          n_1056965832[h_1056965884].Field3 = genericReset(n_1056965832[h_1056965884].Field3, NTI33554440);
          rawInsert_1056966237(t_1056965829, t_1056965829, "data", Temporary6, Temporary7, n_1056965832[h_1056965884].Field0, j_1056966000);
          }
          
          h_1056965884 = nxt_1056965942;
        }
    } while (false);

  
}

function rawGetKnownHC_1056966528(t_1056966531, key_1056966532, hc_1056966533) {
  var result_1056966534 = 0;

  BeforeRet: do {
    if (((t_1056966531.data).length == 0)) {
    result_1056966534 = -1;
    break BeforeRet;
    }
    
    var h_1056966585 = (hc_1056966533 & (t_1056966531.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_1056966531.data[h_1056966585].Field0)) break Label2;
          if (((t_1056966531.data[h_1056966585].Field0 == hc_1056966533) && (t_1056966531.data[h_1056966585].Field2 == key_1056966532))) {
          result_1056966534 = h_1056966585;
          break BeforeRet;
          }
          
          h_1056966585 = nextTry_671088674(h_1056966585, (t_1056966531.data).length - 1);
        }
    } while (false);
    result_1056966534 = (-1 - h_1056966585);
  } while (false);

  return result_1056966534;

}

function HEX5BHEX5DHEX3D_1056965270(t_1056965273, key_1056965274, val_1056965275) {
    if (((t_1056965273.data).length == 0)) {
    var correctSizeHEX60gensym5_1056965324 = slotsNeeded_671088682(32);
    t_1056965273.counter = 0;
    t_1056965273.data = new Array(correctSizeHEX60gensym5_1056965324); for (var i = 0 ; i < correctSizeHEX60gensym5_1056965324 ; ++i) { t_1056965273.data[i] = {Field0: 0, Field1: 0, Field2: null, Field3: null}; }    t_1056965273.first = -1;
    t_1056965273.last = -1;
    }
    
    var hc_1056965329 = [0];
    var index_1056965558 = rawGet_1056965338(t_1056965273, key_1056965274, hc_1056965329, 0);
    if ((0 <= index_1056965558)) {
    t_1056965273.data[index_1056965558].Field3 = val_1056965275;
    }
    else {
      if (((t_1056965273.data).length == 0)) {
      var correctSizeHEX60gensym10_1056965660 = slotsNeeded_671088682(32);
      t_1056965273.counter = 0;
      t_1056965273.data = new Array(correctSizeHEX60gensym10_1056965660); for (var i = 0 ; i < correctSizeHEX60gensym10_1056965660 ; ++i) { t_1056965273.data[i] = {Field0: 0, Field1: 0, Field2: null, Field3: null}; }      t_1056965273.first = -1;
      t_1056965273.last = -1;
      }
      
      if (mustRehash_1056965665(t_1056965273)) {
      enlarge_1056965826(t_1056965273);
      index_1056965558 = rawGetKnownHC_1056966528(t_1056965273, key_1056965274, hc_1056965329[0]);
      }
      
      index_1056965558 = (-1 - index_1056965558);
      rawInsert_1056966237(t_1056965273, t_1056965273, "data", key_1056965274, val_1056965275, hc_1056965329[0], index_1056965558);
      t_1056965273.counter += 1;
    }
    

  
}

function attr_1056965226(elem_1056965227, key_1056965228, val_1056965229) {
    var Temporary1;

    var Temporary1 = elem_1056965227;
    if (ConstSet28[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'attrs\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    HEX5BHEX5DHEX3D_1056965270(Temporary1.attrs, key_1056965228, val_1056965229);

  
}

function attrEscaped_1056966772(elem_1056966773, key_1056966774, val_1056966775) {
    var esc_1056966776 = [""];
    Label1: do {
      var v_1056966777 = 0;
      var iHEX60gensym6_469762171 = 0;
      var nHEX60gensym6_469762172 = ((val_1056966775) == null ? 0 : (val_1056966775).length);
      Label2: do {
          Label3: while (true) {
          if (!(iHEX60gensym6_469762171 < nHEX60gensym6_469762172)) break Label3;
            v_1056966777 = val_1056966775.charCodeAt(iHEX60gensym6_469762171);
            if ((v_1056966777 == 34)) {
            if (null != "&quot;") { if (null == esc_1056966776[0]) esc_1056966776[0] = "&quot;"; else esc_1056966776[0] += "&quot;"; };
            }
            else {
            add_1056964624(esc_1056966776, 0, v_1056966777);
            }
            
            iHEX60gensym6_469762171 += 1;
          }
      } while (false);
    } while (false);
    attr_1056965226(elem_1056966773, key_1056966774, esc_1056966776[0]);

  
}

function find_1056967546(a_1056967549, item_1056967550) {
  var result_1056967551 = 0;

  BeforeRet: do {
    result_1056967551 = 0;
    Label1: do {
      var i_1056967564 = null;
      var i_1056967564_Idx = 0;
      var i_469762183 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762183 < (a_1056967549).length)) break Label3;
            i_1056967564 = a_1056967549; i_1056967564_Idx = i_469762183;
            if ((i_1056967564[i_1056967564_Idx] == item_1056967550)) {
            break BeforeRet;
            }
            
            result_1056967551 += 1;
            i_469762183 += 1;
          }
      } while (false);
    } while (false);
    result_1056967551 = -1;
  } while (false);

  return result_1056967551;

}

function contains_1056967541(a_1056967543, item_1056967544) {
  var result_1056967545 = false;

  BeforeRet: do {
    result_1056967545 = (0 <= find_1056967546(a_1056967543, item_1056967544));
    break BeforeRet;
  } while (false);

  return result_1056967545;

}

function HEX5BHEX5D_1056964646(c_1056964647, ind_1056964652) {
  var result_1056964653 = null;

    result_1056964653 = c_1056964647.substring((((c_1056964647) == null ? 0 : (c_1056964647).length) - ind_1056964652.a), ((((c_1056964647) == null ? 0 : (c_1056964647).length) - ind_1056964652.b) + 1));

  return result_1056964653;

}

function HEX2EHEX2E_1056967484(a_1056967487, b_1056967488) {
  var result_1056967489 = ({a: 0, b: 0});

    result_1056967489 = nimCopy(result_1056967489, {a: a_1056967487, b: b_1056967488}, NTI1056964647);

  return result_1056967489;

}

function del_1056966886(t_1056966889, key_1056966890) {
            var Temporary4;
            var Temporary5;

  BeforeRet: do {
    if ((t_1056966889.counter == 0)) {
    break BeforeRet;
    }
    
    var n_1056966893 = [];
    n_1056966893 = new Array((t_1056966889.data).length); for (var i = 0 ; i < (t_1056966889.data).length ; ++i) { n_1056966893[i] = {Field0: 0, Field1: 0, Field2: null, Field3: null}; }    var h_1056966945 = t_1056966889.first;
    t_1056966889.first = -1;
    t_1056966889.last = -1;
    var Temporary1 = t_1056966889.data; t_1056966889.data = n_1056966893; n_1056966893 = Temporary1;    var resHEX60gensym18_1056966951 = 0;
    resHEX60gensym18_1056966951 = hash_989856169(key_1056966890);
    if ((resHEX60gensym18_1056966951 == 0)) {
    resHEX60gensym18_1056966951 = 314159265;
    }
    
    var hc_1056966952 = resHEX60gensym18_1056966951;
    Label2: do {
        Label3: while (true) {
        if (!(0 <= h_1056966945)) break Label3;
          var nxt_1056967006 = n_1056966893[h_1056966945].Field1;
          if (isFilled_671088671(n_1056966893[h_1056966945].Field0)) {
          if (((n_1056966893[h_1056966945].Field0 == hc_1056966952) && (n_1056966893[h_1056966945].Field2 == key_1056966890))) {
          t_1056966889.counter -= 1;
          }
          else {
            var j_1056967290 = (-1 - rawGetKnownHC_1056966528(t_1056966889, n_1056966893[h_1056966945].Field2, n_1056966893[h_1056966945].Field0));
            Temporary4 = n_1056966893[h_1056966945].Field2;
            n_1056966893[h_1056966945].Field2 = genericReset(n_1056966893[h_1056966945].Field2, NTI33554440);
            Temporary5 = n_1056966893[h_1056966945].Field3;
            n_1056966893[h_1056966945].Field3 = genericReset(n_1056966893[h_1056966945].Field3, NTI33554440);
            rawInsert_1056966237(t_1056966889, t_1056966889, "data", Temporary4, Temporary5, n_1056966893[h_1056966945].Field0, j_1056967290);
          }
          
          }
          
          h_1056966945 = nxt_1056967006;
        }
    } while (false);
  } while (false);

  
}

function pop_1056967685(t_1056967688, key_1056967689, val_1056967690, val_1056967690_Idx) {
    var Temporary1;

  var result_1056967691 = false;

    var hc_1056967692 = [0];
    var index_1056967707 = rawGet_1056965338(t_1056967688, key_1056967689, hc_1056967692, 0);
    result_1056967691 = (0 <= index_1056967707);
    if (result_1056967691) {
    Temporary1 = t_1056967688.data[index_1056967707].Field3;
    t_1056967688.data[index_1056967707].Field3 = genericReset(t_1056967688.data[index_1056967707].Field3, NTI33554440);
    val_1056967690[val_1056967690_Idx] = Temporary1;
    del_1056966886(t_1056967688, key_1056967689);
    }
    

  return result_1056967691;

}

function setLinkDefault_1056967479(elem_1056967480, link_1056967481) {
    var Temporary1;
        var Temporary2;
        var Temporary3;
          var Temporary4;
      var Temporary5;
        var Temporary6;
        var Temporary7;
          var Temporary8;
      var Temporary9;
        var Temporary10;
        var Temporary11;
      var Temporary12;

    var Temporary1 = elem_1056967480;
    if (ConstSet31[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    switch (Temporary1.tag) {
    case 23:
      attrEscaped_1056966772(elem_1056967480, "href", link_1056967481);
      break;
    case 21:
        if (!(4 <= ((link_1056967481) == null ? 0 : (link_1056967481).length))) Temporary3 = false; else {          Temporary3 = contains_1056967541([".mp4", ".m4v", ".mov", ".ogv"], HEX5BHEX5D_1056964646(link_1056967481, HEX2EHEX2E_1056967484(4, 1)));        }        if (Temporary3) Temporary2 = true; else {          if (!(5 <= ((link_1056967481) == null ? 0 : (link_1056967481).length))) Temporary4 = false; else {            Temporary4 = (HEX5BHEX5D_1056964646(link_1056967481, HEX2EHEX2E_1056967484(5, 1)) == ".webm");          }          Temporary2 = Temporary4;        }      if (Temporary2) {
      var Temporary5 = elem_1056967480;
      if (ConstSet32[Temporary5.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary5.isText, NTI33554466)); }
      Temporary5.tag = 24;
      }
      else {
        if (!(4 <= ((link_1056967481) == null ? 0 : (link_1056967481).length))) Temporary7 = false; else {          Temporary7 = contains_1056967541([".mp3", ".oga", ".ogg", ".wav"], HEX5BHEX5D_1056964646(link_1056967481, HEX2EHEX2E_1056967484(4, 1)));        }        if (Temporary7) Temporary6 = true; else {          if (!(5 <= ((link_1056967481) == null ? 0 : (link_1056967481).length))) Temporary8 = false; else {            Temporary8 = (HEX5BHEX5D_1056964646(link_1056967481, HEX2EHEX2E_1056967484(5, 1)) == ".flac");          }          Temporary6 = Temporary8;        }      if (Temporary6) {
      var Temporary9 = elem_1056967480;
      if (ConstSet33[Temporary9.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary9.isText, NTI33554466)); }
      Temporary9.tag = 25;
      }
      }
        var Temporary10 = elem_1056967480;
        if (ConstSet34[Temporary10.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary10.isText, NTI33554466)); }
      if (!((Temporary10.tag == 21))) {
      attr_1056965226(elem_1056967480, "controls", "");
      var altText_1056967644 = [null];
        var Temporary11 = elem_1056967480;
        if (ConstSet35[Temporary11.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'attrs\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary11.isText, NTI33554466)); }
      if (pop_1056967685(Temporary11.attrs, "alt", altText_1056967644, 0)) {
      var Temporary12 = elem_1056967480;
      if (ConstSet36[Temporary12.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary12.isText, NTI33554466)); }
      Temporary12.content = nimCopy(null, [newStr_1056964769(altText_1056967644[0])], NTI1056964776);
      }
      
      }
      
      attrEscaped_1056966772(elem_1056967480, "src", link_1056967481);
      break;
    default: 
      attrEscaped_1056966772(elem_1056967480, "src", link_1056967481);
      break;
    }

  
}

function setLink_1056967822(parser_1056967823, elem_1056967824, link_1056967825) {
    if (!((parser_1056967823.setLinkHandler == null))) {
    parser_1056967823.setLinkHandler(elem_1056967824, link_1056967825);
    }
    else {
    setLinkDefault_1056967479(elem_1056967824, link_1056967825);
    }
    

  
}

function add_637534711(x_637534713, x_637534713_Idx) {
    if (null != "[") { if (null == x_637534713[x_637534713_Idx]) x_637534713[x_637534713_Idx] = "["; else x_637534713[x_637534713_Idx] += "["; };

  
}

function add_637534719(x_637534721, x_637534721_Idx) {
    if (null != "]") { if (null == x_637534721[x_637534721_Idx]) x_637534721[x_637534721_Idx] = "]"; else x_637534721[x_637534721_Idx] += "]"; };

  
}

function escapeHtmlChar_1056964835(ch_1056964836) {
    var Temporary1;

  var result_1056964837 = null;

    switch (ch_1056964836) {
    case 60:
      Temporary1 = "&lt;";
      break;
    case 62:
      Temporary1 = "&gt;";
      break;
    case 38:
      Temporary1 = "&amp;";
      break;
    default: 
      Temporary1 = String.fromCharCode(ch_1056964836);
      break;
    }
    result_1056964837 = Temporary1;

  return result_1056964837;

}

function parseReferenceName_637534700(parser_637534701, failed_637534702, failed_637534702_Idx) {
              var Temporary4;
              var Temporary5;
              var Temporary6;

  var result_637534703 = [null];

  BeforeRet: do {
    result_637534703[0] = "";
    var openbracks_637534704 = 1;
    var escaped_637534705 = false;
    Label1: do {
      var ch_637534706 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(parser_637534701.pos < ((parser_637534701.str) == null ? 0 : (parser_637534701.str).length))) break Label3;
            ch_637534706 = parser_637534701.str.charCodeAt((parser_637534701.pos + 0));
            if (!(escaped_637534705)) {
            switch (ch_637534706) {
            case 92:
              escaped_637534705 = true;
              break;
            case 91:
              openbracks_637534704 += 1;
              add_637534711(result_637534703, 0);
              break;
            case 93:
              openbracks_637534704 -= 1;
              if ((openbracks_637534704 == 0)) {
              break BeforeRet;
              }
              else {
              add_637534719(result_637534703, 0);
              }
              
              break;
            case 10:
              failed_637534702[failed_637534702_Idx] = true;
              break BeforeRet;
              break;
            default: 
              if (null != (Temporary4 = escapeHtmlChar_1056964835(ch_637534706), Temporary4)) { if (null == result_637534703[0]) result_637534703[0] = Temporary4; else result_637534703[0] += Temporary4; };
              break;
            }
            }
            else {
              switch (ch_637534706) {
              case 92:
              case 91:
              case 93:
                Temporary5 = String.fromCharCode(ch_637534706);
                break;
              default: 
                Temporary5 = ("\\\\" + escapeHtmlChar_1056964835(ch_637534706));
                break;
              }
              if (null != (Temporary6 = Temporary5, Temporary6)) { if (null == result_637534703[0]) result_637534703[0] = Temporary6; else result_637534703[0] += Temporary6; };
              escaped_637534705 = false;
            }
            
            parser_637534701.pos += 1;
          }
      } while (false);
    } while (false);
    failed_637534702[failed_637534702_Idx] = true;
  } while (false);

  return result_637534703[0];

}

function rawGet_637534869(t_637534872, key_637534873, hc_637534874, hc_637534874_Idx) {
            var Temporary3;

  var result_637534875 = 0;

  BeforeRet: do {
    hc_637534874[hc_637534874_Idx] = hash_989856169(key_637534873);
    if ((hc_637534874[hc_637534874_Idx] == 0)) {
    hc_637534874[hc_637534874_Idx] = 314159265;
    }
    
    if (((t_637534872.data).length == 0)) {
    result_637534875 = -1;
    break BeforeRet;
    }
    
    var h_637534926 = (hc_637534874[hc_637534874_Idx] & (t_637534872.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_637534872.data[h_637534926].Field0)) break Label2;
            if (!(t_637534872.data[h_637534926].Field0 == hc_637534874[hc_637534874_Idx])) Temporary3 = false; else {              Temporary3 = (t_637534872.data[h_637534926].Field1 == key_637534873);            }          if (Temporary3) {
          result_637534875 = h_637534926;
          break BeforeRet;
          }
          
          h_637534926 = nextTry_671088674(h_637534926, (t_637534872.data).length - 1);
        }
    } while (false);
    result_637534875 = (-1 - h_637534926);
  } while (false);

  return result_637534875;

}

function mustRehash_637535161(t_637535163) {
  var result_637535164 = false;

    result_637535164 = ((((t_637535163.data).length * 2) < (t_637535163.counter * 3)) || (((t_637535163.data).length - t_637535163.counter) < 4));

  return result_637535164;

}

function rawInsert_637535608(t_637535612, data_637535613, data_637535613_Idx, key_637535614, val_637535615, hc_637535616, h_637535617) {
    data_637535613[data_637535613_Idx][h_637535617].Field1 = key_637535614;
    data_637535613[data_637535613_Idx][h_637535617].Field2 = nimCopy(null, val_637535615, NTI1056964692);
    data_637535613[data_637535613_Idx][h_637535617].Field0 = hc_637535616;

  
}

function enlarge_637535314(t_637535317) {
    var n_637535320 = [];
    n_637535320 = new Array(((t_637535317.data).length * 2)); for (var i = 0 ; i < ((t_637535317.data).length * 2) ; ++i) { n_637535320[i] = {Field0: 0, Field1: null, Field2: []}; }    var Temporary1 = t_637535317.data; t_637535317.data = n_637535320; n_637535320 = Temporary1;    Label2: do {
      var i_637535384 = 0;
      var colontmp__469762191 = 0;
      colontmp__469762191 = (n_637535320).length - 1;
      var res_469762193 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(res_469762193 <= colontmp__469762191)) break Label4;
            i_637535384 = res_469762193;
            var eh_637535438 = n_637535320[i_637535384].Field0;
            if (isFilled_671088671(eh_637535438)) {
            var j_637535442 = (eh_637535438 & (t_637535317.data).length - 1);
            Label5: do {
                Label6: while (true) {
                if (!isFilled_671088671(t_637535317.data[j_637535442].Field0)) break Label6;
                  j_637535442 = nextTry_671088674(j_637535442, (t_637535317.data).length - 1);
                }
            } while (false);
            rawInsert_637535608(t_637535317, t_637535317, "data", n_637535320[i_637535384].Field1, n_637535320[i_637535384].Field2, eh_637535438, j_637535442);
            }
            
            res_469762193 += 1;
          }
      } while (false);
    } while (false);

  
}

function rawGetKnownHC_637535777(t_637535780, key_637535781, hc_637535782) {
  var result_637535783 = 0;

  BeforeRet: do {
    if (((t_637535780.data).length == 0)) {
    result_637535783 = -1;
    break BeforeRet;
    }
    
    var h_637535834 = (hc_637535782 & (t_637535780.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!isFilled_671088671(t_637535780.data[h_637535834].Field0)) break Label2;
          if (((t_637535780.data[h_637535834].Field0 == hc_637535782) && (t_637535780.data[h_637535834].Field1 == key_637535781))) {
          result_637535783 = h_637535834;
          break BeforeRet;
          }
          
          h_637535834 = nextTry_671088674(h_637535834, (t_637535780.data).length - 1);
        }
    } while (false);
    result_637535783 = (-1 - h_637535834);
  } while (false);

  return result_637535783;

}

function mgetOrPut_637534807(t_637534810, key_637534811, val_637534812) {
  var result_637534813 = null;
  var result_637534813_Idx = 0;

    if (((t_637534810.data).length == 0)) {
    var correctSizeHEX60gensym72_637534863 = slotsNeeded_671088682(32);
    t_637534810.counter = 0;
    t_637534810.data = new Array(correctSizeHEX60gensym72_637534863); for (var i = 0 ; i < correctSizeHEX60gensym72_637534863 ; ++i) { t_637534810.data[i] = {Field0: 0, Field1: null, Field2: []}; }    }
    
    var hc_637534868 = [0];
    var index_637535107 = rawGet_637534869(t_637534810, key_637534811, hc_637534868, 0);
    if ((index_637535107 < 0)) {
    if (((t_637534810.data).length == 0)) {
    var correctSizeHEX60gensym77_637535156 = slotsNeeded_671088682(32);
    t_637534810.counter = 0;
    t_637534810.data = new Array(correctSizeHEX60gensym77_637535156); for (var i = 0 ; i < correctSizeHEX60gensym77_637535156 ; ++i) { t_637534810.data[i] = {Field0: 0, Field1: null, Field2: []}; }    }
    
    if (mustRehash_637535161(t_637534810)) {
    enlarge_637535314(t_637534810);
    index_637535107 = rawGetKnownHC_637535777(t_637534810, key_637534811, hc_637534868[0]);
    }
    
    index_637535107 = (-1 - index_637535107);
    rawInsert_637535608(t_637534810, t_637534810, "data", key_637534811, val_637534812, hc_637534868[0], index_637535107);
    t_637534810.counter += 1;
    }
    
    result_637534813 = t_637534810.data[index_637535107]; result_637534813_Idx = "Field2";

  return [result_637534813, result_637534813_Idx];

}

function parseBracket_637534214(image_637534215, parser_637534216, singleLine_637534217) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary4;
        var Temporary5;
    var Temporary6;
    var Temporary7;
    var Temporary8;
    var Temporary9;
      var Temporary10;
    var Temporary11;
    var Temporary12;
    var Temporary13;
    var Temporary14;
      var Temporary15;
      var Temporary16;
      var Temporary17;
        var Temporary18;
        var Temporary19;
      var Temporary20;
    var Temporary21;

  var result_637534727 = null;

  BeforeRet: do {
    var canBeSub_637534728 = (!(image_637534215) && !(prevWhitespace_1056968452(parser_637534216, -1)));
    var firstPos_637534729 = parser_637534216.pos;
    var colontmp__469762164 = parseDelimed_637534307(parser_637534216, makeNimstrLit("]"), singleLine_637534217);
    var textWorked_637534730 = colontmp__469762164["Field0"];
    var textElems_637534731 = nimCopy(null, colontmp__469762164["Field1"], NTI637534268);
    parser_637534216.pos += 1;
    var secondPos_637534736 = (parser_637534216.pos - 2);
    if (!((textWorked_637534730 == 0))) {
    result_637534727 = newElem_1056964793(0, textElems_637534731);
    break BeforeRet;
    }
    
      if (!(!(image_637534215) && ((textElems_637534731).length == 1))) Temporary3 = false; else {        Temporary3 = textElems_637534731[0].isText;      }      if (!Temporary3) Temporary2 = false; else {        var Temporary4 = textElems_637534731[0];
        if (ConstSet22[Temporary4.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary4.isText, NTI33554466)); }
        Temporary2 = ((((Temporary5 = Temporary4.str, Temporary5)) == null ? 0 : (Temporary5).length) == 1);      }    if (Temporary2) {
    var Temporary6 = textElems_637534731[0];
    if (ConstSet23[Temporary6.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary6.isText, NTI33554466)); }
    switch ((Temporary7 = Temporary6.str, Temporary7).charCodeAt(0)) {
    case 32:
      Temporary8 = 1;
      break;
    case 120:
      Temporary8 = 2;
      break;
    default: 
      Temporary8 = 0;
      break;
    }
    Temporary1 = Temporary8;
    }
    else {
    Temporary1 = 0;
    }
    
    var checkMark_637534744 = Temporary1;
    if ((parser_637534216.pos < ((parser_637534216.str) == null ? 0 : (parser_637534216.str).length))) {
    var initialPos_637534745 = parser_637534216.pos;
    if (nextMatch_1056968482(parser_637534216, 40, 0)) {
    var colontmp__469762165 = parseLink_637534635(parser_637534216, false);
    var linkWorked_637534746 = colontmp__469762165["Field0"];
    var link_637534747 = nimCopy(null, colontmp__469762165["Field1"], NTI33554439);
    var tip_637534748 = nimCopy(null, colontmp__469762165["Field2"], NTI33554439);
    if (linkWorked_637534746) {
      if (!((!(image_637534215) && ((link_637534747).length == 0)) && ((textElems_637534731).length == 1))) Temporary10 = false; else {        Temporary10 = textElems_637534731[0].isText;      }    if (Temporary10) {
    var Temporary12 = textElems_637534731[0];
    if (ConstSet25[Temporary12.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary12.isText, NTI33554466)); }
    Temporary11 = Temporary12.str;
    var Temporary13 = textElems_637534731[0];
    if (ConstSet26[Temporary13.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary13.isText, NTI33554466)); }
    Temporary13.str = genericReset(Temporary13.str, NTI33554440);
    Temporary9 = Temporary11;
    }
    else {
    Temporary9 = toJSStr(link_637534747);
    }
    
    var realLink_637534759 = Temporary9.trim();
    result_637534727 = {isText: false, str: null, tag: 0, attrs: ({data: [], counter: 0, first: 0, last: 0}), content: []};
    if (image_637534215) {
    var Temporary14 = result_637534727;
    if (ConstSet27[Temporary14.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary14.isText, NTI33554466)); }
    Temporary14.tag = 21;
    if ((0 < (secondPos_637534736 - firstPos_637534729))) {
    attrEscaped_1056966772(result_637534727, "alt", HEX5BHEX5D_1056964635(parser_637534216.str, HEX2EHEX2E_922747729(firstPos_637534729, secondPos_637534736)));
    }
    
    }
    else {
      var Temporary15 = result_637534727;
      if (ConstSet29[Temporary15.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary15.isText, NTI33554466)); }
      Temporary15.tag = 23;
      var Temporary16 = result_637534727;
      if (ConstSet30[Temporary16.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary16.isText, NTI33554466)); }
      Temporary16.content = nimCopy(null, textElems_637534731, NTI637534268);
    }
    
    if (!(((tip_637534748).length == 0))) {
    attrEscaped_1056966772(result_637534727, "title", toJSStr(tip_637534748));
    }
    
    setLink_1056967822(parser_637534216, result_637534727, realLink_637534759);
    break BeforeRet;
    }
    else {
      parser_637534216.pos = initialPos_637534745;
    }
    
    }
    else {
    if (nextMatch_1056968482(parser_637534216, 91, 0)) {
    var refNameFailed_637534765 = [false];
    var refName_637534766 = parseReferenceName_637534700(parser_637534216, refNameFailed_637534765, 0);
    if (refNameFailed_637534765[0]) {
    parser_637534216.pos = initialPos_637534745;
    }
    else {
      if ((((refName_637534766) == null ? 0 : (refName_637534766).length) == 0)) {
      refName_637534766 = HEX5BHEX5D_1056964635(parser_637534216.str, HEX2EHEX2E_922747729(firstPos_637534729, secondPos_637534736));
      }
      
      result_637534727 = {isText: false, str: null, tag: 0, attrs: ({data: [], counter: 0, first: 0, last: 0}), content: []};
      if (image_637534215) {
      var Temporary17 = result_637534727;
      if (ConstSet37[Temporary17.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary17.isText, NTI33554466)); }
      Temporary17.tag = 21;
      if ((0 < (secondPos_637534736 - firstPos_637534729))) {
      attrEscaped_1056966772(result_637534727, "alt", HEX5BHEX5D_1056964635(parser_637534216.str, HEX2EHEX2E_922747729(firstPos_637534729, secondPos_637534736)));
      }
      
      }
      else {
        var Temporary18 = result_637534727;
        if (ConstSet38[Temporary18.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary18.isText, NTI33554466)); }
        Temporary18.tag = 23;
        var Temporary19 = result_637534727;
        if (ConstSet39[Temporary19.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary19.isText, NTI33554466)); }
        Temporary19.content = nimCopy(null, textElems_637534731, NTI637534268);
      }
      
      (Temporary20 = mgetOrPut_637534807(parser_637534216.linkReferrers, refName_637534766, []), Temporary20)[0][Temporary20[1]].push(result_637534727);;
      break BeforeRet;
    }
    
    }
    else {
    parser_637534216.pos -= 1;
    }
    }
    }
    
    if (image_637534215) {
    result_637534727 = newElem_1056964793(0, textElems_637534731);
    }
    else {
    if ((checkMark_637534744 == 0)) {
    if (canBeSub_637534728) {
    Temporary21 = 14;
    }
    else {
      parser_637534216.pos -= 1;
    Temporary21 = 0;
    }
    
    result_637534727 = newElem_1056964793(Temporary21, textElems_637534731);
    }
    else {
      result_637534727 = newElem_1056964793(22, []);
      attr_1056965226(result_637534727, "type", "checkbox");
      attr_1056965226(result_637534727, "disabled", "");
      if ((checkMark_637534744 == 2)) {
      attr_1056965226(result_637534727, "checked", "");
      }
      
    }
    }
  } while (false);

  return result_637534727;

}

function add_637534230(x_637534232, x_637534232_Idx) {
    if (null != "{") { if (null == x_637534232[x_637534232_Idx]) x_637534232[x_637534232_Idx] = "{"; else x_637534232[x_637534232_Idx] += "{"; };

  
}

function add_637534238(x_637534240, x_637534240_Idx) {
    if (null != "}") { if (null == x_637534240[x_637534240_Idx]) x_637534240[x_637534240_Idx] = "}"; else x_637534240[x_637534240_Idx] += "}"; };

  
}

function parseCurly_637534218(parser_637534219) {
              var Temporary4;
              var Temporary5;
              var Temporary6;
              var Temporary7;

  var result_637534220 = [null];

  BeforeRet: do {
    result_637534220[0] = "";
    var noHtmlEscape_637534222 = (nextMatch_1056968482(parser_637534219, 33, 0) || false);
    var opencurlys_637534223 = 1;
    var escaped_637534224 = false;
    Label1: do {
      var ch_637534225 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(parser_637534219.pos < ((parser_637534219.str) == null ? 0 : (parser_637534219.str).length))) break Label3;
            ch_637534225 = parser_637534219.str.charCodeAt((parser_637534219.pos + 0));
            if (!(escaped_637534224)) {
            switch (ch_637534225) {
            case 92:
              escaped_637534224 = true;
              break;
            case 123:
              opencurlys_637534223 += 1;
              add_637534230(result_637534220, 0);
              break;
            case 125:
              opencurlys_637534223 -= 1;
              if ((opencurlys_637534223 == 0)) {
              break BeforeRet;
              }
              else {
              add_637534238(result_637534220, 0);
              }
              
              break;
            default: 
              if (noHtmlEscape_637534222) {
              Temporary4 = String.fromCharCode(ch_637534225);
              }
              else {
              Temporary4 = escapeHtmlChar_1056964835(ch_637534225);
              }
              
              if (null != (Temporary5 = Temporary4, Temporary5)) { if (null == result_637534220[0]) result_637534220[0] = Temporary5; else result_637534220[0] += Temporary5; };
              break;
            }
            }
            else {
              switch (ch_637534225) {
              case 62:
              case 60:
              case 38:
                Temporary6 = escapeHtmlChar_1056964835(ch_637534225);
                break;
              case 92:
              case 125:
              case 123:
                Temporary6 = String.fromCharCode(ch_637534225);
                break;
              default: 
                Temporary6 = ("\\\\" + String.fromCharCode(ch_637534225));
                break;
              }
              if (null != (Temporary7 = Temporary6, Temporary7)) { if (null == result_637534220[0]) result_637534220[0] = Temporary7; else result_637534220[0] += Temporary7; };
              escaped_637534224 = false;
            }
            
            parser_637534219.pos += 1;
          }
      } while (false);
    } while (false);
  } while (false);

  return result_637534220[0];

}

function noAdjacentWhitespace_1056968478(parser_1056968479, offset_1056968480) {
  var result_1056968481 = false;

    result_1056968481 = (!(prevWhitespace_1056968452(parser_1056968479, offset_1056968480)) && !(nextWhitespace_1056968462(parser_1056968479, offset_1056968480)));

  return result_1056968481;

}

function onlyPrevWhitespace_1056968470(parser_1056968471, offset_1056968472) {
  var result_1056968473 = false;

    result_1056968473 = (prevWhitespace_1056968452(parser_1056968471, offset_1056968472) && !(nextWhitespace_1056968462(parser_1056968471, offset_1056968472)));

  return result_1056968473;

}

function ssClose_1124074480(s_1124074481) {
    var s_1124074482 = s_1124074481;
    s_1124074482.data = nimCopy(null, [], NTI33554439);

  
}

function ssAtEnd_1124074172(s_1124074173) {
  var result_1124074174 = false;

  BeforeRet: do {
    var s_1124074175 = s_1124074173;
    result_1124074174 = ((s_1124074175.data).length <= s_1124074175.pos);
    break BeforeRet;
  } while (false);

  return result_1124074174;

}

function clamp_1124074198(x_1124074200, a_1124074201, b_1124074202) {
  var result_1124074203 = 0;

  BeforeRet: do {
    if ((x_1124074200 < a_1124074201)) {
    result_1124074203 = a_1124074201;
    break BeforeRet;
    }
    
    if ((b_1124074202 < x_1124074200)) {
    result_1124074203 = b_1124074202;
    break BeforeRet;
    }
    
    result_1124074203 = x_1124074200;
    break BeforeRet;
  } while (false);

  return result_1124074203;

}

function ssSetPosition_1124074194(s_1124074195, pos_1124074196) {
    var s_1124074197 = s_1124074195;
    s_1124074197.pos = clamp_1124074198(pos_1124074196, 0, (s_1124074197.data).length);

  
}

function ssGetPosition_1124074204(s_1124074205) {
  var result_1124074206 = 0;

  BeforeRet: do {
    var s_1124074207 = s_1124074205;
    result_1124074206 = s_1124074207.pos;
    break BeforeRet;
  } while (false);

  return result_1124074206;

}

function HEX5BHEX5DHEX3D_654312487(s_654312490, s_654312490_Idx, x_654312491, b_654312492) {
    var a_654312494 = x_654312491.a;
    var L_654312496 = ((x_654312491.b - a_654312494) + 1);
    if ((L_654312496 == (b_654312492).length)) {
    Label1: do {
      var i_654312501 = 0;
      var i_469762203 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762203 < L_654312496)) break Label3;
            i_654312501 = i_469762203;
            s_654312490[s_654312490_Idx][(i_654312501 + a_654312494)] = b_654312492[i_654312501];
            i_469762203 += 1;
          }
      } while (false);
    } while (false);
    }
    else {
      var shiftHEX60gensym89_654312502 = ((b_654312492).length - nimMax(0, L_654312496));
      var newLenHEX60gensym89_654312503 = ((s_654312490[s_654312490_Idx]).length + shiftHEX60gensym89_654312502);
      if ((0 < shiftHEX60gensym89_654312502)) {
      (s_654312490[s_654312490_Idx].length = newLenHEX60gensym89_654312503);
      Label4: do {
        var iHEX60gensym89_654312509 = 0;
        var colontmp__469762206 = 0;
        var colontmp__469762207 = 0;
        colontmp__469762206 = (newLenHEX60gensym89_654312503 - 1);
        colontmp__469762207 = (a_654312494 + (b_654312492).length);
        var res_469762209 = colontmp__469762206;
        Label5: do {
            Label6: while (true) {
            if (!(colontmp__469762207 <= res_469762209)) break Label6;
              iHEX60gensym89_654312509 = res_469762209;
              s_654312490[s_654312490_Idx][iHEX60gensym89_654312509] = s_654312490[s_654312490_Idx][(iHEX60gensym89_654312509 - shiftHEX60gensym89_654312502)];
              res_469762209 -= 1;
            }
        } while (false);
      } while (false);
      }
      else {
        Label7: do {
          var iHEX60gensym89_654312515 = 0;
          var colontmp__469762212 = 0;
          var colontmp__469762213 = 0;
          colontmp__469762212 = (a_654312494 + (b_654312492).length);
          colontmp__469762213 = (newLenHEX60gensym89_654312503 - 1);
          var res_469762214 = colontmp__469762212;
          Label8: do {
              Label9: while (true) {
              if (!(res_469762214 <= colontmp__469762213)) break Label9;
                iHEX60gensym89_654312515 = res_469762214;
                s_654312490[s_654312490_Idx][iHEX60gensym89_654312515] = s_654312490[s_654312490_Idx][(iHEX60gensym89_654312515 - shiftHEX60gensym89_654312502)];
                res_469762214 += 1;
              }
          } while (false);
        } while (false);
        (s_654312490[s_654312490_Idx].length = newLenHEX60gensym89_654312503);
      }
      
      Label10: do {
        var iHEX60gensym89_654312520 = 0;
        var colontmp__469762217 = 0;
        colontmp__469762217 = (b_654312492).length;
        var i_469762218 = 0;
        Label11: do {
            Label12: while (true) {
            if (!(i_469762218 < colontmp__469762217)) break Label12;
              iHEX60gensym89_654312520 = i_469762218;
              s_654312490[s_654312490_Idx][(a_654312494 + iHEX60gensym89_654312520)] = b_654312492[iHEX60gensym89_654312520];
              i_469762218 += 1;
            }
        } while (false);
      } while (false);
    }
    

  
}

function HEX5BHEX5D_922747754(s_922747757, x_922747758) {
  var result_922747759 = [];

    var a_922747761 = x_922747758.a;
    var L_922747763 = ((x_922747758.b - a_922747761) + 1);
    result_922747759 = nimCopy(null, mnewString(L_922747763), NTI33554439);
    Label1: do {
      var i_922747768 = 0;
      var i_469762221 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762221 < L_922747763)) break Label3;
            i_922747768 = i_469762221;
            result_922747759[i_922747768] = s_922747757[(i_922747768 + a_922747761)];
            i_469762221 += 1;
          }
      } while (false);
    } while (false);

  return result_922747759;

}

function ssReadDataStr_1124074208(s_1124074209, buffer_1124074210, buffer_1124074210_Idx, slice_1124074212) {
  var result_1124074213 = 0;

    var s_1124074214 = s_1124074209;
    result_1124074213 = nimMin(((slice_1124074212.b + 1) - slice_1124074212.a), ((s_1124074214.data).length - s_1124074214.pos));
    if ((0 < result_1124074213)) {
    Label1: do {
    } while (false);
    HEX5BHEX5DHEX3D_654312487(buffer_1124074210, buffer_1124074210_Idx, HEX2EHEX2E_922747729(slice_1124074212.a, ((slice_1124074212.a + result_1124074213) - 1)), HEX5BHEX5D_922747754(s_1124074214.data, HEX2EHEX2E_922747729(s_1124074214.pos, ((s_1124074214.pos + result_1124074213) - 1))));
    s_1124074214.pos += result_1124074213;
    }
    else {
      result_1124074213 = 0;
    }
    

  return result_1124074213;

}

function isNimException_33556520() {
    return lastJSError && lastJSError.m_type;

  
}

function getCurrentException() {
  var result_33556523 = null;

    if (isNimException_33556520()) {
    result_33556523 = lastJSError;
    }
    

  return result_33556523;

}

function ssReadData_1124074305(s_1124074306, buffer_1124074307, buffer_1124074307_Idx, bufLen_1124074308) {
    var Temporary2;

  var result_1124074309 = 0;

    var s_1124074310 = s_1124074306;
    result_1124074309 = nimMin(bufLen_1124074308, ((s_1124074310.data).length - s_1124074310.pos));
    if ((0 < result_1124074309)) {
++excHandler;
    Temporary2 = framePtr;
    try {
    HEX5BHEX5DHEX3D_654312487(buffer_1124074307, buffer_1124074307_Idx, HEX2EHEX2E_922747729(0, (result_1124074309 - 1)), HEX5BHEX5D_922747754(s_1124074310.data, HEX2EHEX2E_922747729(s_1124074310.pos, ((s_1124074310.pos + result_1124074309) - 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    raiseException({message: makeNimstrLit("could not read string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555113, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }
    s_1124074310.pos += result_1124074309;
    }
    else {
      result_1124074309 = 0;
    }
    

  return result_1124074309;

}

function ssPeekData_1124074377(s_1124074378, buffer_1124074379, buffer_1124074379_Idx, bufLen_1124074380) {
    var Temporary2;

  var result_1124074381 = 0;

    var s_1124074382 = s_1124074378;
    result_1124074381 = nimMin(bufLen_1124074380, ((s_1124074382.data).length - s_1124074382.pos));
    if ((0 < result_1124074381)) {
++excHandler;
    Temporary2 = framePtr;
    try {
    HEX5BHEX5DHEX3D_654312487(buffer_1124074379, buffer_1124074379_Idx, HEX2EHEX2E_922747729(0, (result_1124074381 - 1)), HEX5BHEX5D_922747754(s_1124074382.data, HEX2EHEX2E_922747729(s_1124074382.pos, ((s_1124074382.pos + result_1124074381) - 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    raiseException({message: makeNimstrLit("could not peek string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555113, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }
    }
    else {
      result_1124074381 = 0;
    }
    

  return result_1124074381;

}

function ssWriteData_1124074427(s_1124074428, buffer_1124074429, buffer_1124074429_Idx, bufLen_1124074430) {
    var Temporary2;

  BeforeRet: do {
    var s_1124074431 = s_1124074428;
    if ((bufLen_1124074430 <= 0)) {
    break BeforeRet;
    }
    
    if (((s_1124074431.data).length < (s_1124074431.pos + bufLen_1124074430))) {
    (s_1124074431.data.length = (s_1124074431.pos + bufLen_1124074430));
    }
    
++excHandler;
    Temporary2 = framePtr;
    try {
    HEX5BHEX5DHEX3D_654312487(s_1124074431, "data", HEX2EHEX2E_922747729(s_1124074431.pos, ((s_1124074431.pos + bufLen_1124074430) - 1)), HEX5BHEX5D_922747754(buffer_1124074429[buffer_1124074429_Idx], HEX2EHEX2E_922747729(0, (bufLen_1124074430 - 1))));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
    framePtr = Temporary2;
    raiseException({message: makeNimstrLit("could not write to string stream, did you use a non-string buffer pointer?"), parent: getCurrentException(), m_type: NTI33555113, name: null, trace: [], up: null}, "Defect");
    lastJSError = prevJSError;
    } finally {
    framePtr = Temporary2;
    }
    s_1124074431.pos += bufLen_1124074430;
  } while (false);

  
}

function newStringStream_1124074483(s_1124074484) {
  var result_1124074485 = null;

    result_1124074485 = ({m_type: NTI1124073942, data: [], pos: 0, closeImpl: null, atEndImpl: null, setPositionImpl: null, getPositionImpl: null, readDataStrImpl: null, readLineImpl: null, readDataImpl: null, peekDataImpl: null, writeDataImpl: null, flushImpl: null});
    result_1124074485.data = nimCopy(null, s_1124074484, NTI33554439);
    result_1124074485.pos = 0;
    result_1124074485.closeImpl = ssClose_1124074480;
    result_1124074485.atEndImpl = ssAtEnd_1124074172;
    result_1124074485.setPositionImpl = ssSetPosition_1124074194;
    result_1124074485.getPositionImpl = ssGetPosition_1124074204;
    result_1124074485.readDataStrImpl = ssReadDataStr_1124074208;
    result_1124074485.readDataImpl = ssReadData_1124074305;
    result_1124074485.peekDataImpl = ssPeekData_1124074377;
    result_1124074485.writeDataImpl = ssWriteData_1124074427;

  return result_1124074485;

}

function setPosition_1124073539(s_1124073540, pos_1124073541) {
    s_1124073540.setPositionImpl(s_1124073540, pos_1124073541);

  
}

function readData_1124073547(s_1124073548, buffer_1124073549, buffer_1124073549_Idx, bufLen_1124073550) {
  var result_1124073551 = 0;

    result_1124073551 = s_1124073548.readDataImpl(s_1124073548, buffer_1124073549, buffer_1124073549_Idx, bufLen_1124073550);

  return result_1124073551;

}

function readDataStr_1124073553(s_1124073554, buffer_1124073555, buffer_1124073555_Idx, slice_1124073557) {
  var result_1124073558 = 0;

    if (!((s_1124073554.readDataStrImpl == null))) {
    result_1124073558 = s_1124073554.readDataStrImpl(s_1124073554, buffer_1124073555, buffer_1124073555_Idx, slice_1124073557);
    }
    else {
      result_1124073558 = readData_1124073547(s_1124073554, buffer_1124073555[buffer_1124073555_Idx], slice_1124073557.a, ((slice_1124073557.b + 1) - slice_1124073557.a));
    }
    

  return result_1124073558;

}

function fillBuffer_1157627920(L_1157627921) {
                  var Temporary8;

    var charsRead_1157627922 = 0;
    var toCopy_1157627923 = 0;
    var s_1157627924 = 0;
    var oldBufLen_1157627925 = 0;
    toCopy_1157627923 = ((L_1157627921.buf).length - (L_1157627921.sentinel + 1));
    if ((0 < toCopy_1157627923)) {
    Label1: do {
      var i_1157627936 = 0;
      var i_469762224 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762224 < toCopy_1157627923)) break Label3;
            i_1157627936 = i_469762224;
            L_1157627921.buf[i_1157627936] = L_1157627921.buf[((L_1157627921.sentinel + 1) + i_1157627936)];
            i_469762224 += 1;
          }
      } while (false);
    } while (false);
    }
    
    charsRead_1157627922 = readDataStr_1124073553(L_1157627921.input, L_1157627921, "buf", HEX2EHEX2E_922747729(toCopy_1157627923, (((toCopy_1157627923 + L_1157627921.sentinel) + 1) - 1)));
    s_1157627924 = (toCopy_1157627923 + charsRead_1157627922);
    if ((charsRead_1157627922 < (L_1157627921.sentinel + 1))) {
    L_1157627921.buf[s_1157627924] = 0;
    L_1157627921.sentinel = s_1157627924;
    }
    else {
      s_1157627924 -= 1;
      Label4: do {
          Label5: while (true) {
          if (!true) break Label5;
            Label6: do {
                Label7: while (true) {
                  if (!(0 <= s_1157627924)) Temporary8 = false; else {                    Temporary8 = !((L_1157627921.refillChars[L_1157627921.buf[s_1157627924]] != undefined));                  }                if (!Temporary8) break Label7;
                  s_1157627924 -= 1;
                }
            } while (false);
            if ((0 <= s_1157627924)) {
            L_1157627921.sentinel = s_1157627924;
            break Label4;
            }
            else {
              oldBufLen_1157627925 = (L_1157627921.buf).length;
              (L_1157627921.buf.length = ((L_1157627921.buf).length * 2));
              charsRead_1157627922 = readDataStr_1124073553(L_1157627921.input, L_1157627921, "buf", HEX2EHEX2E_922747729(oldBufLen_1157627925, ((L_1157627921.buf).length - 1)));
              if ((charsRead_1157627922 < oldBufLen_1157627925)) {
              L_1157627921.buf[(oldBufLen_1157627925 + charsRead_1157627922)] = 0;
              L_1157627921.sentinel = (oldBufLen_1157627925 + charsRead_1157627922);
              break Label4;
              }
              
              s_1157627924 = ((L_1157627921.buf).length - 1);
            }
            
          }
      } while (false);
    }
    

  
}

function skipUtf8Bom_1157628016(L_1157628017) {
      var Temporary1;
      var Temporary2;

      if (!(L_1157628017.buf[0] == 239)) Temporary2 = false; else {        Temporary2 = (L_1157628017.buf[1] == 187);      }      if (!Temporary2) Temporary1 = false; else {        Temporary1 = (L_1157628017.buf[2] == 191);      }    if (Temporary1) {
    L_1157628017.bufpos += 3;
    L_1157628017.lineStart += 3;
    }
    

  
}

function open_1157628026(L_1157628027, input_1157628028, bufLen_1157628029, refillChars_1157628030) {
    L_1157628027.input = input_1157628028;
    L_1157628027.bufpos = 0;
    L_1157628027.offsetBase = 0;
    L_1157628027.refillChars = nimCopy(L_1157628027.refillChars, refillChars_1157628030, NTI1157627909);
    L_1157628027.buf = nimCopy(null, mnewString(bufLen_1157628029), NTI33554439);
    L_1157628027.sentinel = (bufLen_1157628029 - 1);
    L_1157628027.lineStart = 0;
    L_1157628027.lineNumber = 1;
    fillBuffer_1157627920(L_1157628027);
    skipUtf8Bom_1157628016(L_1157628027);

  
}

function open_1090519114(my_1090519115, input_1090519116, filename_1090519117, options_1090519118) {
    open_1157628026(my_1090519115, input_1090519116, 8192, ConstSet54);
    my_1090519115.filename = nimCopy(null, filename_1090519117, NTI33554439);
    my_1090519115.state = 0;
    my_1090519115.kind = 0;
    my_1090519115.a = nimCopy(null, [], NTI33554439);
    my_1090519115.b = nimCopy(null, [], NTI33554439);
    my_1090519115.c = nimCopy(null, [], NTI33554439);
    my_1090519115.cIsEmpty = true;
    my_1090519115.options = nimCopy(my_1090519115.options, options_1090519118, NTI1090519052);

  
}

function fillBaseLexer_1157627972(L_1157627973, pos_1157627974) {
  var result_1157627975 = 0;

    if ((pos_1157627974 < L_1157627973.sentinel)) {
    result_1157627975 = (pos_1157627974 + 1);
    }
    else {
      fillBuffer_1157627920(L_1157627973);
      L_1157627973.offsetBase += pos_1157627974;
      L_1157627973.bufpos = 0;
      result_1157627975 = 0;
    }
    

  return result_1157627975;

}

function handleRefillChar_1157628005(L_1157628006, pos_1157628007) {
  var result_1157628008 = 0;

    result_1157628008 = fillBaseLexer_1157627972(L_1157628006, pos_1157628007);

  return result_1157628008;

}

function markError_1090519244(my_1090519245, kind_1090519246) {
    my_1090519245.err = kind_1090519246;
    my_1090519245.state = 4;

  
}

function parseName_1090519317(my_1090519318, dest_1090519319, dest_1090519319_Idx) {
    var pos_1090519320 = my_1090519318.bufpos;
    if ((ConstSet56[my_1090519318.buf[pos_1090519320]] != undefined)) {
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          addChar(dest_1090519319[dest_1090519319_Idx], my_1090519318.buf[pos_1090519320]);;
          pos_1090519320 += 1;
          if (!((ConstSet57[my_1090519318.buf[pos_1090519320]] != undefined))) {
          break Label1;
          }
          
        }
    } while (false);
    my_1090519318.bufpos = pos_1090519320;
    }
    else {
    markError_1090519244(my_1090519318, 2);
    }
    

  
}

function handleCR_1157627983(L_1157627984, pos_1157627985) {
  var result_1157627986 = 0;

    L_1157627984.lineNumber += 1;
    result_1157627986 = fillBaseLexer_1157627972(L_1157627984, pos_1157627985);
    if ((L_1157627984.buf[result_1157627986] == 10)) {
    result_1157627986 = fillBaseLexer_1157627972(L_1157627984, result_1157627986);
    }
    
    L_1157627984.lineStart = result_1157627986;

  return result_1157627986;

}

function handleLF_1157627994(L_1157627995, pos_1157627996) {
  var result_1157627997 = 0;

    L_1157627995.lineNumber += 1;
    result_1157627997 = fillBaseLexer_1157627972(L_1157627995, pos_1157627996);
    L_1157627995.lineStart = result_1157627997;

  return result_1157627997;

}

function parseWhitespace_1090519307(my_1090519308, skip_1090519309) {
    var pos_1090519310 = my_1090519308.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519308.buf[pos_1090519310]) {
          case 32:
          case 9:
            if (!(skip_1090519309)) {
            addChar(my_1090519308.a, my_1090519308.buf[pos_1090519310]);;
            }
            
            pos_1090519310 += 1;
            break;
          case 13:
            pos_1090519310 = handleCR_1157627983(my_1090519308, pos_1090519310);
            if (!(skip_1090519309)) {
            addChar(my_1090519308.a, 10);;
            }
            
            break;
          case 10:
            pos_1090519310 = handleLF_1157627994(my_1090519308, pos_1090519310);
            if (!(skip_1090519309)) {
            addChar(my_1090519308.a, 10);;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);
    my_1090519308.bufpos = pos_1090519310;

  
}

function parseEndTag_1090519490(my_1090519491) {
    my_1090519491.bufpos = handleRefillChar_1157628005(my_1090519491, (my_1090519491.bufpos + 1));
    parseName_1090519317(my_1090519491, my_1090519491, "a");
    parseWhitespace_1090519307(my_1090519491, true);
    if ((my_1090519491.buf[my_1090519491.bufpos] == 62)) {
    my_1090519491.bufpos += 1;
    }
    else {
    markError_1090519244(my_1090519491, 5);
    }
    
    my_1090519491.kind = 7;

  
}

function parseCDATA_1090519256(my_1090519257) {
              var Temporary3;

    var pos_1090519258 = (my_1090519257.bufpos + 9);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519257.buf[pos_1090519258]) {
          case 93:
              if (!(my_1090519257.buf[(pos_1090519258 + 1)] == 93)) Temporary3 = false; else {                Temporary3 = (my_1090519257.buf[(pos_1090519258 + 2)] == 62);              }            if (Temporary3) {
            pos_1090519258 += 3;
            break Label1;
            }
            
            addChar(my_1090519257.a, 93);;
            pos_1090519258 += 1;
            break;
          case 0:
            markError_1090519244(my_1090519257, 1);
            break Label1;
            break;
          case 13:
            pos_1090519258 = handleCR_1157627983(my_1090519257, pos_1090519258);
            addChar(my_1090519257.a, 10);;
            break;
          case 10:
            pos_1090519258 = handleLF_1157627994(my_1090519257, pos_1090519258);
            addChar(my_1090519257.a, 10);;
            break;
          case 47:
            pos_1090519258 = handleRefillChar_1157628005(my_1090519257, pos_1090519258);
            addChar(my_1090519257.a, 47);;
            break;
          default: 
            addChar(my_1090519257.a, my_1090519257.buf[pos_1090519258]);;
            pos_1090519258 += 1;
            break;
          }
        }
    } while (false);
    my_1090519257.bufpos = pos_1090519258;
    my_1090519257.kind = 11;

  
}

function parseComment_1090519271(my_1090519272) {
              var Temporary3;

    var pos_1090519273 = (my_1090519272.bufpos + 4);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519272.buf[pos_1090519273]) {
          case 45:
              if (!(my_1090519272.buf[(pos_1090519273 + 1)] == 45)) Temporary3 = false; else {                Temporary3 = (my_1090519272.buf[(pos_1090519273 + 2)] == 62);              }            if (Temporary3) {
            pos_1090519273 += 3;
            break Label1;
            }
            
            if ((my_1090519272.options[1] != undefined)) {
            addChar(my_1090519272.a, 45);;
            }
            
            pos_1090519273 += 1;
            break;
          case 0:
            markError_1090519244(my_1090519272, 8);
            break Label1;
            break;
          case 13:
            pos_1090519273 = handleCR_1157627983(my_1090519272, pos_1090519273);
            if ((my_1090519272.options[1] != undefined)) {
            addChar(my_1090519272.a, 10);;
            }
            
            break;
          case 10:
            pos_1090519273 = handleLF_1157627994(my_1090519272, pos_1090519273);
            if ((my_1090519272.options[1] != undefined)) {
            addChar(my_1090519272.a, 10);;
            }
            
            break;
          case 47:
            pos_1090519273 = handleRefillChar_1157628005(my_1090519272, pos_1090519273);
            if ((my_1090519272.options[1] != undefined)) {
            addChar(my_1090519272.a, 47);;
            }
            
            break;
          default: 
            if ((my_1090519272.options[1] != undefined)) {
            addChar(my_1090519272.a, my_1090519272.buf[pos_1090519273]);;
            }
            
            pos_1090519273 += 1;
            break;
          }
        }
    } while (false);
    my_1090519272.bufpos = pos_1090519273;
    my_1090519272.kind = 4;

  
}

function parseSpecial_1090519443(my_1090519444) {
    var pos_1090519445 = (my_1090519444.bufpos + 2);
    var opentags_1090519446 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519444.buf[pos_1090519445]) {
          case 0:
            markError_1090519244(my_1090519444, 5);
            break Label1;
            break;
          case 60:
            opentags_1090519446 += 1;
            pos_1090519445 += 1;
            addChar(my_1090519444.a, 60);;
            break;
          case 62:
            if ((opentags_1090519446 <= 0)) {
            pos_1090519445 += 1;
            break Label1;
            }
            
            opentags_1090519446 -= 1;
            pos_1090519445 += 1;
            addChar(my_1090519444.a, 62);;
            break;
          case 13:
            pos_1090519445 = handleCR_1157627983(my_1090519444, pos_1090519445);
            addChar(my_1090519444.a, 10);;
            break;
          case 10:
            pos_1090519445 = handleLF_1157627994(my_1090519444, pos_1090519445);
            addChar(my_1090519444.a, 10);;
            break;
          case 47:
            pos_1090519445 = handleRefillChar_1157628005(my_1090519444, pos_1090519445);
            addChar(my_1090519444.b, 47);;
            break;
          default: 
            addChar(my_1090519444.a, my_1090519444.buf[pos_1090519445]);;
            pos_1090519445 += 1;
            break;
          }
        }
    } while (false);
    my_1090519444.bufpos = pos_1090519445;
    my_1090519444.kind = 13;

  
}

function parsePI_1090519424(my_1090519425) {
    my_1090519425.bufpos += 2;
    parseName_1090519317(my_1090519425, my_1090519425, "a");
    var pos_1090519430 = my_1090519425.bufpos;
    (my_1090519425.b.length = 0);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519425.buf[pos_1090519430]) {
          case 0:
            markError_1090519244(my_1090519425, 4);
            break Label1;
            break;
          case 63:
            if ((my_1090519425.buf[(pos_1090519430 + 1)] == 62)) {
            pos_1090519430 += 2;
            break Label1;
            }
            
            addChar(my_1090519425.b, 63);;
            pos_1090519430 += 1;
            break;
          case 13:
            pos_1090519430 = handleCR_1157627983(my_1090519425, pos_1090519430);
            addChar(my_1090519425.b, 10);;
            break;
          case 10:
            pos_1090519430 = handleLF_1157627994(my_1090519425, pos_1090519430);
            addChar(my_1090519425.b, 10);;
            break;
          case 47:
            pos_1090519430 = handleRefillChar_1157628005(my_1090519425, pos_1090519430);
            addChar(my_1090519425.b, 47);;
            break;
          default: 
            addChar(my_1090519425.b, my_1090519425.buf[pos_1090519430]);;
            pos_1090519430 += 1;
            break;
          }
        }
    } while (false);
    my_1090519425.bufpos = pos_1090519430;
    my_1090519425.kind = 5;

  
}

function parseTag_1090519471(my_1090519472) {
        var Temporary1;

  BeforeRet: do {
    my_1090519472.bufpos += 1;
    parseName_1090519317(my_1090519472, my_1090519472, "a");
    if (((my_1090519472.a).length == 0)) {
    my_1090519472.kind = 2;
    addChar(my_1090519472.a, 60);;
    break BeforeRet;
    }
    
    parseWhitespace_1090519307(my_1090519472, true);
    if ((ConstSet58[my_1090519472.buf[my_1090519472.bufpos]] != undefined)) {
    my_1090519472.kind = 8;
    my_1090519472.state = 2;
    my_1090519472.c = nimCopy(null, my_1090519472.a, NTI33554439);
    my_1090519472.cIsEmpty = false;
    }
    else {
      my_1090519472.kind = 6;
      var slash_1090519481 = (my_1090519472.buf[my_1090519472.bufpos] == 47);
      if (slash_1090519481) {
      my_1090519472.bufpos = handleRefillChar_1157628005(my_1090519472, my_1090519472.bufpos);
      }
      
        if (!slash_1090519481) Temporary1 = false; else {          Temporary1 = (my_1090519472.buf[my_1090519472.bufpos] == 62);        }      if (Temporary1) {
      my_1090519472.bufpos += 1;
      my_1090519472.state = 3;
      my_1090519472.c = nimCopy(null, [], NTI33554439);
      my_1090519472.cIsEmpty = true;
      }
      else {
      if ((my_1090519472.buf[my_1090519472.bufpos] == 62)) {
      my_1090519472.bufpos += 1;
      }
      else {
      markError_1090519244(my_1090519472, 5);
      }
      }
    }
    
  } while (false);

  
}

function HEX3CHEX3DHEX25_33555429(x_33555430, y_33555431) {
  var result_33555432 = false;

    result_33555432 = ((x_33555430 >>> 0) <= (y_33555431 >>> 0));

  return result_33555432;

}

function nuctoUTF8(c_922747221) {
  var result_922747222 = [];

    result_922747222 = nimCopy(null, [], NTI33554439);
    var iHEX60gensym49_922747224 = c_922747221;
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 127)) {
    (result_922747222.length = 1);
    result_922747222[0] = iHEX60gensym49_922747224;
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 2047)) {
    (result_922747222.length = 2);
    result_922747222[0] = ((iHEX60gensym49_922747224 >> 6) | 192);
    result_922747222[1] = ((iHEX60gensym49_922747224 & 63) | 128);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 65535)) {
    (result_922747222.length = 3);
    result_922747222[0] = ((iHEX60gensym49_922747224 >> 12) | 224);
    result_922747222[1] = (((iHEX60gensym49_922747224 >> 6) & 63) | 128);
    result_922747222[2] = ((iHEX60gensym49_922747224 & 63) | 128);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 2097151)) {
    (result_922747222.length = 4);
    result_922747222[0] = ((iHEX60gensym49_922747224 >> 18) | 240);
    result_922747222[1] = (((iHEX60gensym49_922747224 >> 12) & 63) | 128);
    result_922747222[2] = (((iHEX60gensym49_922747224 >> 6) & 63) | 128);
    result_922747222[3] = ((iHEX60gensym49_922747224 & 63) | 128);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 67108863)) {
    (result_922747222.length = 5);
    result_922747222[0] = ((iHEX60gensym49_922747224 >> 24) | 248);
    result_922747222[1] = (((iHEX60gensym49_922747224 >> 18) & 63) | 128);
    result_922747222[2] = (((iHEX60gensym49_922747224 >> 12) & 63) | 128);
    result_922747222[3] = (((iHEX60gensym49_922747224 >> 6) & 63) | 128);
    result_922747222[4] = ((iHEX60gensym49_922747224 & 63) | 128);
    }
    else {
    if (HEX3CHEX3DHEX25_33555429(iHEX60gensym49_922747224, 2147483647)) {
    (result_922747222.length = 6);
    result_922747222[0] = ((iHEX60gensym49_922747224 >> 30) | 252);
    result_922747222[1] = (((iHEX60gensym49_922747224 >> 24) & 63) | 128);
    result_922747222[2] = (((iHEX60gensym49_922747224 >> 18) & 63) | 128);
    result_922747222[3] = (((iHEX60gensym49_922747224 >> 12) & 63) | 128);
    result_922747222[4] = (((iHEX60gensym49_922747224 >> 6) & 63) | 128);
    result_922747222[5] = ((iHEX60gensym49_922747224 & 63) | 128);
    }
    else {
    }
    }}}}}

  return result_922747222;

}

function parseEntity_1090519333(my_1090519334, dest_1090519335, dest_1090519335_Idx) {
      var Temporary5;
      var Temporary6;
      var Temporary7;
      var Temporary8;
      var Temporary9;
      var Temporary10;
      var Temporary11;
      var Temporary12;
      var Temporary13;
      var Temporary14;
      var Temporary15;
      var Temporary16;
      var Temporary17;
      var Temporary18;
      var Temporary19;
        var Temporary20;

    var pos_1090519336 = (my_1090519334.bufpos + 1);
    my_1090519334.kind = 2;
    if ((my_1090519334.buf[pos_1090519336] == 35)) {
    var r_1090519337 = 0;
    pos_1090519336 += 1;
    if ((my_1090519334.buf[pos_1090519336] == 120)) {
    pos_1090519336 += 1;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519334.buf[pos_1090519336]) {
          case 48:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
            r_1090519337 = ((r_1090519337 << 4) | (my_1090519334.buf[pos_1090519336] - 48));
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
            r_1090519337 = ((r_1090519337 << 4) | ((my_1090519334.buf[pos_1090519336] - 97) + 10));
            break;
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
            r_1090519337 = ((r_1090519337 << 4) | ((my_1090519334.buf[pos_1090519336] - 65) + 10));
            break;
          default: 
            break Label1;
            break;
          }
          pos_1090519336 += 1;
        }
    } while (false);
    }
    else {
      Label3: do {
          Label4: while (true) {
          if (!(ConstSet59[my_1090519334.buf[pos_1090519336]] != undefined)) break Label4;
            r_1090519337 = ((r_1090519337 * 10) + (my_1090519334.buf[pos_1090519336] - 48));
            pos_1090519336 += 1;
          }
      } while (false);
    }
    
    dest_1090519335[dest_1090519335_Idx].push.apply(dest_1090519335[dest_1090519335_Idx], nuctoUTF8(((r_1090519337) | 0)));;
    }
    else {
      if (!(my_1090519334.buf[pos_1090519336] == 108)) Temporary6 = false; else {        Temporary6 = (my_1090519334.buf[(pos_1090519336 + 1)] == 116);      }      if (!Temporary6) Temporary5 = false; else {        Temporary5 = (my_1090519334.buf[(pos_1090519336 + 2)] == 59);      }    if (Temporary5) {
    addChar(dest_1090519335[dest_1090519335_Idx], 60);;
    pos_1090519336 += 2;
    }
    else {
      if (!(my_1090519334.buf[pos_1090519336] == 103)) Temporary8 = false; else {        Temporary8 = (my_1090519334.buf[(pos_1090519336 + 1)] == 116);      }      if (!Temporary8) Temporary7 = false; else {        Temporary7 = (my_1090519334.buf[(pos_1090519336 + 2)] == 59);      }    if (Temporary7) {
    addChar(dest_1090519335[dest_1090519335_Idx], 62);;
    pos_1090519336 += 2;
    }
    else {
      if (!(my_1090519334.buf[pos_1090519336] == 97)) Temporary11 = false; else {        Temporary11 = (my_1090519334.buf[(pos_1090519336 + 1)] == 109);      }      if (!Temporary11) Temporary10 = false; else {        Temporary10 = (my_1090519334.buf[(pos_1090519336 + 2)] == 112);      }      if (!Temporary10) Temporary9 = false; else {        Temporary9 = (my_1090519334.buf[(pos_1090519336 + 3)] == 59);      }    if (Temporary9) {
    addChar(dest_1090519335[dest_1090519335_Idx], 38);;
    pos_1090519336 += 3;
    }
    else {
      if (!(my_1090519334.buf[pos_1090519336] == 97)) Temporary15 = false; else {        Temporary15 = (my_1090519334.buf[(pos_1090519336 + 1)] == 112);      }      if (!Temporary15) Temporary14 = false; else {        Temporary14 = (my_1090519334.buf[(pos_1090519336 + 2)] == 111);      }      if (!Temporary14) Temporary13 = false; else {        Temporary13 = (my_1090519334.buf[(pos_1090519336 + 3)] == 115);      }      if (!Temporary13) Temporary12 = false; else {        Temporary12 = (my_1090519334.buf[(pos_1090519336 + 4)] == 59);      }    if (Temporary12) {
    addChar(dest_1090519335[dest_1090519335_Idx], 39);;
    pos_1090519336 += 4;
    }
    else {
      if (!(my_1090519334.buf[pos_1090519336] == 113)) Temporary19 = false; else {        Temporary19 = (my_1090519334.buf[(pos_1090519336 + 1)] == 117);      }      if (!Temporary19) Temporary18 = false; else {        Temporary18 = (my_1090519334.buf[(pos_1090519336 + 2)] == 111);      }      if (!Temporary18) Temporary17 = false; else {        Temporary17 = (my_1090519334.buf[(pos_1090519336 + 3)] == 116);      }      if (!Temporary17) Temporary16 = false; else {        Temporary16 = (my_1090519334.buf[(pos_1090519336 + 4)] == 59);      }    if (Temporary16) {
    addChar(dest_1090519335[dest_1090519335_Idx], 34);;
    pos_1090519336 += 4;
    }
    else {
      my_1090519334.bufpos = pos_1090519336;
      var name_1090519414 = [[]];
      parseName_1090519317(my_1090519334, name_1090519414, 0);
      pos_1090519336 = my_1090519334.bufpos;
        if (!!((my_1090519334.err == 2))) Temporary20 = false; else {          Temporary20 = (my_1090519334.buf[pos_1090519336] == 59);        }      if (Temporary20) {
      my_1090519334.kind = 12;
      }
      else {
      addChar(dest_1090519335[dest_1090519335_Idx], 38);;
      }
      
      dest_1090519335[dest_1090519335_Idx].push.apply(dest_1090519335[dest_1090519335_Idx], name_1090519414[0]);;
    }
    }}}}}
    if ((my_1090519334.buf[pos_1090519336] == 59)) {
    pos_1090519336 += 1;
    }
    else {
      my_1090519334.err = 3;
    }
    
    my_1090519334.bufpos = pos_1090519336;

  
}

function parseCharData_1090519549(my_1090519550) {
    var pos_1090519551 = my_1090519550.bufpos;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (my_1090519550.buf[pos_1090519551]) {
          case 0:
          case 60:
          case 38:
            break Label1;
            break;
          case 13:
            pos_1090519551 = handleCR_1157627983(my_1090519550, pos_1090519551);
            addChar(my_1090519550.a, 10);;
            break;
          case 10:
            pos_1090519551 = handleLF_1157627994(my_1090519550, pos_1090519551);
            addChar(my_1090519550.a, 10);;
            break;
          case 47:
            pos_1090519551 = handleRefillChar_1157628005(my_1090519550, pos_1090519551);
            addChar(my_1090519550.a, 47);;
            break;
          default: 
            addChar(my_1090519550.a, my_1090519550.buf[pos_1090519551]);;
            pos_1090519551 += 1;
            break;
          }
        }
    } while (false);
    my_1090519550.bufpos = pos_1090519551;
    my_1090519550.kind = 2;

  
}

function rawGetTok_1090519556(my_1090519557) {
          var Temporary1;
          var Temporary2;
          var Temporary3;
          var Temporary4;
          var Temporary5;
          var Temporary6;
          var Temporary7;

    my_1090519557.kind = 0;
    (my_1090519557.a.length = 0);
    var pos_1090519558 = my_1090519557.bufpos;
    switch (my_1090519557.buf[pos_1090519558]) {
    case 60:
      switch (my_1090519557.buf[(pos_1090519558 + 1)]) {
      case 47:
        parseEndTag_1090519490(my_1090519557);
        break;
      case 33:
          if (!(my_1090519557.buf[(pos_1090519558 + 2)] == 91)) Temporary6 = false; else {            Temporary6 = (my_1090519557.buf[(pos_1090519558 + 3)] == 67);          }          if (!Temporary6) Temporary5 = false; else {            Temporary5 = (my_1090519557.buf[(pos_1090519558 + 4)] == 68);          }          if (!Temporary5) Temporary4 = false; else {            Temporary4 = (my_1090519557.buf[(pos_1090519558 + 5)] == 65);          }          if (!Temporary4) Temporary3 = false; else {            Temporary3 = (my_1090519557.buf[(pos_1090519558 + 6)] == 84);          }          if (!Temporary3) Temporary2 = false; else {            Temporary2 = (my_1090519557.buf[(pos_1090519558 + 7)] == 65);          }          if (!Temporary2) Temporary1 = false; else {            Temporary1 = (my_1090519557.buf[(pos_1090519558 + 8)] == 91);          }        if (Temporary1) {
        parseCDATA_1090519256(my_1090519557);
        }
        else {
          if (!(my_1090519557.buf[(pos_1090519558 + 2)] == 45)) Temporary7 = false; else {            Temporary7 = (my_1090519557.buf[(pos_1090519558 + 3)] == 45);          }        if (Temporary7) {
        parseComment_1090519271(my_1090519557);
        }
        else {
        parseSpecial_1090519443(my_1090519557);
        }
        }
        break;
      case 63:
        parsePI_1090519424(my_1090519557);
        break;
      default: 
        parseTag_1090519471(my_1090519557);
        break;
      }
      break;
    case 32:
    case 9:
    case 13:
    case 10:
      parseWhitespace_1090519307(my_1090519557, false);
      my_1090519557.kind = 3;
      break;
    case 0:
      my_1090519557.kind = 1;
      break;
    case 38:
      parseEntity_1090519333(my_1090519557, my_1090519557, "a");
      break;
    default: 
      parseCharData_1090519549(my_1090519557);
      break;
    }

  
}

function getTok_1090519566(my_1090519567) {
              var Temporary3;

    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          var lastKind_1090519568 = my_1090519567.kind;
          rawGetTok_1090519556(my_1090519567);
          switch (my_1090519567.kind) {
          case 4:
            if ((my_1090519567.options[1] != undefined)) {
            break Label1;
            }
            
            break;
          case 3:
              if ((my_1090519567.options[0] != undefined)) Temporary3 = true; else {                Temporary3 = (ConstSet60[lastKind_1090519568] != undefined);              }            if (Temporary3) {
            break Label1;
            }
            
            break;
          default: 
            break Label1;
            break;
          }
        }
    } while (false);

  
}

function parseAttribute_1090519496(my_1090519497) {
      var Temporary1;
        var Temporary2;
            var Temporary9;

  BeforeRet: do {
    my_1090519497.kind = 9;
    (my_1090519497.a.length = 0);
    (my_1090519497.b.length = 0);
    parseName_1090519317(my_1090519497, my_1090519497, "a");
    if (((my_1090519497.a).length == 0)) {
    markError_1090519244(my_1090519497, 5);
    break BeforeRet;
    }
    
    var startPos_1090519498 = my_1090519497.bufpos;
    parseWhitespace_1090519307(my_1090519497, true);
    if (!((my_1090519497.buf[my_1090519497.bufpos] == 61))) {
      if (!((my_1090519497.options[3] != undefined))) Temporary1 = true; else {        if (!!((my_1090519497.buf[my_1090519497.bufpos] == 62))) Temporary2 = false; else {          Temporary2 = (my_1090519497.bufpos == startPos_1090519498);        }        Temporary1 = Temporary2;      }    if (Temporary1) {
    markError_1090519244(my_1090519497, 6);
    }
    
    break BeforeRet;
    }
    
    my_1090519497.bufpos += 1;
    parseWhitespace_1090519307(my_1090519497, true);
    var pos_1090519507 = my_1090519497.bufpos;
    if ((ConstSet61[my_1090519497.buf[pos_1090519507]] != undefined)) {
    var quote_1090519512 = my_1090519497.buf[pos_1090519507];
    var pendingSpace_1090519513 = false;
    pos_1090519507 += 1;
    Label3: do {
        Label4: while (true) {
        if (!true) break Label4;
          switch (my_1090519497.buf[pos_1090519507]) {
          case 0:
            markError_1090519244(my_1090519497, 7);
            break Label3;
            break;
          case 38:
            if (pendingSpace_1090519513) {
            addChar(my_1090519497.b, 32);;
            pendingSpace_1090519513 = false;
            }
            
            my_1090519497.bufpos = pos_1090519507;
            parseEntity_1090519333(my_1090519497, my_1090519497, "b");
            my_1090519497.kind = 9;
            pos_1090519507 = my_1090519497.bufpos;
            break;
          case 32:
          case 9:
            pendingSpace_1090519513 = true;
            pos_1090519507 += 1;
            break;
          case 13:
            pos_1090519507 = handleCR_1157627983(my_1090519497, pos_1090519507);
            pendingSpace_1090519513 = true;
            break;
          case 10:
            pos_1090519507 = handleLF_1157627994(my_1090519497, pos_1090519507);
            pendingSpace_1090519513 = true;
            break;
          case 47:
            pos_1090519507 = handleRefillChar_1157628005(my_1090519497, pos_1090519507);
            addChar(my_1090519497.b, 47);;
            break;
          default: 
            if ((my_1090519497.buf[pos_1090519507] == quote_1090519512)) {
            pos_1090519507 += 1;
            break Label3;
            }
            else {
              if (pendingSpace_1090519513) {
              addChar(my_1090519497.b, 32);;
              pendingSpace_1090519513 = false;
              }
              
              addChar(my_1090519497.b, my_1090519497.buf[pos_1090519507]);;
              pos_1090519507 += 1;
            }
            
            break;
          }
        }
    } while (false);
    }
    else {
    if ((my_1090519497.options[2] != undefined)) {
    var startPos_1090519535 = pos_1090519507;
    Label5: do {
        Label6: while (true) {
          var c_1090519536 = my_1090519497.buf[pos_1090519507];
        if (!!((ConstSet62[c_1090519536] != undefined))) break Label6;
          if ((c_1090519536 == 38)) {
          my_1090519497.bufpos = pos_1090519507;
          parseEntity_1090519333(my_1090519497, my_1090519497, "b");
          my_1090519497.kind = 9;
          pos_1090519507 = my_1090519497.bufpos;
          }
          else {
          if ((c_1090519536 == 47)) {
          pos_1090519507 = handleRefillChar_1157628005(my_1090519497, pos_1090519507);
          addChar(my_1090519497.b, 47);;
          }
          else {
            addChar(my_1090519497.b, c_1090519536);;
            pos_1090519507 += 1;
          }
          }
        }
    } while (false);
    if ((pos_1090519507 == startPos_1090519535)) {
    markError_1090519244(my_1090519497, 9);
    }
    
    }
    else {
      markError_1090519244(my_1090519497, 7);
      Label7: do {
          Label8: while (true) {
            if (!!((my_1090519497.buf[pos_1090519507] == 62))) Temporary9 = false; else {              Temporary9 = (32 < my_1090519497.buf[pos_1090519507]);            }          if (!Temporary9) break Label8;
            addChar(my_1090519497.b, my_1090519497.buf[pos_1090519507]);;
            pos_1090519507 += 1;
          }
      } while (false);
    }
    }
    my_1090519497.bufpos = pos_1090519507;
    parseWhitespace_1090519307(my_1090519497, true);
  } while (false);

  
}

function next_1090519582(my_1090519583) {
        var Temporary1;

    switch (my_1090519583.state) {
    case 1:
      getTok_1090519566(my_1090519583);
      break;
    case 0:
      my_1090519583.state = 1;
      getTok_1090519566(my_1090519583);
        if (!(my_1090519583.kind == 5)) Temporary1 = false; else {          Temporary1 = eqStrings(my_1090519583.a, makeNimstrLit("xml"));        }      if (Temporary1) {
      getTok_1090519566(my_1090519583);
      }
      
      break;
    case 2:
      if ((my_1090519583.buf[my_1090519583.bufpos] == 62)) {
      my_1090519583.kind = 10;
      my_1090519583.bufpos += 1;
      my_1090519583.state = 1;
      }
      else {
      if ((my_1090519583.buf[my_1090519583.bufpos] == 47)) {
      my_1090519583.bufpos = handleRefillChar_1157628005(my_1090519583, my_1090519583.bufpos);
      if ((my_1090519583.buf[my_1090519583.bufpos] == 62)) {
      my_1090519583.kind = 10;
      my_1090519583.bufpos += 1;
      my_1090519583.state = 3;
      }
      else {
      markError_1090519244(my_1090519583, 5);
      }
      
      }
      else {
      parseAttribute_1090519496(my_1090519583);
      }
      }
      break;
    case 3:
      my_1090519583.state = 1;
      my_1090519583.kind = 7;
      if (!(my_1090519583.cIsEmpty)) {
      my_1090519583.a = nimCopy(null, my_1090519583.c, NTI33554439);
      }
      
      break;
    case 4:
      my_1090519583.kind = 0;
      my_1090519583.state = 1;
      break;
    }

  
}

function kind_1090519166(my_1090519167) {
  var result_1090519168 = 0;

  BeforeRet: do {
    result_1090519168 = my_1090519167.kind;
    break BeforeRet;
  } while (false);

  return result_1090519168;

}

function newXmlNode_1107296281(kind_1107296282) {
  var result_1107296283 = null;

    result_1107296283 = {k: kind_1107296282, fText: [], fTag: [], s: [], fAttr: null, fClientData: 0};

  return result_1107296283;

}

function newElement_1107296314(tag_1107296315) {
    var Temporary1;
    var Temporary2;

  var result_1107296316 = null;

    result_1107296316 = newXmlNode_1107296281(2);
    var Temporary1 = result_1107296316;
    if (ConstSet63[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fTag = nimCopy(null, tag_1107296315, NTI33554439);
    var Temporary2 = result_1107296316;
    if (ConstSet64[Temporary2.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary2.k, NTI1107296260)); }
    Temporary2.s = nimCopy(null, [], NTI1107296299);

  return result_1107296316;

}

function tag_1107296391(n_1107296392) {
    var Temporary1;

  var result_1107296393 = null;
  var result_1107296393_Idx = 0;

    var Temporary1 = n_1107296392;
    if (ConstSet65[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fTag\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    result_1107296393 = Temporary1; result_1107296393_Idx = "fTag";

  return [result_1107296393, result_1107296393_Idx];

}

function invalidFormatString_654313488() {
    raiseException({message: makeNimstrLit("invalid format string"), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");

  
}

function toLowerAscii_956301313(c_956301314) {
  var result_956301315 = 0;

    if ((ConstSet69[c_956301314] != undefined)) {
    result_956301315 = (c_956301314 + 32);
    }
    else {
      result_956301315 = c_956301314;
    }
    

  return result_956301315;

}

function nsuCmpIgnoreStyle(a_654311614, b_654311615) {
          var Temporary7;
          var Temporary8;

  var result_654311616 = 0;

  BeforeRet: do {
    var aLenHEX60gensym25_654311625 = (a_654311614).length;
    var bLenHEX60gensym25_654311626 = (b_654311615).length;
    var iHEX60gensym25_654311627 = 0;
    var jHEX60gensym25_654311628 = 0;
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          Label3: do {
              Label4: while (true) {
              if (!((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625) && (a_654311614[iHEX60gensym25_654311627] == 95))) break Label4;
                iHEX60gensym25_654311627 += 1;
              }
          } while (false);
          Label5: do {
              Label6: while (true) {
              if (!((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626) && (b_654311615[jHEX60gensym25_654311628] == 95))) break Label6;
                jHEX60gensym25_654311628 += 1;
              }
          } while (false);
          if ((iHEX60gensym25_654311627 < aLenHEX60gensym25_654311625)) {
          Temporary7 = toLowerAscii_956301313(a_654311614[iHEX60gensym25_654311627]);
          }
          else {
          Temporary7 = 0;
          }
          
          var aaHEX60gensym25_654311637 = Temporary7;
          if ((jHEX60gensym25_654311628 < bLenHEX60gensym25_654311626)) {
          Temporary8 = toLowerAscii_956301313(b_654311615[jHEX60gensym25_654311628]);
          }
          else {
          Temporary8 = 0;
          }
          
          var bbHEX60gensym25_654311638 = Temporary8;
          result_654311616 = (aaHEX60gensym25_654311637 - bbHEX60gensym25_654311638);
          if (!((result_654311616 == 0))) {
          break BeforeRet;
          }
          
          if ((aLenHEX60gensym25_654311625 <= iHEX60gensym25_654311627)) {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 0;
          break BeforeRet;
          }
          
          result_654311616 = -1;
          break BeforeRet;
          }
          else {
          if ((bLenHEX60gensym25_654311626 <= jHEX60gensym25_654311628)) {
          result_654311616 = 1;
          break BeforeRet;
          }
          }
          iHEX60gensym25_654311627 += 1;
          jHEX60gensym25_654311628 += 1;
        }
    } while (false);
  } while (false);

  return result_654311616;

}

function findNormalized_654313476(x_654313477, inArray_654313478) {
  var result_654313479 = 0;

  BeforeRet: do {
    var i_654313480 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313480 < (inArray_654313478).length - 1)) break Label2;
          if ((nsuCmpIgnoreStyle(x_654313477, inArray_654313478[i_654313480]) == 0)) {
          result_654313479 = i_654313480;
          break BeforeRet;
          }
          
          i_654313480 += 2;
        }
    } while (false);
    result_654313479 = -1;
    break BeforeRet;
  } while (false);

  return result_654313479;

}

function substr_33557907(s_33557908, first_33557909, last_33557910) {
  var result_33557911 = [];

    var first_33557912 = nimMax(first_33557909, 0);
    var L_33557913 = nimMax(((nimMin(last_33557910, (s_33557908).length - 1) - first_33557912) + 1), 0);
    result_33557911 = nimCopy(null, mnewString(L_33557913), NTI33554439);
    Label1: do {
      var i_33557918 = 0;
      var colontmp__469762251 = 0;
      colontmp__469762251 = (L_33557913 - 1);
      var res_469762252 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762252 <= colontmp__469762251)) break Label3;
            i_33557918 = res_469762252;
            result_33557911[i_33557918] = s_33557908[(i_33557918 + first_33557912)];
            res_469762252 += 1;
          }
      } while (false);
    } while (false);

  return result_33557911;

}

function nsuAddf(s_654313491, s_654313491_Idx, formatstr_654313492, a_654313493) {
                  var Temporary5;
            var Temporary6;
              var Temporary7;
            var Temporary10;
              var Temporary11;
                var Temporary12;
                  var Temporary15;
              var Temporary16;

    var i_654313495 = 0;
    var num_654313496 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_654313495 < (formatstr_654313492).length)) break Label2;
          if (((formatstr_654313492[i_654313495] == 36) && ((i_654313495 + 1) < (formatstr_654313492).length))) {
          switch (formatstr_654313492[(i_654313495 + 1)]) {
          case 35:
            if (((a_654313493).length - 1 < num_654313496)) {
            invalidFormatString_654313488();
            }
            
            s_654313491[s_654313491_Idx].push.apply(s_654313491[s_654313491_Idx], a_654313493[num_654313496]);;
            i_654313495 += 2;
            num_654313496 += 1;
            break;
          case 36:
            addChar(s_654313491[s_654313491_Idx], 36);;
            i_654313495 += 2;
            break;
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 45:
            var j_654313512 = 0;
            i_654313495 += 1;
            var negative_654313517 = (formatstr_654313492[i_654313495] == 45);
            if (negative_654313517) {
            i_654313495 += 1;
            }
            
            Label3: do {
                Label4: while (true) {
                  if (!(i_654313495 < (formatstr_654313492).length)) Temporary5 = false; else {                    Temporary5 = (ConstSet66[formatstr_654313492[i_654313495]] != undefined);                  }                if (!Temporary5) break Label4;
                  j_654313512 = (((j_654313512 * 10) + formatstr_654313492[i_654313495]) - 48);
                  i_654313495 += 1;
                }
            } while (false);
            if (!(negative_654313517)) {
            Temporary6 = (j_654313512 - 1);
            }
            else {
            Temporary6 = ((a_654313493).length - j_654313512);
            }
            
            var idx_654313540 = Temporary6;
              if ((idx_654313540 < 0)) Temporary7 = true; else {                Temporary7 = ((a_654313493).length - 1 < idx_654313540);              }            if (Temporary7) {
            invalidFormatString_654313488();
            }
            
            s_654313491[s_654313491_Idx].push.apply(s_654313491[s_654313491_Idx], a_654313493[idx_654313540]);;
            break;
          case 123:
            var j_654313544 = (i_654313495 + 2);
            var k_654313545 = 0;
            var negative_654313546 = (formatstr_654313492[j_654313544] == 45);
            if (negative_654313546) {
            j_654313544 += 1;
            }
            
            var isNumber_654313551 = 0;
            Label8: do {
                Label9: while (true) {
                if (!((j_654313544 < (formatstr_654313492).length) && !((ConstSet67[formatstr_654313492[j_654313544]] != undefined)))) break Label9;
                  if ((ConstSet68[formatstr_654313492[j_654313544]] != undefined)) {
                  k_654313545 = (((k_654313545 * 10) + formatstr_654313492[j_654313544]) - 48);
                  if ((isNumber_654313551 == 0)) {
                  isNumber_654313551 = 1;
                  }
                  
                  }
                  else {
                    isNumber_654313551 = -1;
                  }
                  
                  j_654313544 += 1;
                }
            } while (false);
            if ((isNumber_654313551 == 1)) {
            if (!(negative_654313546)) {
            Temporary10 = (k_654313545 - 1);
            }
            else {
            Temporary10 = ((a_654313493).length - k_654313545);
            }
            
            var idx_654313573 = Temporary10;
              if ((idx_654313573 < 0)) Temporary11 = true; else {                Temporary11 = ((a_654313493).length - 1 < idx_654313573);              }            if (Temporary11) {
            invalidFormatString_654313488();
            }
            
            s_654313491[s_654313491_Idx].push.apply(s_654313491[s_654313491_Idx], a_654313493[idx_654313573]);;
            }
            else {
              var x_654313577 = findNormalized_654313476(substr_33557907(formatstr_654313492, (i_654313495 + 2), (j_654313544 - 1)), a_654313493);
                if (!(0 <= x_654313577)) Temporary12 = false; else {                  Temporary12 = (x_654313577 < (a_654313493).length - 1);                }              if (Temporary12) {
              s_654313491[s_654313491_Idx].push.apply(s_654313491[s_654313491_Idx], a_654313493[(x_654313577 + 1)]);;
              }
              else {
              invalidFormatString_654313488();
              }
              
            }
            
            i_654313495 = (j_654313544 + 1);
            break;
          case 97:
          case 98:
          case 99:
          case 100:
          case 101:
          case 102:
          case 103:
          case 104:
          case 105:
          case 106:
          case 107:
          case 108:
          case 109:
          case 110:
          case 111:
          case 112:
          case 113:
          case 114:
          case 115:
          case 116:
          case 117:
          case 118:
          case 119:
          case 120:
          case 121:
          case 122:
          case 65:
          case 66:
          case 67:
          case 68:
          case 69:
          case 70:
          case 71:
          case 72:
          case 73:
          case 74:
          case 75:
          case 76:
          case 77:
          case 78:
          case 79:
          case 80:
          case 81:
          case 82:
          case 83:
          case 84:
          case 85:
          case 86:
          case 87:
          case 88:
          case 89:
          case 90:
          case 128:
          case 129:
          case 130:
          case 131:
          case 132:
          case 133:
          case 134:
          case 135:
          case 136:
          case 137:
          case 138:
          case 139:
          case 140:
          case 141:
          case 142:
          case 143:
          case 144:
          case 145:
          case 146:
          case 147:
          case 148:
          case 149:
          case 150:
          case 151:
          case 152:
          case 153:
          case 154:
          case 155:
          case 156:
          case 157:
          case 158:
          case 159:
          case 160:
          case 161:
          case 162:
          case 163:
          case 164:
          case 165:
          case 166:
          case 167:
          case 168:
          case 169:
          case 170:
          case 171:
          case 172:
          case 173:
          case 174:
          case 175:
          case 176:
          case 177:
          case 178:
          case 179:
          case 180:
          case 181:
          case 182:
          case 183:
          case 184:
          case 185:
          case 186:
          case 187:
          case 188:
          case 189:
          case 190:
          case 191:
          case 192:
          case 193:
          case 194:
          case 195:
          case 196:
          case 197:
          case 198:
          case 199:
          case 200:
          case 201:
          case 202:
          case 203:
          case 204:
          case 205:
          case 206:
          case 207:
          case 208:
          case 209:
          case 210:
          case 211:
          case 212:
          case 213:
          case 214:
          case 215:
          case 216:
          case 217:
          case 218:
          case 219:
          case 220:
          case 221:
          case 222:
          case 223:
          case 224:
          case 225:
          case 226:
          case 227:
          case 228:
          case 229:
          case 230:
          case 231:
          case 232:
          case 233:
          case 234:
          case 235:
          case 236:
          case 237:
          case 238:
          case 239:
          case 240:
          case 241:
          case 242:
          case 243:
          case 244:
          case 245:
          case 246:
          case 247:
          case 248:
          case 249:
          case 250:
          case 251:
          case 252:
          case 253:
          case 254:
          case 255:
          case 95:
            var j_654313581 = (i_654313495 + 1);
            Label13: do {
                Label14: while (true) {
                  if (!(j_654313581 < (formatstr_654313492).length)) Temporary15 = false; else {                    Temporary15 = (ConstSet70[formatstr_654313492[j_654313581]] != undefined);                  }                if (!Temporary15) break Label14;
                  j_654313581 += 1;
                }
            } while (false);
            var x_654313590 = findNormalized_654313476(substr_33557907(formatstr_654313492, (i_654313495 + 1), (j_654313581 - 1)), a_654313493);
              if (!(0 <= x_654313590)) Temporary16 = false; else {                Temporary16 = (x_654313590 < (a_654313493).length - 1);              }            if (Temporary16) {
            s_654313491[s_654313491_Idx].push.apply(s_654313491[s_654313491_Idx], a_654313493[(x_654313590 + 1)]);;
            }
            else {
            invalidFormatString_654313488();
            }
            
            i_654313495 = j_654313581;
            break;
          default: 
            invalidFormatString_654313488();
            break;
          }
          }
          else {
            addChar(s_654313491[s_654313491_Idx], formatstr_654313492[i_654313495]);;
            i_654313495 += 1;
          }
          
        }
    } while (false);

  
}

function nsuFormatOpenArray(formatstr_654313599, a_654313600) {
  var result_654313601 = [[]];

    result_654313601[0] = nimCopy(null, mnewString(0), NTI33554439);
    nsuAddf(result_654313601, 0, formatstr_654313599, a_654313600);

  return result_654313601[0];

}

function getLine_1090519201(my_1090519202) {
  var result_1090519203 = 0;

    result_1090519203 = my_1090519202.lineNumber;

  return result_1090519203;

}

function getColNumber_1157628041(L_1157628042, pos_1157628043) {
  var result_1157628044 = 0;

    result_1157628044 = Math.abs((pos_1157628043 - L_1157628042.lineStart));

  return result_1157628044;

}

function getColumn_1090519189(my_1090519190) {
  var result_1090519191 = 0;

    result_1090519191 = getColNumber_1157628041(my_1090519190, my_1090519190.bufpos);

  return result_1090519191;

}

function errorMsg_1090519240(my_1090519241, msg_1090519242) {
  var result_1090519243 = [];

    result_1090519243 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1($2, $3) Error: $4"), [nimCopy(null, my_1090519241.filename, NTI33554439), HEX24_318767107(getLine_1090519201(my_1090519241)), HEX24_318767107(getColumn_1090519189(my_1090519241)), nimCopy(null, msg_1090519242, NTI33554439)]), NTI33554439);

  return result_1090519243;

}

function add_1107296453(father_1107296454, son_1107296455) {
    var Temporary1;

    var Temporary1 = father_1107296454;
    if (ConstSet71[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'s\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.s.push(son_1107296455);;

  
}

function addNode_1073741830(father_1073741831, son_1073741832) {
    if (!((son_1073741832 == null))) {
    add_1107296453(father_1073741831, son_1073741832);
    }
    

  
}

function newComment_1107296340(comment_1107296341) {
    var Temporary1;

  var result_1107296342 = null;

    result_1107296342 = newXmlNode_1107296281(5);
    var Temporary1 = result_1107296342;
    if (ConstSet72[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fText = nimCopy(null, comment_1107296341, NTI33554439);

  return result_1107296342;

}

function newText_1107296330(text_1107296331) {
    var Temporary1;

  var result_1107296332 = null;

    result_1107296332 = newXmlNode_1107296281(0);
    var Temporary1 = result_1107296332;
    if (ConstSet73[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fText = nimCopy(null, text_1107296331, NTI33554439);

  return result_1107296332;

}

function errorMsg_1090519207(my_1090519208) {
  var result_1090519209 = [];

    result_1090519209 = nimCopy(null, nsuFormatOpenArray(makeNimstrLit("$1($2, $3) Error: $4"), [nimCopy(null, my_1090519208.filename, NTI33554439), HEX24_318767107(getLine_1090519201(my_1090519208)), HEX24_318767107(getColumn_1090519189(my_1090519208)), nimCopy(null, errorMessages_1090519104[my_1090519208.err], NTI33554439)]), NTI33554439);

  return result_1090519209;

}

function attrsHEX3D_1107296644(n_1107296645, attr_1107296646) {
    var Temporary1;

    var Temporary1 = n_1107296645;
    if (ConstSet74[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fAttr = attr_1107296646;

  
}

function nstnewStringTable(mode_1140850933) {
  var result_1140850934 = null;

    result_1140850934 = ({m_type: NTI1140850694, counter: 0, data: [], mode: 0});
    result_1140850934.mode = mode_1140850933;
    result_1140850934.counter = 0;
    result_1140850934.data = new Array(64); for (var i = 0 ; i < 64 ; ++i) { result_1140850934.data[i] = {Field0: [], Field1: [], Field2: false}; }
  return result_1140850934;

}

function hash_989856166(x_989856167) {
  var result_989856168 = 0;

    result_989856168 = murmurHash_989856067((x_989856167.slice(0, (x_989856167).length - 1 + 1)));

  return result_989856168;

}

function HEX21HEX26_989855747(h_989855748, val_989855749) {
  var result_989855750 = 0;

    var h_989855751 = (h_989855748 >>> 0);
    var val_989855752 = (val_989855749 >>> 0);
    var res_989855753 = ((h_989855751 + val_989855752) >>> 0);
    res_989855753 = ((res_989855753 + (res_989855753 << 10)) >>> 0);
    res_989855753 = (res_989855753 ^ (res_989855753 >>> 6));
    result_989855750 = (res_989855753 | 0);

  return result_989855750;

}

function HEX21HEX24_989855762(h_989855763) {
  var result_989855764 = 0;

    var h_989855765 = (h_989855763 >>> 0);
    var res_989855770 = ((h_989855765 + (h_989855765 << 3)) >>> 0);
    res_989855770 = (res_989855770 ^ (res_989855770 >>> 11));
    res_989855770 = ((res_989855770 + (res_989855770 << 15)) >>> 0);
    result_989855764 = (res_989855770 | 0);

  return result_989855764;

}

function hashIgnoreCase_989856241(x_989856242) {
  var result_989856243 = 0;

    var h_989856244 = 0;
    Label1: do {
      var i_989856249 = 0;
      var colontmp__469762261 = 0;
      colontmp__469762261 = ((x_989856242).length - 1);
      var res_469762262 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762262 <= colontmp__469762261)) break Label3;
            i_989856249 = res_469762262;
            var c_989856250 = x_989856242[i_989856249];
            if ((ConstSet75[c_989856250] != undefined)) {
            c_989856250 = (c_989856250 + 32);
            }
            
            h_989856244 = HEX21HEX26_989855747(h_989856244, c_989856250);
            res_469762262 += 1;
          }
      } while (false);
    } while (false);
    result_989856243 = HEX21HEX24_989855762(h_989856244);

  return result_989856243;

}

function hashIgnoreStyle_989856178(x_989856179) {
  var result_989856180 = 0;

    var h_989856181 = 0;
    var i_989856182 = 0;
    var xLen_989856183 = (x_989856179).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_989856182 < xLen_989856183)) break Label2;
          var c_989856184 = x_989856179[i_989856182];
          if ((c_989856184 == 95)) {
          i_989856182 += 1;
          }
          else {
            if ((ConstSet76[c_989856184] != undefined)) {
            c_989856184 = (c_989856184 + 32);
            }
            
            h_989856181 = HEX21HEX26_989855747(h_989856181, c_989856184);
            i_989856182 += 1;
          }
          
        }
    } while (false);
    result_989856180 = HEX21HEX24_989855762(h_989856181);

  return result_989856180;

}

function myhash_1140850797(t_1140850798, key_1140850799) {
  var result_1140850800 = 0;

    switch (t_1140850798.mode) {
    case 0:
      result_1140850800 = hash_989856166(key_1140850799);
      break;
    case 1:
      result_1140850800 = hashIgnoreCase_989856241(key_1140850799);
      break;
    case 2:
      result_1140850800 = hashIgnoreStyle_989856178(key_1140850799);
      break;
    }

  return result_1140850800;

}

function cmpStrings(a_33556924, b_33556925) {
        if (a_33556924 == b_33556925) return 0;
    if (!a_33556924) return -1;
    if (!b_33556925) return 1;
    for (var i = 0; i < a_33556924.length && i < b_33556925.length; i++) {
      var result = a_33556924[i] - b_33556925[i];
      if (result != 0) return result;
    }
    return a_33556924.length - b_33556925.length;
  

  
}

function cmp_33555863(x_33555864, y_33555865) {
  var result_33556930 = 0;

    result_33556930 = cmpStrings(x_33555864, y_33555865);

  return result_33556930;

}

function nsuCmpIgnoreCase(a_654311590, b_654311591) {
  var result_654311592 = 0;

  BeforeRet: do {
    var aLenHEX60gensym21_654311599 = (a_654311590).length;
    var bLenHEX60gensym21_654311600 = (b_654311591).length;
    var iHEX60gensym21_654311601 = 0;
    var mHEX60gensym21_654311602 = nimMin(aLenHEX60gensym21_654311599, bLenHEX60gensym21_654311600);
    Label1: do {
        Label2: while (true) {
        if (!(iHEX60gensym21_654311601 < mHEX60gensym21_654311602)) break Label2;
          result_654311592 = (toLowerAscii_956301313(a_654311590[iHEX60gensym21_654311601]) - toLowerAscii_956301313(b_654311591[iHEX60gensym21_654311601]));
          if (!((result_654311592 == 0))) {
          break BeforeRet;
          }
          
          iHEX60gensym21_654311601 += 1;
        }
    } while (false);
    result_654311592 = (aLenHEX60gensym21_654311599 - bLenHEX60gensym21_654311600);
  } while (false);

  return result_654311592;

}

function myCmp_1140850801(t_1140850802, a_1140850803, b_1140850804) {
  var result_1140850805 = false;

    switch (t_1140850802.mode) {
    case 0:
      result_1140850805 = (cmp_33555863(a_1140850803, b_1140850804) == 0);
      break;
    case 1:
      result_1140850805 = (nsuCmpIgnoreCase(a_1140850803, b_1140850804) == 0);
      break;
    case 2:
      result_1140850805 = (nsuCmpIgnoreStyle(a_1140850803, b_1140850804) == 0);
      break;
    }

  return result_1140850805;

}

function nextTry_1140850813(h_1140850814, maxHash_1140850815) {
  var result_1140850816 = 0;

    result_1140850816 = ((h_1140850814 + 1) & maxHash_1140850815);

  return result_1140850816;

}

function rawGet_1140850817(t_1140850818, key_1140850819) {
  var result_1140850820 = 0;

  BeforeRet: do {
    var h_1140850824 = (myhash_1140850797(t_1140850818, key_1140850819) & (t_1140850818.data).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!t_1140850818.data[h_1140850824].Field2) break Label2;
          if (myCmp_1140850801(t_1140850818, t_1140850818.data[h_1140850824].Field0, key_1140850819)) {
          result_1140850820 = h_1140850824;
          break BeforeRet;
          }
          
          h_1140850824 = nextTry_1140850813(h_1140850824, (t_1140850818.data).length - 1);
        }
    } while (false);
    result_1140850820 = -1;
  } while (false);

  return result_1140850820;

}

function mustRehash_1140850806(length_1140850807, counter_1140850808) {
  var result_1140850809 = false;

    result_1140850809 = (((length_1140850807 * 2) < (counter_1140850808 * 3)) || ((length_1140850807 - counter_1140850808) < 4));

  return result_1140850809;

}

function rawInsert_1140850865(t_1140850866, data_1140850867, data_1140850867_Idx, key_1140850868, val_1140850869) {
    var h_1140850873 = (myhash_1140850797(t_1140850866, key_1140850868) & (data_1140850867[data_1140850867_Idx]).length - 1);
    Label1: do {
        Label2: while (true) {
        if (!data_1140850867[data_1140850867_Idx][h_1140850873].Field2) break Label2;
          h_1140850873 = nextTry_1140850813(h_1140850873, (data_1140850867[data_1140850867_Idx]).length - 1);
        }
    } while (false);
    data_1140850867[data_1140850867_Idx][h_1140850873].Field0 = nimCopy(null, key_1140850868, NTI33554439);
    data_1140850867[data_1140850867_Idx][h_1140850873].Field1 = nimCopy(null, val_1140850869, NTI33554439);
    data_1140850867[data_1140850867_Idx][h_1140850873].Field2 = true;

  
}

function enlarge_1140850877(t_1140850878) {
            var Temporary4;
            var Temporary5;

    var n_1140850879 = [[]];
    n_1140850879[0] = new Array(((t_1140850878.data).length * 2)); for (var i = 0 ; i < ((t_1140850878.data).length * 2) ; ++i) { n_1140850879[0][i] = {Field0: [], Field1: [], Field2: false}; }    Label1: do {
      var i_1140850896 = 0;
      var colontmp__469762267 = 0;
      colontmp__469762267 = (t_1140850878.data).length - 1;
      var res_469762268 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_469762268 <= colontmp__469762267)) break Label3;
            i_1140850896 = res_469762268;
            if (t_1140850878.data[i_1140850896].Field2) {
            Temporary4 = t_1140850878.data[i_1140850896].Field0;
            t_1140850878.data[i_1140850896].Field0 = genericReset(t_1140850878.data[i_1140850896].Field0, NTI33554439);
            Temporary5 = t_1140850878.data[i_1140850896].Field1;
            t_1140850878.data[i_1140850896].Field1 = genericReset(t_1140850878.data[i_1140850896].Field1, NTI33554439);
            rawInsert_1140850865(t_1140850878, n_1140850879, 0, Temporary4, Temporary5);
            }
            
            res_469762268 += 1;
          }
      } while (false);
    } while (false);
    var Temporary6 = t_1140850878.data; t_1140850878.data = n_1140850879[0]; n_1140850879[0] = Temporary6;
  
}

function nstPut(t_1140850921, key_1140850922, val_1140850923) {
    var index_1140850924 = rawGet_1140850817(t_1140850921, key_1140850922);
    if ((0 <= index_1140850924)) {
    t_1140850921.data[index_1140850924].Field1 = nimCopy(null, val_1140850923, NTI33554439);
    }
    else {
      if (mustRehash_1140850806((t_1140850921.data).length, t_1140850921.counter)) {
      enlarge_1140850877(t_1140850921);
      }
      
      rawInsert_1140850865(t_1140850921, t_1140850921, "data", key_1140850922, val_1140850923);
      t_1140850921.counter += 1;
    }
    

  
}

function nstnewStringTableWithTableConstr(keyValuePairs_1140850975, mode_1140850976) {
  var result_1140850977 = null;

    result_1140850977 = nstnewStringTable(mode_1140850976);
    Label1: do {
      var key_1140850990 = null;
      var key_1140850990_Idx = 0;
      var val_1140850991 = null;
      var val_1140850991_Idx = 0;
      var i_469762257 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762257 < (keyValuePairs_1140850975).length)) break Label3;
            key_1140850990 = keyValuePairs_1140850975[i_469762257]; key_1140850990_Idx = "Field0";
            val_1140850991 = keyValuePairs_1140850975[i_469762257]; val_1140850991_Idx = "Field1";
            nstPut(result_1140850977, key_1140850990[key_1140850990_Idx], val_1140850991[val_1140850991_Idx]);
            i_469762257 += 1;
          }
      } while (false);
    } while (false);

  return result_1140850977;

}

function attrs_1107296634(n_1107296635) {
    var Temporary1;

  var result_1107296636 = null;

    var Temporary1 = n_1107296635;
    if (ConstSet77[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fAttr\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    result_1107296636 = Temporary1.fAttr;

  return result_1107296636;

}

function newCData_1107296343(cdata_1107296344) {
    var Temporary1;

  var result_1107296345 = null;

    result_1107296345 = newXmlNode_1107296281(3);
    var Temporary1 = result_1107296345;
    if (ConstSet78[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fText = nimCopy(null, cdata_1107296344, NTI33554439);

  return result_1107296345;

}

function newEntity_1107296346(entity_1107296347) {
    var Temporary1;

  var result_1107296348 = null;

    result_1107296348 = newXmlNode_1107296281(4);
    var Temporary1 = result_1107296348;
    if (ConstSet79[Temporary1.k]===undefined) { raiseFieldError2(makeNimstrLit("field \'fText\' is not accessible for type \'XmlNodeObj\' using \'k = "), reprDiscriminant(Temporary1.k, NTI1107296260)); }
    Temporary1.fText = nimCopy(null, entity_1107296347, NTI33554439);

  return result_1107296348;

}

function parse_1073741837(x_1073741838, errors_1073741839, errors_1073741839_Idx) {
      var Temporary1;
      var Temporary2;
      var Temporary3;
      var Temporary4;
      var Temporary5;
              var Temporary8;
              var Temporary9;
      var Temporary10;
      var Temporary11;

  var result_1073741862 = null;

    switch (kind_1090519166(x_1073741838)) {
    case 4:
      Temporary1 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newComment_1107296340(Temporary1);
      next_1090519582(x_1073741838);
      break;
    case 2:
    case 3:
      Temporary2 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newText_1107296330(Temporary2);
      next_1090519582(x_1073741838);
      break;
    case 5:
    case 13:
      next_1090519582(x_1073741838);
      break;
    case 0:
      errors_1073741839[errors_1073741839_Idx].push(errorMsg_1090519207(x_1073741838));;
      next_1090519582(x_1073741838);
      break;
    case 6:
      Temporary3 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newElement_1107296314(Temporary3);
      next_1090519582(x_1073741838);
      untilElementEnd_1073741840(x_1073741838, result_1073741862, errors_1073741839, errors_1073741839_Idx);
      break;
    case 7:
      Temporary4 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      errors_1073741839[errors_1073741839_Idx].push(errorMsg_1090519240(x_1073741838, (makeNimstrLit("unexpected ending tag: ") || []).concat(Temporary4 || [])));;
      break;
    case 8:
      Temporary5 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newElement_1107296314(Temporary5);
      next_1090519582(x_1073741838);
      attrsHEX3D_1107296644(result_1073741862, nstnewStringTableWithTableConstr([], 0));
      Label6: do {
          Label7: while (true) {
          if (!true) break Label7;
            switch (kind_1090519166(x_1073741838)) {
            case 9:
              Temporary8 = x_1073741838.a;
              x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
              Temporary9 = x_1073741838.b;
              x_1073741838.b = genericReset(x_1073741838.b, NTI33554439);
              nstPut(attrs_1107296634(result_1073741862), Temporary8, Temporary9);
              next_1090519582(x_1073741838);
              break;
            case 10:
              next_1090519582(x_1073741838);
              break Label6;
              break;
            case 0:
              errors_1073741839[errors_1073741839_Idx].push(errorMsg_1090519207(x_1073741838));;
              next_1090519582(x_1073741838);
              break Label6;
              break;
            default: 
              errors_1073741839[errors_1073741839_Idx].push(errorMsg_1090519240(x_1073741838, makeNimstrLit("\'>\' expected")));;
              next_1090519582(x_1073741838);
              break Label6;
              break;
            }
          }
      } while (false);
      untilElementEnd_1073741840(x_1073741838, result_1073741862, errors_1073741839, errors_1073741839_Idx);
      break;
    case 9:
    case 10:
      errors_1073741839[errors_1073741839_Idx].push(errorMsg_1090519240(x_1073741838, makeNimstrLit("<some_tag> expected")));;
      next_1090519582(x_1073741838);
      break;
    case 11:
      Temporary10 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newCData_1107296343(Temporary10);
      next_1090519582(x_1073741838);
      break;
    case 12:
      Temporary11 = x_1073741838.a;
      x_1073741838.a = genericReset(x_1073741838.a, NTI33554439);
      result_1073741862 = newEntity_1107296346(Temporary11);
      next_1090519582(x_1073741838);
      break;
    case 1:
      break;
    }

  return result_1073741862;

}

function untilElementEnd_1073741840(x_1073741841, result_1073741842, errors_1073741843, errors_1073741843_Idx) {
              var Temporary3;
              var Temporary4;
            var Temporary5;

  BeforeRet: do {
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (kind_1090519166(x_1073741841)) {
          case 7:
            if (eqStrings(x_1073741841.a, (Temporary3 = tag_1107296391(result_1073741842), Temporary3)[0][Temporary3[1]])) {
            break BeforeRet;
            }
            else {
            errors_1073741843[errors_1073741843_Idx].push(errorMsg_1090519240(x_1073741841, (makeNimstrLit("</") || []).concat((Temporary4 = tag_1107296391(result_1073741842), Temporary4)[0][Temporary4[1]] || [],makeNimstrLit("> expected") || [])));;
            }
            
            break Label1;
            break;
          case 1:
            errors_1073741843[errors_1073741843_Idx].push(errorMsg_1090519240(x_1073741841, (makeNimstrLit("</") || []).concat((Temporary5 = tag_1107296391(result_1073741842), Temporary5)[0][Temporary5[1]] || [],makeNimstrLit("> expected") || [])));;
            break Label1;
            break;
          default: 
            addNode_1073741830(result_1073741842, parse_1073741837(x_1073741841, errors_1073741843, errors_1073741843_Idx));
            break;
          }
        }
    } while (false);
  } while (false);

  
}

function parseXml_1073742018(text_1073742019, i_1073742020) {
            var Temporary3;

  var result_1073742021 = {Field0: false, Field1: 0};

    var errors_1073742022 = [[]];
    var x_1073742023 = [({m_type: NTI1090519047, a: [], b: [], c: [], kind: 0, err: 0, state: 0, cIsEmpty: false, filename: [], options: {}, bufpos: 0, buf: [], input: null, lineNumber: 0, sentinel: 0, lineStart: 0, offsetBase: 0, refillChars: {}})];
    var stream_1073742024 = newStringStream_1124074483(text_1073742019);
    setPosition_1124073539(stream_1073742024, i_1073742020);
    open_1090519114(x_1073742023[0], stream_1073742024, [], ConstSet55);
    next_1090519582(x_1073742023[0]);
    Label1: do {
        Label2: while (true) {
        if (!true) break Label2;
          switch (kind_1090519166(x_1073742023[0])) {
          case 8:
          case 6:
            Temporary3 = x_1073742023[0].a;
            x_1073742023[0].a = genericReset(x_1073742023[0].a, NTI33554439);
            var node_1073742039 = newElement_1107296314(Temporary3);
            untilElementEnd_1073741840(x_1073742023[0], node_1073742039, errors_1073742022, 0);
            result_1073742021["Field0"] = true;
            break;
          case 4:
          case 13:
          case 5:
          case 11:
            next_1090519582(x_1073742023[0]);
            result_1073742021["Field0"] = true;
            break;
          case 7:
          case 2:
          case 3:
          case 1:
            result_1073742021["Field0"] = true;
            break Label1;
            break;
          default: 
            result_1073742021["Field0"] = false;
            break Label1;
            break;
          }
        }
    } while (false);
    result_1073742021["Field1"] = (i_1073742020 + x_1073742023[0].bufpos);

  return result_1073742021;

}

function parseAmpStr_637534242(parser_637534243) {
    var Temporary1;

  var result_637534244 = [null];

  BeforeRet: do {
    var initialPos_637534245 = parser_637534243.pos;
    if ((initialPos_637534245 < ((parser_637534243.str) == null ? 0 : (parser_637534243.str).length))) {
    Temporary1 = parser_637534243.str.charCodeAt(initialPos_637534245);
    }
    else {
    Temporary1 = 32;
    }
    
    var firstChar_637534246 = Temporary1;
    switch (firstChar_637534246) {
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
    case 97:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
      parser_637534243.pos += 2;
      result_637534244[0] = "&";
      Label2: do {
        var ch_637534251 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(parser_637534243.pos < ((parser_637534243.str) == null ? 0 : (parser_637534243.str).length))) break Label4;
              ch_637534251 = parser_637534243.str.charCodeAt((parser_637534243.pos + 0));
              add_1056964624(result_637534244, 0, ch_637534251);
              if ((ch_637534251 == 59)) {
              break Label2;
              }
              else {
              if (!((ConstSet84[ch_637534251] != undefined))) {
              parser_637534243.pos = initialPos_637534245;
              result_637534244[0] = "&amp;";
              break BeforeRet;
              }
              }
              parser_637534243.pos += 1;
            }
        } while (false);
      } while (false);
      break;
    case 35:
      parser_637534243.pos += 2;
      result_637534244[0] = "&";
      Label5: do {
        var ch_637534260 = 0;
        Label6: do {
            Label7: while (true) {
            if (!(parser_637534243.pos < ((parser_637534243.str) == null ? 0 : (parser_637534243.str).length))) break Label7;
              ch_637534260 = parser_637534243.str.charCodeAt((parser_637534243.pos + 0));
              add_1056964624(result_637534244, 0, ch_637534260);
              if ((ch_637534260 == 59)) {
              break Label5;
              }
              else {
              if (!((ConstSet85[ch_637534260] != undefined))) {
              parser_637534243.pos = initialPos_637534245;
              result_637534244[0] = "&amp;";
              break BeforeRet;
              }
              }
              parser_637534243.pos += 1;
            }
        } while (false);
      } while (false);
      break;
    default: 
      result_637534244[0] = "&amp;";
      break;
    }
  } while (false);

  return result_637534244[0];

}

function parseDelimed_637534307(parser_637534308, delim_637534309, singleLine_637534310) {
                    var Temporary5;
                    var Temporary6;
              var Temporary7;
              
function parseAux_637534336(tag_637534337, del_637534338, parser_637534339, acceptedReasons_637534340) {
                    var Temporary1;
                    var Temporary2;

                var result_637534341 = 0;

                  var currentPos_637534342 = parser_637534339.pos;
                  var colontmp__469762159 = parseDelimed_637534307(parser_637534339, del_637534338, singleLine_637534310);
                  var finishReason_637534343 = colontmp__469762159["Field0"];
                  var parsedElems_637534344 = nimCopy(null, colontmp__469762159["Field1"], NTI637534268);
                  if ((acceptedReasons_637534340[finishReason_637534343] != undefined)) {
                  elems_637534318[0].push(newElem_1056964793(tag_637534337, parsedElems_637534344));;
                  lastStr_637534313 = newStr_1056964769("");
                  elems_637534318[0].push(lastStr_637534313);;
                  result_637534341 = 0;
                  }
                  else {
                    var Temporary1 = lastStr_637534313;
                    if (ConstSet13[Temporary1.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
                    if (null != (Temporary2 = HEX5BHEX5D_1056964635(parser_637534339.str, HEX2EHEX2E_922747729(initialPos_637534335, (currentPos_637534342 - 1))), Temporary2)) { if (null == Temporary1.str) Temporary1.str = Temporary2; else Temporary1.str += Temporary2; };
                    add_1056967896(elems_637534318, 0, parsedElems_637534344);
                    lastStr_637534313 = newStr_1056964769("");
                    elems_637534318[0].push(lastStr_637534313);;
                    result_637534341 = finishReason_637534343;
                  }
                  

                return result_637534341;

              }
              
function bracket_637534400(image_637534401, parser_637534402) {
                    var Temporary1;
                  var Temporary2;
                  var Temporary3;
                  var Temporary4;

                var result_637534403 = 0;

                  var elem_637534404 = parseBracket_637534214(image_637534401, parser_637534402, singleLine_637534310);
                    var Temporary1 = elem_637534404;
                    if (ConstSet40[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
                  if ((Temporary1.tag == 0)) {
                  var Temporary2 = lastStr_637534313;
                  if (ConstSet41[Temporary2.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary2.isText, NTI33554466)); }
                  if (image_637534401) {
                  Temporary3 = "![";
                  }
                  else {
                  Temporary3 = "[";
                  }
                  
                  if (null != Temporary3) { if (null == Temporary2.str) Temporary2.str = Temporary3; else Temporary2.str += Temporary3; };
                  var Temporary4 = elem_637534404;
                  if (ConstSet42[Temporary4.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary4.isText, NTI33554466)); }
                  add_1056967896(elems_637534318, 0, Temporary4.content);
                  lastStr_637534313 = newStr_1056964769("");
                  elems_637534318[0].push(lastStr_637534313);;
                  }
                  else {
                    elems_637534318[0].push(elem_637534404);;
                    lastStr_637534313 = newStr_1056964769("");
                    elems_637534318[0].push(lastStr_637534313);;
                  }
                  
                  result_637534403 = 0;

                return result_637534403;

              }
              var Temporary8;
              var Temporary9;
              var Temporary10;
              var Temporary11;
              var Temporary12;
                var Temporary13;
              var Temporary14;
              var Temporary15;
              var Temporary16;
                var Temporary17;
                var Temporary18;

  var result_637534311 = {Field0: 0, Field1: []};

  BeforeRet: do {
    var escaped_637534312 = false;
    var lastStr_637534313 = newStr_1056964769("");
    var elems_637534318 = [[lastStr_637534313]];
    Label1: do {
      var ch_637534327 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(parser_637534308.pos < ((parser_637534308.str) == null ? 0 : (parser_637534308.str).length))) break Label3;
            ch_637534327 = parser_637534308.str.charCodeAt((parser_637534308.pos + 0));
            Label4: do {
              if (!(escaped_637534312)) {
              var initialPos_637534335 = parser_637534308.pos;
              switch (toJSStr(delim_637534309)) {
              case "":
                break;
              case "*":
                if (nextMatch_1056968520(parser_637534308, makeNimstrLit("**"), 0)) {
                var colontmp__469762146 = parseDelimed_637534307(parser_637534308, makeNimstrLit("**"), singleLine_637534310);
                var finishReason_637534426 = colontmp__469762146["Field0"];
                var parsedElems_637534427 = nimCopy(null, colontmp__469762146["Field1"], NTI637534268);
                if ((finishReason_637534426 == 0)) {
                elems_637534318[0].push(newElem_1056964793(16, parsedElems_637534427));;
                lastStr_637534313 = newStr_1056964769("");
                elems_637534318[0].push(lastStr_637534313);;
                break Label4;
                }
                else {
                  parser_637534308.pos = initialPos_637534335;
                  if (!(surroundedWhitespace_1056968466(parser_637534308, 0))) {
                  var colontmp__469762109 = 0;
                  var colontmp__469762110 = nimCopy(null, elems_637534318[0], NTI637534268);
                  result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762109, Field1: nimCopy(null, colontmp__469762110, NTI637534268)}, NTI637534267);
                  break BeforeRet;
                  }
                  else {
                    var Temporary5 = lastStr_637534313;
                    if (ConstSet8[Temporary5.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary5.isText, NTI33554466)); }
                    add_637534442(Temporary5, "str");
                    break Label4;
                  }
                  
                }
                
                }
                else {
                if ((!(surroundedWhitespace_1056968466(parser_637534308, 0)) && nextMatch_1056968520(parser_637534308, makeNimstrLit("*"), 0))) {
                parser_637534308.pos -= 1;
                var colontmp__469762111 = 0;
                var colontmp__469762112 = nimCopy(null, elems_637534318[0], NTI637534268);
                result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762111, Field1: nimCopy(null, colontmp__469762112, NTI637534268)}, NTI637534267);
                break BeforeRet;
                }
                }
                break;
              case "_":
                if (nextMatch_1056968520(parser_637534308, makeNimstrLit("__"), 0)) {
                var colontmp__469762147 = parseDelimed_637534307(parser_637534308, makeNimstrLit("__"), singleLine_637534310);
                var finishReason_637534450 = colontmp__469762147["Field0"];
                var parsedElems_637534451 = nimCopy(null, colontmp__469762147["Field1"], NTI637534268);
                if ((finishReason_637534450 == 0)) {
                elems_637534318[0].push(newElem_1056964793(19, parsedElems_637534451));;
                lastStr_637534313 = newStr_1056964769("");
                elems_637534318[0].push(lastStr_637534313);;
                break Label4;
                }
                else {
                  parser_637534308.pos = initialPos_637534335;
                  if (onlyNextWhitespace_1056968474(parser_637534308, 0)) {
                  var colontmp__469762113 = 0;
                  var colontmp__469762114 = nimCopy(null, elems_637534318[0], NTI637534268);
                  result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762113, Field1: nimCopy(null, colontmp__469762114, NTI637534268)}, NTI637534267);
                  break BeforeRet;
                  }
                  else {
                    var Temporary6 = lastStr_637534313;
                    if (ConstSet9[Temporary6.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary6.isText, NTI33554466)); }
                    add_637534465(Temporary6, "str");
                    break Label4;
                  }
                  
                }
                
                }
                else {
                if ((onlyNextWhitespace_1056968474(parser_637534308, 0) && nextMatch_1056968520(parser_637534308, makeNimstrLit("_"), 0))) {
                parser_637534308.pos -= 1;
                var colontmp__469762115 = 0;
                var colontmp__469762116 = nimCopy(null, elems_637534318[0], NTI637534268);
                result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762115, Field1: nimCopy(null, colontmp__469762116, NTI637534268)}, NTI637534267);
                break BeforeRet;
                }
                }
                break;
              case " ":
                if ((ConstSet10[ch_637534327] != undefined)) {
                parser_637534308.pos -= 1;
                var colontmp__469762117 = 0;
                var colontmp__469762118 = nimCopy(null, elems_637534318[0], NTI637534268);
                result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762117, Field1: nimCopy(null, colontmp__469762118, NTI637534268)}, NTI637534267);
                break BeforeRet;
                }
                
                break;
              default: 
                if (nextMatch_1056968520(parser_637534308, delim_637534309, 0)) {
                parser_637534308.pos -= 1;
                var colontmp__469762119 = 0;
                var colontmp__469762120 = nimCopy(null, elems_637534318[0], NTI637534268);
                result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762119, Field1: nimCopy(null, colontmp__469762120, NTI637534268)}, NTI637534267);
                break BeforeRet;
                }
                
                break;
              }
              if (((singleLine_637534310 && (nextMatch_1056968520(parser_637534308, makeNimstrLit("\x0D\x0A"), 0) || nextMatch_1056968520(parser_637534308, makeNimstrLit("\x0A"), 0))) || (!(singleLine_637534310) && (nextMatch_1056968520(parser_637534308, makeNimstrLit("\x0D\x0A\x0D\x0A"), 0) || nextMatch_1056968520(parser_637534308, makeNimstrLit("\x0A\x0A"), 0))))) {
              if ((singleLine_637534310 && ((delim_637534309).length == 0))) {
              parser_637534308.pos -= 1;
              }
              else {
                parser_637534308.pos = initialPos_637534335;
              }
              
              if (((delim_637534309).length == 0)) {
              Temporary7 = 1;
              }
              else {
              Temporary7 = 0;
              }
              
              var colontmp__469762121 = Temporary7;
              var colontmp__469762122 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762121, Field1: nimCopy(null, colontmp__469762122, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              else {
              if ((nextMatch_1056968520(parser_637534308, makeNimstrLit("  \x0D\x0A"), 0) || nextMatch_1056968520(parser_637534308, makeNimstrLit("  \x0A"), 0))) {
              elems_637534318[0].push(newElem_1056964793(2, []));;
              lastStr_637534313 = newStr_1056964769("");
              elems_637534318[0].push(lastStr_637534313);;
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("```"), 0)) {
              elems_637534318[0].push(parseCodeBlock_637534286(parser_637534308, 96));;
              lastStr_637534313 = newStr_1056964769("");
              elems_637534318[0].push(lastStr_637534313);;
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("~~~"), 0)) {
              elems_637534318[0].push(parseCodeBlock_637534286(parser_637534308, 126));;
              lastStr_637534313 = newStr_1056964769("");
              elems_637534318[0].push(lastStr_637534313);;
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("^("), 0)) {
              var reasonHEX60gensym38_637534533 = parseAux_637534336(13, makeNimstrLit(")"), parser_637534308, ConstSet14);
              if ((ConstSet15[reasonHEX60gensym38_637534533] != undefined)) {
              var colontmp__469762123 = reasonHEX60gensym38_637534533;
              var colontmp__469762124 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762123, Field1: nimCopy(null, colontmp__469762124, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("**"), 0)) {
              var reasonHEX60gensym40_637534539 = parseAux_637534336(16, makeNimstrLit("**"), parser_637534308, ConstSet16);
              if ((ConstSet17[reasonHEX60gensym40_637534539] != undefined)) {
              var colontmp__469762125 = reasonHEX60gensym40_637534539;
              var colontmp__469762126 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762125, Field1: nimCopy(null, colontmp__469762126, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("__"), 0)) {
              var reasonHEX60gensym42_637534545 = parseAux_637534336(19, makeNimstrLit("__"), parser_637534308, ConstSet18);
              if ((ConstSet19[reasonHEX60gensym42_637534545] != undefined)) {
              var colontmp__469762127 = reasonHEX60gensym42_637534545;
              var colontmp__469762128 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762127, Field1: nimCopy(null, colontmp__469762128, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("~~"), 0)) {
              var reasonHEX60gensym44_637534551 = parseAux_637534336(20, makeNimstrLit("~~"), parser_637534308, ConstSet20);
              if ((ConstSet21[reasonHEX60gensym44_637534551] != undefined)) {
              var colontmp__469762129 = reasonHEX60gensym44_637534551;
              var colontmp__469762130 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762129, Field1: nimCopy(null, colontmp__469762130, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968520(parser_637534308, makeNimstrLit("!["), 0)) {
              var reason_637534556 = bracket_637534400(true, parser_637534308);
              if ((ConstSet43[reason_637534556] != undefined)) {
              var colontmp__469762131 = reason_637534556;
              var colontmp__469762132 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762131, Field1: nimCopy(null, colontmp__469762132, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 123, 0)) {
              var Temporary8 = lastStr_637534313;
              if (ConstSet44[Temporary8.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary8.isText, NTI33554466)); }
              if (null != (Temporary9 = parseCurly_637534218(parser_637534308), Temporary9)) { if (null == Temporary8.str) Temporary8.str = Temporary9; else Temporary8.str += Temporary9; };
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 91, 0)) {
              var reason_637534562 = bracket_637534400(false, parser_637534308);
              if ((ConstSet45[reason_637534562] != undefined)) {
              var colontmp__469762133 = reason_637534562;
              var colontmp__469762134 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762133, Field1: nimCopy(null, colontmp__469762134, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 96, 0)) {
              var reasonHEX60gensym49_637534568 = parseAux_637534336(18, makeNimstrLit("`"), parser_637534308, ConstSet46);
              if ((ConstSet47[reasonHEX60gensym49_637534568] != undefined)) {
              var colontmp__469762135 = reasonHEX60gensym49_637534568;
              var colontmp__469762136 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762135, Field1: nimCopy(null, colontmp__469762136, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if ((noAdjacentWhitespace_1056968478(parser_637534308, 0) && nextMatch_1056968482(parser_637534308, 94, 0))) {
              var reasonHEX60gensym51_637534574 = parseAux_637534336(13, makeNimstrLit(" "), parser_637534308, ConstSet48);
              if ((ConstSet49[reasonHEX60gensym51_637534574] != undefined)) {
              var colontmp__469762137 = reasonHEX60gensym51_637534574;
              var colontmp__469762138 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762137, Field1: nimCopy(null, colontmp__469762138, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if ((!(surroundedWhitespace_1056968466(parser_637534308, 0)) && nextMatch_1056968482(parser_637534308, 42, 0))) {
              var reasonHEX60gensym53_637534580 = parseAux_637534336(15, makeNimstrLit("*"), parser_637534308, ConstSet50);
              if ((ConstSet51[reasonHEX60gensym53_637534580] != undefined)) {
              var colontmp__469762139 = reasonHEX60gensym53_637534580;
              var colontmp__469762140 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762139, Field1: nimCopy(null, colontmp__469762140, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if ((onlyPrevWhitespace_1056968470(parser_637534308, 0) && nextMatch_1056968482(parser_637534308, 95, 0))) {
              var reasonHEX60gensym55_637534586 = parseAux_637534336(15, makeNimstrLit("_"), parser_637534308, ConstSet52);
              if ((ConstSet53[reasonHEX60gensym55_637534586] != undefined)) {
              var colontmp__469762141 = reasonHEX60gensym55_637534586;
              var colontmp__469762142 = nimCopy(null, elems_637534318[0], NTI637534268);
              result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762141, Field1: nimCopy(null, colontmp__469762142, NTI637534268)}, NTI637534267);
              break BeforeRet;
              }
              
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 60, 0)) {
              parser_637534308.pos -= 1;
              if (!((parser_637534308.inlineHtmlHandler == null))) {
              Temporary10 = parser_637534308.inlineHtmlHandler(parser_637534308.str, parser_637534308.pos);
              }
              else {
              Temporary10 = parseXml_1073742018(cstrToNimstr(parser_637534308.str), parser_637534308.pos);
              }
              
              var colontmp__469762198 = nimCopy(null, Temporary10, NTI1056964707);
              var change_637534598 = colontmp__469762198["Field0"];
              var pos_637534599 = colontmp__469762198["Field1"];
              if (change_637534598) {
              var Temporary11 = lastStr_637534313;
              if (ConstSet80[Temporary11.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary11.isText, NTI33554466)); }
              if (null != (Temporary12 = HEX5BHEX5D_1056964635(parser_637534308.str, HEX2EHEX2E_922747729(parser_637534308.pos, (pos_637534599 - 1))), Temporary12)) { if (null == Temporary11.str) Temporary11.str = Temporary12; else Temporary11.str += Temporary12; };
              parser_637534308.pos = (pos_637534599 - 1);
              }
              else {
                var Temporary13 = lastStr_637534313;
                if (ConstSet81[Temporary13.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary13.isText, NTI33554466)); }
              if (null != "&lt;") { if (null == Temporary13.str) Temporary13.str = "&lt;"; else Temporary13.str += "&lt;"; };
              }
              
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 62, 0)) {
              parser_637534308.pos -= 1;
              var Temporary14 = lastStr_637534313;
              if (ConstSet82[Temporary14.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary14.isText, NTI33554466)); }
              if (null != "&gt;") { if (null == Temporary14.str) Temporary14.str = "&gt;"; else Temporary14.str += "&gt;"; };
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 38, 0)) {
              var Temporary15 = lastStr_637534313;
              if (ConstSet83[Temporary15.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary15.isText, NTI33554466)); }
              if (null != (Temporary16 = parseAmpStr_637534242(parser_637534308), Temporary16)) { if (null == Temporary15.str) Temporary15.str = Temporary16; else Temporary15.str += Temporary16; };
              }
              else {
              if (nextMatch_1056968482(parser_637534308, 92, 0)) {
              parser_637534308.pos -= 1;
              escaped_637534312 = true;
              }
              else {
                var Temporary17 = lastStr_637534313;
                if (ConstSet86[Temporary17.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary17.isText, NTI33554466)); }
              add_1056964624(Temporary17, "str", ch_637534327);
              }
              }}}}}}}}}}}}}}}}}}
              }
              else {
                var Temporary18 = lastStr_637534313;
                if (ConstSet87[Temporary18.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary18.isText, NTI33554466)); }
                add_1056964624(Temporary18, "str", ch_637534327);
                escaped_637534312 = false;
              }
              
            } while (false);
            parser_637534308.pos += 1;
          }
      } while (false);
    } while (false);
    var colontmp__469762144 = 1;
    var colontmp__469762145 = nimCopy(null, elems_637534318[0], NTI637534268);
    result_637534311 = nimCopy(result_637534311, {Field0: colontmp__469762144, Field1: nimCopy(null, colontmp__469762145, NTI637534268)}, NTI637534267);
  } while (false);

  return result_637534311;

}

function parseInline_637536097(parser_637536098, singleLine_637536099) {
  var result_637536100 = [];

    var colontmp__469762106 = parseDelimed_637534307(parser_637536098, [], singleLine_637536099);
    var finishReason_637536101 = colontmp__469762106["Field0"];
    var elems_637536102 = nimCopy(null, colontmp__469762106["Field1"], NTI637534268);
    result_637536100 = nimCopy(null, elems_637536102, NTI637534268);

  return result_637536100;

}

function add_1056967886(elem_1056967887, cont_1056967888) {
    var Temporary1;

    var Temporary1 = elem_1056967887;
    if (ConstSet88[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    Temporary1.content.push(cont_1056967888);;

  
}

function parseId_637536122(parser_637536123, startChar_637536124) {
    var Temporary1;

  var result_637536125 = [null];

    switch (startChar_637536124) {
    case 40:
      Temporary1 = 41;
      break;
    case 91:
      Temporary1 = 93;
      break;
    case 123:
      Temporary1 = 125;
      break;
    default: 
      Temporary1 = 0;
      break;
    }
    var idDelim_637536126 = Temporary1;
    result_637536125[0] = "";
    Label2: do {
        Label3: while (true) {
          var ch_637536127 = parser_637536123.str.charCodeAt((parser_637536123.pos + 0));
        if (!nextMatch_1056968491(parser_637536123, ConstSet90, 0)) break Label3;
          add_1056964624(result_637536125, 0, ch_637536127);
        }
    } while (false);
    var _ = nextMatch_1056968482(parser_637536123, idDelim_637536126, 0);

  return result_637536125[0];

}

function add_1056967929(elem_1056967930, str_1056967931) {
    var Temporary1;

    var Temporary1 = elem_1056967930;
    if (ConstSet92[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    Temporary1.content.push(newStr_1056964769(str_1056967931));;

  
}

function HEX5BHEX5D_1056967843(s_1056967845, i_1056967846) {
  var result_1056967847 = null;
  var result_1056967847_Idx = 0;

    result_1056967847 = s_1056967845; result_1056967847_Idx = ((s_1056967845).length - i_1056967846);

  return [result_1056967847, result_1056967847_Idx];

}

function HEX5BHEX5D_1056967839(elem_1056967840, i_1056967841) {
    var Temporary1;
    var Temporary2;

  var result_1056967842 = null;

    var Temporary1 = elem_1056967840;
    if (ConstSet93[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    result_1056967842 = (Temporary2 = HEX5BHEX5D_1056967843(Temporary1.content, i_1056967841), Temporary2)[0][Temporary2[1]];

  return result_1056967842;

}

function add_1056967893(elem_1056967894, cont_1056967895) {
    var Temporary1;

    var Temporary1 = elem_1056967894;
    if (ConstSet94[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    add_1056967896(Temporary1, "content", cont_1056967895);

  
}

function HEX5BHEX5DHEX3D_1056967878(s_1056967880, i_1056967881, x_1056967882) {
    s_1056967880[((s_1056967880).length - i_1056967881)] = x_1056967882;

  
}

function HEX5BHEX5DHEX3D_1056967874(elem_1056967875, i_1056967876, el_1056967877) {
    var Temporary1;

    var Temporary1 = elem_1056967875;
    if (ConstSet98[Temporary1.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    HEX5BHEX5DHEX3D_1056967878(Temporary1.content, i_1056967876, el_1056967877);

  
}

function peekPrevMatch_1056968447(parser_1056968448, pat_1056968449, offset_1056968450) {
  var result_1056968451 = false;

    result_1056968451 = (anyPrev_1056968367(parser_1056968448, (offset_1056968450 - (pat_1056968449).length)) && peekMatch_1056968417(parser_1056968448, pat_1056968449, (offset_1056968450 - (pat_1056968449).length)));

  return result_1056968451;

}

function style_1056967476(elem_1056967477, style_1056967478) {
    attr_1056965226(elem_1056967477, "style", style_1056967478);

  
}

function getOrDefault_637536354(t_637536357, key_637536358, default_637536359) {
    var Temporary1;

  var result_637536360 = [];

    var hcHEX60gensym142_637536363 = [0];
    var indexHEX60gensym142_637536370 = rawGet_637534869(t_637536357, key_637536358, hcHEX60gensym142_637536363, 0);
    if ((0 <= indexHEX60gensym142_637536370)) {
    Temporary1 = t_637536357.data[indexHEX60gensym142_637536370].Field2;
    }
    else {
    Temporary1 = default_637536359;
    }
    
    result_637536360 = nimCopy(null, Temporary1, NTI1056964692);

  return result_637536360;

}

function nsuStrip(s_654313630, leading_654313631, trailing_654313632, chars_654313633) {
          var Temporary5;

  var result_654313634 = [];

    var first_654313635 = 0;
    var last_654313636 = ((s_654313630).length - 1);
    if (leading_654313631) {
    Label1: do {
        Label2: while (true) {
        if (!((first_654313635 <= last_654313636) && (chars_654313633[s_654313630[first_654313635]] != undefined))) break Label2;
          first_654313635 += 1;
        }
    } while (false);
    }
    
    if (trailing_654313632) {
    Label3: do {
        Label4: while (true) {
          if (!(first_654313635 <= last_654313636)) Temporary5 = false; else {            Temporary5 = (chars_654313633[s_654313630[last_654313636]] != undefined);          }        if (!Temporary5) break Label4;
          last_654313636 -= 1;
        }
    } while (false);
    }
    
    result_654313634 = nimCopy(null, substr_33557907(s_654313630, first_654313635, last_654313636), NTI33554439);

  return result_654313634;

}

function parseTopLevel_637536128(parser_637536129) {
            var Temporary4;
              var Temporary5;
              var Temporary6;
              var Temporary9;
              
function skipWhitespaceUntilNewline_637536164(parser_637536165) {
                var result_637536166 = false;

                BeforeRet: do {
                  var i_637536167 = 0;
                  Label1: do {
                      Label2: while (true) {
                      if (!((parser_637536165.pos + i_637536167) < ((parser_637536165.str) == null ? 0 : (parser_637536165.str).length))) break Label2;
                        var ch_637536168 = parser_637536165.str.charCodeAt((parser_637536165.pos + i_637536167));
                        switch (ch_637536168) {
                        case 10:
                          parser_637536165.pos += i_637536167;
                          result_637536166 = true;
                          break BeforeRet;
                          break;
                        case 9:
                        case 11:
                        case 12:
                        case 13:
                        case 32:
                          break;
                        default: 
                          result_637536166 = false;
                          break BeforeRet;
                          break;
                        }
                        i_637536167 += 1;
                      }
                  } while (false);
                } while (false);

                return result_637536166;

              }
                  var Temporary10;
                  var Temporary11;
                  var Temporary12;
                    var Temporary13;
                    var Temporary14;
                    var Temporary15;
                    var Temporary16;
                    var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary22;
                  var Temporary25;
                  var Temporary26;

  var result_637536130 = [];

    Label1: do {
      var firstCh_637536133 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(parser_637536129.pos < ((parser_637536129.str) == null ? 0 : (parser_637536129.str).length))) break Label3;
            firstCh_637536133 = parser_637536129.str.charCodeAt((parser_637536129.pos + 0));
            if ((ConstSet1[firstCh_637536133] != undefined)) {
            if (!((parser_637536129.topLevelLast == null))) {
            result_637536130.push(paragraphIfText_1056964819(parser_637536129.topLevelLast));;
            parser_637536129.topLevelLast = null;
            }
            
            }
            else {
            if (!((parser_637536129.topLevelLast == null))) {
            var Temporary4 = parser_637536129.topLevelLast;
            if (ConstSet2[Temporary4.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary4.isText, NTI33554466)); }
            switch (Temporary4.tag) {
            case 9:
              if (nextMatch_1056968491(parser_637536129, ConstSet4, 1)) {
              var item_637536151 = newElem_1056964793(11, []);
              var Temporary5 = item_637536151;
              if (ConstSet5[Temporary5.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary5.isText, NTI33554466)); }
              Temporary5.content = nimCopy(null, parseInline_637536097(parser_637536129, true), NTI637535298);
              add_1056967886(parser_637536129.topLevelLast, item_637536151);
              }
              else {
              if (nextMatch_1056968491(parser_637536129, ConstSet89, 1)) {
              var item_637536152 = newElem_1056964793(11, []);
              attr_1056965226(item_637536152, "id", parseId_637536122(parser_637536129, parser_637536129.str.charCodeAt((parser_637536129.pos + -1))));
              var Temporary6 = item_637536152;
              if (ConstSet91[Temporary6.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary6.isText, NTI33554466)); }
              Temporary6.content = nimCopy(null, parseInline_637536097(parser_637536129, true), NTI637535298);
              add_1056967886(parser_637536129.topLevelLast, item_637536152);
              }
              else {
                add_1056967929(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), "\n");
                add_1056967893(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), parseInline_637536097(parser_637536129, true));
              }
              }
              break;
            case 10:
              var i_637536153 = 0;
              Label7: do {
                  Label8: while (true) {
                  if (!peekMatch_1056968382(parser_637536129, ConstSet95, i_637536153)) break Label8;
                    i_637536153 += 1;
                  }
              } while (false);
              if (nextMatch_1056968482(parser_637536129, 46, i_637536153)) {
              var item_637536158 = newElem_1056964793(11, []);
                var ch_637536159 = parser_637536129.str.charCodeAt((parser_637536129.pos + 0));
              if (nextMatch_1056968491(parser_637536129, ConstSet96, 0)) {
              attr_1056965226(item_637536158, "id", parseId_637536122(parser_637536129, ch_637536159));
              }
              
              var Temporary9 = item_637536158;
              if (ConstSet97[Temporary9.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary9.isText, NTI33554466)); }
              Temporary9.content = nimCopy(null, parseInline_637536097(parser_637536129, true), NTI637535298);
              add_1056967886(parser_637536129.topLevelLast, item_637536158);
              }
              else {
                add_1056967929(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), "\n ");
                add_1056967893(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), parseInline_637536097(parser_637536129, true));
              }
              
              break;
            case 12:
              if ((firstCh_637536133 == 62)) {
              parser_637536129.pos += 1;
              }
              
              var rem_637536181 = skipWhitespaceUntilNewline_637536164(parser_637536129);
              if (rem_637536181) {
              if ((firstCh_637536133 == 62)) {
              HEX5BHEX5DHEX3D_1056967874(parser_637536129.topLevelLast, 1, paragraphIfText_1056964819(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1)));
              add_1056967929(parser_637536129.topLevelLast, "\n");
              if (peekPrevMatch_1056968447(parser_637536129, makeNimstrLit("  "), 0)) {
              add_1056967886(parser_637536129.topLevelLast, newElem_1056964793(2, []));
              }
              
              }
              else {
                HEX5BHEX5DHEX3D_1056967874(parser_637536129.topLevelLast, 1, paragraphIfText_1056964819(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1)));
                result_637536130.push(parser_637536129.topLevelLast);;
                if (peekPrevMatch_1056968447(parser_637536129, makeNimstrLit("  "), 0)) {
                result_637536130.push(newElem_1056964793(2, []));;
                }
                
              }
              
              }
              else {
              if (HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1).isText) {
              add_1056967929(parser_637536129.topLevelLast, "\n");
              add_1056967886(parser_637536129.topLevelLast, newElem_1056964793(1, parseInline_637536097(parser_637536129, true)));
              }
              else {
              if ((ConstSet99[firstCh_637536133] != undefined)) {
              add_1056967929(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), "\n ");
              add_1056967893(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), parseInline_637536097(parser_637536129, true));
              }
              else {
                add_1056967929(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), "\n");
                add_1056967893(HEX5BHEX5D_1056967839(parser_637536129.topLevelLast, 1), parseInline_637536097(parser_637536129, true));
              }
              }}
              break;
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 7:
            case 8:
            case 11:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
              result_637536130.push(paragraphIfText_1056964819(parser_637536129.topLevelLast));;
              parser_637536129.topLevelLast = null;
              parser_637536129.pos -= 1;
              break;
            }
            }
            else {
              switch (firstCh_637536133) {
              case 9:
              case 11:
              case 12:
              case 32:
                  if (!!(((result_637536130).length == 0))) Temporary12 = false; else {                    Temporary12 = !((Temporary13 = HEX5BHEX5D_1056967843(result_637536130, 1), Temporary13)[0][Temporary13[1]].isText);                  }                  if (!Temporary12) Temporary11 = false; else {                    var Temporary15 = (Temporary14 = HEX5BHEX5D_1056967843(result_637536130, 1), Temporary14)[0][Temporary14[1]];
                    if (ConstSet101[Temporary15.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary15.isText, NTI33554466)); }
                    Temporary11 = (ConstSet100[Temporary15.tag] != undefined);                  }                  if (!Temporary11) Temporary10 = false; else {                    var Temporary17 = (Temporary16 = HEX5BHEX5D_1056967843(result_637536130, 1), Temporary16)[0][Temporary16[1]];
                    if (ConstSet102[Temporary17.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary17.isText, NTI33554466)); }
                    Temporary10 = !(((Temporary17.content).length == 0));                  }                if (Temporary10) {
                add_1056967929(HEX5BHEX5D_1056967839((Temporary18 = HEX5BHEX5D_1056967843(result_637536130, 1), Temporary18)[0][Temporary18[1]], 1), "\n ");
                add_1056967893(HEX5BHEX5D_1056967839((Temporary19 = HEX5BHEX5D_1056967843(result_637536130, 1), Temporary19)[0][Temporary19[1]], 1), parseInline_637536097(parser_637536129, false));
                }
                else {
                  parser_637536129.topLevelLast = newElem_1056964793(1, parseInline_637536097(parser_637536129, true));
                }
                
                break;
              case 35:
                var level_637536246 = 1;
                Label20: do {
                    Label21: while (true) {
                    if (!((level_637536246 < 6) && peekMatch_1056968377(parser_637536129, 35, level_637536246))) break Label21;
                      level_637536246 += 1;
                    }
                } while (false);
                parser_637536129.pos += level_637536246;
                parser_637536129.topLevelLast = newElem_1056964793((2 + level_637536246), []);
                if (nextMatch_1056968482(parser_637536129, 124, 0)) {
                style_1056967476(parser_637536129.topLevelLast, "text-align:center");
                }
                else {
                if (nextMatch_1056968482(parser_637536129, 60, 0)) {
                style_1056967476(parser_637536129.topLevelLast, "text-align:left");
                }
                else {
                if (nextMatch_1056968482(parser_637536129, 62, 0)) {
                style_1056967476(parser_637536129.topLevelLast, "text-align:right");
                }
                }}
                  var ch_637536255 = parser_637536129.str.charCodeAt((parser_637536129.pos + 0));
                if (nextMatch_1056968491(parser_637536129, ConstSet103, 0)) {
                attr_1056965226(parser_637536129.topLevelLast, "id", parseId_637536122(parser_637536129, ch_637536255));
                }
                
                add_1056967893(parser_637536129.topLevelLast, parseInline_637536097(parser_637536129, true));
                break;
              case 42:
              case 45:
              case 43:
                if (nextMatch_1056968491(parser_637536129, ConstSet104, 1)) {
                parser_637536129.topLevelLast = newElem_1056964793(9, []);
                var item_637536256 = newElem_1056964793(11, []);
                add_1056967893(item_637536256, parseInline_637536097(parser_637536129, true));
                add_1056967886(parser_637536129.topLevelLast, item_637536256);
                }
                else {
                if (nextMatch_1056968491(parser_637536129, ConstSet105, 1)) {
                parser_637536129.topLevelLast = newElem_1056964793(9, []);
                var item_637536257 = newElem_1056964793(11, []);
                attr_1056965226(item_637536257, "id", parseId_637536122(parser_637536129, parser_637536129.str.charCodeAt((parser_637536129.pos + -1))));
                var Temporary22 = item_637536257;
                if (ConstSet106[Temporary22.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary22.isText, NTI33554466)); }
                Temporary22.content = nimCopy(null, parseInline_637536097(parser_637536129, true), NTI637535298);
                add_1056967886(parser_637536129.topLevelLast, item_637536257);
                }
                else {
                  parser_637536129.topLevelLast = newElem_1056964793(1, parseInline_637536097(parser_637536129, false));
                }
                }
                break;
              case 48:
              case 49:
              case 50:
              case 51:
              case 52:
              case 53:
              case 54:
              case 55:
              case 56:
              case 57:
                var originalPos_637536258 = parser_637536129.pos;
                parser_637536129.pos += 1;
                Label23: do {
                    Label24: while (true) {
                    if (!nextMatch_1056968491(parser_637536129, ConstSet107, 0)) break Label24;
                    }
                } while (false);
                if (nextMatch_1056968482(parser_637536129, 46, 0)) {
                parser_637536129.topLevelLast = newElem_1056964793(10, []);
                var item_637536263 = newElem_1056964793(11, []);
                  var ch_637536264 = parser_637536129.str.charCodeAt((parser_637536129.pos + 0));
                if (nextMatch_1056968491(parser_637536129, ConstSet108, 0)) {
                attr_1056965226(item_637536263, "id", parseId_637536122(parser_637536129, ch_637536264));
                }
                
                add_1056967893(item_637536263, parseInline_637536097(parser_637536129, true));
                add_1056967886(parser_637536129.topLevelLast, item_637536263);
                }
                else {
                  parser_637536129.pos = originalPos_637536258;
                  parser_637536129.topLevelLast = newElem_1056964793(1, parseInline_637536097(parser_637536129, false));
                }
                
                break;
              case 62:
                parser_637536129.topLevelLast = newElem_1056964793(12, []);
                parser_637536129.pos += 1;
                  var ch_637536269 = parser_637536129.str.charCodeAt((parser_637536129.pos + 0));
                if (nextMatch_1056968491(parser_637536129, ConstSet109, 0)) {
                attr_1056965226(parser_637536129.topLevelLast, "id", parseId_637536122(parser_637536129, ch_637536269));
                }
                
                add_1056967886(parser_637536129.topLevelLast, newElem_1056964793(1, parseInline_637536097(parser_637536129, true)));
                break;
              case 91:
                var initialPos_637536270 = parser_637536129.pos;
                parser_637536129.pos += 1;
                var refNameFailed_637536275 = [false];
                var refName_637536276 = parseReferenceName_637534700(parser_637536129, refNameFailed_637536275, 0);
                  if (!!(refNameFailed_637536275[0])) Temporary26 = false; else {                    parser_637536129.pos += 1;
                    Temporary26 = nextMatch_1056968482(parser_637536129, 58, 0);                  }                  if (!Temporary26) Temporary25 = false; else {                    var colontmp__469762277 = parseLink_637534635(parser_637536129, true);
                    var correct_637536281 = colontmp__469762277["Field0"];
                    var link_637536282 = nimCopy(null, colontmp__469762277["Field1"], NTI33554439);
                    var tip_637536283 = nimCopy(null, colontmp__469762277["Field2"], NTI33554439);
                    Temporary25 = correct_637536281;                  }                if (Temporary25) {
                Label27: do {
                  var el_637536427 = null;
                  var el_637536427_Idx = 0;
                  var colontmp__469762092 = [];
                  colontmp__469762092 = getOrDefault_637536354(parser_637536129.linkReferrers, refName_637536276, []);
                  var i_469762093 = 0;
                  var L_469762094 = (colontmp__469762092).length;
                  Label28: do {
                      Label29: while (true) {
                      if (!(i_469762093 < L_469762094)) break Label29;
                        el_637536427 = colontmp__469762092; el_637536427_Idx = i_469762093;
                        if (!(((tip_637536283).length == 0))) {
                        attrEscaped_1056966772(el_637536427[el_637536427_Idx], "title", toJSStr(tip_637536283));
                        }
                        
                        setLink_1056967822(parser_637536129, el_637536427[el_637536427_Idx], toJSStr(nsuStrip(link_637536282, true, true, ConstSet110)));
                        i_469762093 += 1;
                      }
                  } while (false);
                } while (false);
                }
                else {
                  parser_637536129.pos = initialPos_637536270;
                  parser_637536129.topLevelLast = newElem_1056964793(1, parseInline_637536097(parser_637536129, false));
                }
                
                break;
              default: 
                if (nextMatch_1056968520(parser_637536129, makeNimstrLit("```"), 0)) {
                result_637536130.push(parseCodeBlock_637534286(parser_637536129, 96));;
                parser_637536129.topLevelLast = null;
                }
                else {
                if (nextMatch_1056968520(parser_637536129, makeNimstrLit("~~~"), 0)) {
                result_637536130.push(parseCodeBlock_637534286(parser_637536129, 126));;
                parser_637536129.topLevelLast = null;
                }
                else {
                  parser_637536129.topLevelLast = newElem_1056964793(1, parseInline_637536097(parser_637536129, false));
                }
                }
                break;
              }
            }
            }
            parser_637536129.pos += 1;
          }
      } while (false);
    } while (false);
    if (!((parser_637536129.topLevelLast == null))) {
    result_637536130.push(parser_637536129.topLevelLast);;
    parser_637536129.topLevelLast = null;
    }
    

  return result_637536130;

}

function parseMarggers_620756995(parser_620756996) {
  var result_620756997 = [];

    result_620756997 = nimCopy(null, parseTopLevel_637536128(parser_620756996), NTI637535316);

  return result_620756997;

}

function parseMarggers_620756998(text_620756999) {
  var result_620757000 = [];

    var parser_620757001 = newMarggersParser_1056964742(text_620756999);
    result_620757000 = nimCopy(null, parseMarggers_620756995(parser_620757001), NTI620756996);

  return result_620757000;

}

function len_1056967990(t_1056967993) {
  var result_1056967994 = 0;

    result_1056967994 = t_1056967993.counter;

  return result_1056967994;

}

function add_1056968329(x_1056968331, x_1056968331_Idx) {
    if (null != " ") { if (null == x_1056968331[x_1056968331_Idx]) x_1056968331[x_1056968331_Idx] = " "; else x_1056968331[x_1056968331_Idx] += " "; };

  
}

function add_1056968333(x_1056968335, x_1056968335_Idx) {
    if (null != ">") { if (null == x_1056968335[x_1056968335_Idx]) x_1056968335[x_1056968335_Idx] = ">"; else x_1056968335[x_1056968335_Idx] += ">"; };

  
}

function isEmpty_1056967832(tag_1056967833) {
    var Temporary1;

  var result_1056967834 = false;

    switch (tag_1056967833) {
    case 2:
    case 21:
    case 22:
      Temporary1 = true;
      break;
    default: 
      Temporary1 = false;
      break;
    }
    result_1056967834 = Temporary1;

  return result_1056967834;

}

function toCstring_1056968317(elem_1056968318) {
    var Temporary1;
      var Temporary2;
      var Temporary3;
        var Temporary5;
        var Temporary9;
              var Temporary12;
        var Temporary13;
      var Temporary14;
      var Temporary15;

  var result_1056968319 = [null];

    if (elem_1056968318.isText) {
    var Temporary1 = elem_1056968318;
    if (ConstSet111[Temporary1.isText]===undefined) { raiseFieldError2(makeNimstrLit("field \'str\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary1.isText, NTI33554466)); }
    result_1056968319[0] = Temporary1.str;
    }
    else {
      result_1056968319[0] = "<";
      var Temporary2 = elem_1056968318;
      if (ConstSet112[Temporary2.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary2.isText, NTI33554466)); }
      if (null != (Temporary3 = toJSStr(reprEnum(Temporary2.tag, NTI1056964668)), Temporary3)) { if (null == result_1056968319[0]) result_1056968319[0] = Temporary3; else result_1056968319[0] += Temporary3; };
      Label4: do {
        var attrName_1056968327 = null;
        var attrValue_1056968328 = null;
        var colontmp__469762281 = ({data: [], counter: 0, first: 0, last: 0});
        var Temporary5 = elem_1056968318;
        if (ConstSet113[Temporary5.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'attrs\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary5.isText, NTI33554466)); }
        colontmp__469762281 = nimCopy(colontmp__469762281, Temporary5.attrs, NTI1056964679);
        var L_469762283 = len_1056967990(colontmp__469762281);
        if ((0 < colontmp__469762281.counter)) {
        var h_469762284 = colontmp__469762281.first;
        Label6: do {
            Label7: while (true) {
            if (!(0 <= h_469762284)) break Label7;
              var nxt_469762286 = colontmp__469762281.data[h_469762284].Field1;
              if (isFilled_671088671(colontmp__469762281.data[h_469762284].Field0)) {
              attrName_1056968327 = colontmp__469762281.data[h_469762284].Field2;
              attrValue_1056968328 = colontmp__469762281.data[h_469762284].Field3;
              add_1056968329(result_1056968319, 0);
              if (null != attrName_1056968327) { if (null == result_1056968319[0]) result_1056968319[0] = attrName_1056968327; else result_1056968319[0] += attrName_1056968327; };
              if (!((((attrValue_1056968328) == null ? 0 : (attrValue_1056968328).length) == 0))) {
              if (null != "=\"") { if (null == result_1056968319[0]) result_1056968319[0] = "=\""; else result_1056968319[0] += "=\""; };
              if (null != attrValue_1056968328) { if (null == result_1056968319[0]) result_1056968319[0] = attrValue_1056968328; else result_1056968319[0] += attrValue_1056968328; };
              if (null != "\"") { if (null == result_1056968319[0]) result_1056968319[0] = "\""; else result_1056968319[0] += "\""; };
              }
              
              }
              
              h_469762284 = nxt_469762286;
            }
        } while (false);
        }
        
      } while (false);
      add_1056968333(result_1056968319, 0);
      Label8: do {
        var cont_1056968340 = null;
        var cont_1056968340_Idx = 0;
        var colontmp__469762288 = [];
        var Temporary9 = elem_1056968318;
        if (ConstSet114[Temporary9.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'content\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary9.isText, NTI33554466)); }
        colontmp__469762288 = Temporary9.content;
        var i_469762289 = 0;
        var L_469762290 = (colontmp__469762288).length;
        Label10: do {
            Label11: while (true) {
            if (!(i_469762289 < L_469762290)) break Label11;
              cont_1056968340 = colontmp__469762288; cont_1056968340_Idx = i_469762289;
              if (null != (Temporary12 = toCstring_1056968317(cont_1056968340[cont_1056968340_Idx]), Temporary12)) { if (null == result_1056968319[0]) result_1056968319[0] = Temporary12; else result_1056968319[0] += Temporary12; };
              i_469762289 += 1;
            }
        } while (false);
      } while (false);
        var Temporary13 = elem_1056968318;
        if (ConstSet115[Temporary13.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary13.isText, NTI33554466)); }
      if (!(isEmpty_1056967832(Temporary13.tag))) {
      if (null != "</") { if (null == result_1056968319[0]) result_1056968319[0] = "</"; else result_1056968319[0] += "</"; };
      var Temporary14 = elem_1056968318;
      if (ConstSet116[Temporary14.isText]!==undefined) { raiseFieldError2(makeNimstrLit("field \'tag\' is not accessible for type \'MarggersElement\' using \'isText = "), reprDiscriminant(Temporary14.isText, NTI33554466)); }
      if (null != (Temporary15 = toJSStr(reprEnum(Temporary14.tag, NTI1056964668)), Temporary15)) { if (null == result_1056968319[0]) result_1056968319[0] = Temporary15; else result_1056968319[0] += Temporary15; };
      add_1056968333(result_1056968319, 0);
      }
      
    }
    

  return result_1056968319[0];

}

function convertMarggers_469762051(text_469762052) {
            var Temporary4;

  var result_469762053 = null;

    result_469762053 = "";
    Label1: do {
      var elem_469762057 = null;
      var elem_469762057_Idx = 0;
      var colontmp__469762082 = [];
      colontmp__469762082 = parseMarggers_620756998(text_469762052);
      var i_469762084 = 0;
      var L_469762085 = (colontmp__469762082).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_469762084 < L_469762085)) break Label3;
            elem_469762057 = colontmp__469762082; elem_469762057_Idx = i_469762084;
            if (null != (Temporary4 = toCstring_1056968317(elem_469762057[elem_469762057_Idx]), Temporary4)) { if (null == result_469762053) result_469762053 = Temporary4; else result_469762053 += Temporary4; };
            if (null != "\n") { if (null == result_469762053) result_469762053 = "\n"; else result_469762053 += "\n"; };
            i_469762084 += 1;
          }
      } while (false);
    } while (false);

  return result_469762053;

}

function convert() {
    var input_469762079 = input_469762058();
    var output_469762080 = convertMarggers_469762051(input_469762079);
    document.getElementById("output").innerHTML = output_469762080;

  
}

function convertToSource() {
    var input_469762293 = input_469762058();
    var output_469762294 = convertMarggers_469762051(input_469762293);
    var sourceBlock_469762295 = document.createElement("pre");
    sourceBlock_469762295.textContent = output_469762294;
    var outputElement_469762296 = document.getElementById("output");
    outputElement_469762296.innerHTML = "";
    outputElement_469762296.appendChild(sourceBlock_469762295);

  
}

function filename_469762297() {
  var result_469762298 = null;

    result_469762298 = document.getElementById("filename").value || "output.html";

  return result_469762298;

}

function download() {
    var input_469762303 = input_469762058();
    var output_469762304 = convertMarggers_469762051(input_469762303);
    var blob_469762311 = new Blob([output_469762304], {type: 'text/html'});
    var url_469762312 = window.URL.createObjectURL(blob_469762311);
    var a_469762313 = document.createElement("a");
    a_469762313.style.display = "none";
    a_469762313.setAttribute("href", url_469762312);
    a_469762313.setAttribute("download", filename_469762297());
    document.body.appendChild(a_469762313);
    a_469762313.click();
    window.URL.revokeObjectURL(url_469762312);
    document.body.removeChild(a_469762313);

  
}
